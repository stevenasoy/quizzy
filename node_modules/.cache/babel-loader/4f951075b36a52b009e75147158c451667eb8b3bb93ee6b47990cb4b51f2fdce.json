{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuth } from '../composables/useAuth';\nimport { useQuizHistory } from '../composables/useQuizHistory';\nexport default {\n  __name: 'Quizzes',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var router = useRouter();\n    var _useAuth = useAuth(),\n      user = _useAuth.user;\n    var _useQuizHistory = useQuizHistory(),\n      supabaseHistory = _useQuizHistory.quizHistory,\n      fetchQuizzes = _useQuizHistory.fetchQuizzes;\n    var quizHistory = ref([]);\n    var isLoading = ref(false);\n    var error = ref(null);\n\n    // Load quiz history based on auth state\n    var loadQuizHistory = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$fetchQuizzes, data, fetchError, savedHistory;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              isLoading.value = true;\n              error.value = null;\n              _context.prev = 2;\n              if (!user.value) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 6;\n              return fetchQuizzes();\n            case 6:\n              _yield$fetchQuizzes = _context.sent;\n              data = _yield$fetchQuizzes.data;\n              fetchError = _yield$fetchQuizzes.error;\n              if (!fetchError) {\n                _context.next = 11;\n                break;\n              }\n              throw fetchError;\n            case 11:\n              quizHistory.value = data || [];\n              _context.next = 16;\n              break;\n            case 14:\n              // Load from localStorage for non-authenticated users\n              savedHistory = localStorage.getItem('quizHistory');\n              quizHistory.value = savedHistory ? JSON.parse(savedHistory) : [];\n            case 16:\n              _context.next = 23;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error loading quiz history:', _context.t0);\n              error.value = 'Failed to load quiz history';\n              quizHistory.value = [];\n            case 23:\n              _context.prev = 23;\n              isLoading.value = false;\n              return _context.finish(23);\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 18, 23, 26]]);\n      }));\n      return function loadQuizHistory() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Watch for auth state changes\n    watch(function () {\n      return user.value;\n    }, function () {\n      loadQuizHistory();\n    });\n    onMounted(function () {\n      loadQuizHistory();\n    });\n    var retakeQuiz = function retakeQuiz(quiz) {\n      // Store the quiz to retake in localStorage temporarily\n      localStorage.setItem('retakeQuiz', JSON.stringify(quiz));\n      router.push('/create');\n    };\n    var viewDetails = function viewDetails(quiz) {\n      router.push({\n        name: 'quiz-details',\n        params: {\n          id: quiz.id\n        },\n        state: {\n          quiz: quiz\n        }\n      });\n    };\n    var __returned__ = {\n      router: router,\n      user: user,\n      supabaseHistory: supabaseHistory,\n      fetchQuizzes: fetchQuizzes,\n      quizHistory: quizHistory,\n      isLoading: isLoading,\n      error: error,\n      loadQuizHistory: loadQuizHistory,\n      retakeQuiz: retakeQuiz,\n      viewDetails: viewDetails,\n      ref: ref,\n      onMounted: onMounted,\n      watch: watch,\n      get useRouter() {\n        return useRouter;\n      },\n      get useAuth() {\n        return useAuth;\n      },\n      get useQuizHistory() {\n        return useQuizHistory;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useRouter","useAuth","useQuizHistory","router","_useAuth","user","_useQuizHistory","supabaseHistory","quizHistory","fetchQuizzes","isLoading","error","loadQuizHistory","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchQuizzes","data","fetchError","savedHistory","wrap","_callee$","_context","prev","next","value","sent","localStorage","getItem","JSON","parse","t0","console","finish","stop","apply","arguments","retakeQuiz","quiz","setItem","stringify","push","viewDetails","name","params","id","state"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/views/Quizzes.vue"],"sourcesContent":["<template>\r\n  <div class=\"quizzes\">\r\n    <div class=\"header\">\r\n      <h1>Your Quizzes</h1>\r\n      <router-link to=\"/create\" class=\"create-btn\">\r\n        + Create New Quiz\r\n      </router-link>\r\n    </div>\r\n\r\n    <div class=\"quiz-list\" v-if=\"quizHistory.length > 0\">\r\n      <div v-for=\"(quiz, index) in quizHistory\" :key=\"index\" class=\"quiz-card\">\r\n        <div class=\"quiz-info\">\r\n          <h3>{{ quiz.fileName }}</h3>\r\n          <div class=\"quiz-stats\">\r\n            <span class=\"stat\">\r\n              <i class=\"fas fa-question-circle\"></i>\r\n              {{ quiz.questionCount }} Questions\r\n            </span>\r\n            <span class=\"stat\">\r\n              <i class=\"fas fa-chart-line\"></i>\r\n              Score: {{ quiz.actualScore }}%\r\n            </span>\r\n            <span class=\"stat\">\r\n              <i class=\"fas fa-calendar\"></i>\r\n              {{ new Date(quiz.date).toLocaleDateString() }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"quiz-actions\">\r\n          <button @click=\"retakeQuiz(quiz)\" class=\"action-btn retake\">\r\n            Retake Quiz\r\n          </button>\r\n          <button @click=\"viewDetails(quiz)\" class=\"action-btn view\">\r\n            View Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"empty-state\">\r\n      <p>You haven't taken any quizzes yet.</p>\r\n      <router-link to=\"/create\" class=\"create-btn\">\r\n        Create Your First Quiz\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useAuth } from '../composables/useAuth';\r\nimport { useQuizHistory } from '../composables/useQuizHistory';\r\n\r\nconst router = useRouter();\r\nconst { user } = useAuth();\r\nconst { quizHistory: supabaseHistory, fetchQuizzes } = useQuizHistory();\r\nconst quizHistory = ref([]);\r\nconst isLoading = ref(false);\r\nconst error = ref(null);\r\n\r\n// Load quiz history based on auth state\r\nconst loadQuizHistory = async () => {\r\n  isLoading.value = true;\r\n  error.value = null;\r\n  \r\n  try {\r\n    if (user.value) {\r\n      // Load from Supabase for authenticated users\r\n      const { data, error: fetchError } = await fetchQuizzes();\r\n      if (fetchError) throw fetchError;\r\n      quizHistory.value = data || [];\r\n    } else {\r\n      // Load from localStorage for non-authenticated users\r\n      const savedHistory = localStorage.getItem('quizHistory');\r\n      quizHistory.value = savedHistory ? JSON.parse(savedHistory) : [];\r\n    }\r\n  } catch (err) {\r\n    console.error('Error loading quiz history:', err);\r\n    error.value = 'Failed to load quiz history';\r\n    quizHistory.value = [];\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\n// Watch for auth state changes\r\nwatch(() => user.value, () => {\r\n  loadQuizHistory();\r\n});\r\n\r\nonMounted(() => {\r\n  loadQuizHistory();\r\n});\r\n\r\nconst retakeQuiz = (quiz) => {\r\n  // Store the quiz to retake in localStorage temporarily\r\n  localStorage.setItem('retakeQuiz', JSON.stringify(quiz));\r\n  router.push('/create');\r\n};\r\n\r\nconst viewDetails = (quiz) => {\r\n  router.push({\r\n    name: 'quiz-details',\r\n    params: { id: quiz.id },\r\n    state: { quiz }\r\n  });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.quizzes {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\nh1 {\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n\r\n.create-btn {\r\n  display: inline-block;\r\n  padding: 0.8rem 1.5rem;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.create-btn:hover {\r\n  background-color: #45a049;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.quiz-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.quiz-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.quiz-card:hover {\r\n  transform: translateY(-4px);\r\n}\r\n\r\n.quiz-info h3 {\r\n  margin: 0 0 1rem 0;\r\n  color: #333;\r\n}\r\n\r\n.quiz-stats {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.stat {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.quiz-actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.action-btn {\r\n  flex: 1;\r\n  padding: 0.8rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.action-btn.retake {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.action-btn.view {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.action-btn:hover {\r\n  opacity: 0.9;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.empty-state p {\r\n  color: #666;\r\n  margin-bottom: 2rem;\r\n  font-size: 1.2rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}