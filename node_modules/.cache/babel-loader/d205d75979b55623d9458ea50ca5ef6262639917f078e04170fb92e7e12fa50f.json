{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const selectedFiles = ref([]);\n    const questionCount = ref('');\n    const fileInput = ref(null);\n    const isFormValid = computed(() => {\n      return selectedFiles.value.length > 0 && questionCount.value > 0;\n    });\n    const handleFileSelect = event => {\n      const files = Array.from(event.target.files);\n      addFiles(files);\n    };\n    const handleDrop = event => {\n      const files = Array.from(event.dataTransfer.files);\n      addFiles(files);\n    };\n    const addFiles = files => {\n      const validFiles = files.filter(file => {\n        const validTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'text/plain', 'application/pdf'];\n        return validTypes.includes(file.type);\n      });\n      selectedFiles.value = [...selectedFiles.value, ...validFiles];\n    };\n    const removeFile = index => {\n      selectedFiles.value.splice(index, 1);\n    };\n    const handleSubmit = () => {\n      if (isFormValid.value) {\n        // Here you would typically send the files and question count to your backend\n        console.log('Files:', selectedFiles.value);\n        console.log('Question Count:', questionCount.value);\n        alert(`Submitted ${selectedFiles.value.length} files with ${questionCount.value} questions`);\n      }\n    };\n    const __returned__ = {\n      selectedFiles,\n      questionCount,\n      fileInput,\n      isFormValid,\n      handleFileSelect,\n      handleDrop,\n      addFiles,\n      removeFile,\n      handleSubmit,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","selectedFiles","questionCount","fileInput","isFormValid","value","length","handleFileSelect","event","files","Array","from","target","addFiles","handleDrop","dataTransfer","validFiles","filter","file","validTypes","includes","type","removeFile","index","splice","handleSubmit","console","log","alert"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"upload-container\">\r\n      <h1>File Upload and Questions</h1>\r\n      \r\n      <div class=\"file-upload-section\">\r\n        <h2>Upload Files</h2>\r\n        <div class=\"upload-area\" @dragover.prevent @drop.prevent=\"handleDrop\">\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            accept=\".doc,.docx,.ppt,.pptx,.txt,.pdf\"\r\n            @change=\"handleFileSelect\"\r\n            ref=\"fileInput\"\r\n            class=\"file-input\"\r\n          />\r\n          <div class=\"upload-prompt\">\r\n            <p>Drag and drop files here or click to select</p>\r\n            <p>Supported formats: DOC, DOCX, PPT, PPTX, TXT, PDF</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\r\n          <h3>Selected Files:</h3>\r\n          <ul>\r\n            <li v-for=\"(file, index) in selectedFiles\" :key=\"index\">\r\n              {{ file.name }}\r\n              <button @click=\"removeFile(index)\" class=\"remove-btn\">Ã—</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"questions-section\">\r\n        <h2>Number of Questions</h2>\r\n        <div class=\"question-input\">\r\n          <input\r\n            type=\"number\"\r\n            v-model=\"questionCount\"\r\n            min=\"1\"\r\n            max=\"20\"\r\n            placeholder=\"Enter number of questions\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <button \r\n        class=\"submit-btn\" \r\n        :disabled=\"!isFormValid\"\r\n        @click=\"handleSubmit\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\n\r\nconst selectedFiles = ref([]);\r\nconst questionCount = ref('');\r\nconst fileInput = ref(null);\r\n\r\nconst isFormValid = computed(() => {\r\n  return selectedFiles.value.length > 0 && questionCount.value > 0;\r\n});\r\n\r\nconst handleFileSelect = (event) => {\r\n  const files = Array.from(event.target.files);\r\n  addFiles(files);\r\n};\r\n\r\nconst handleDrop = (event) => {\r\n  const files = Array.from(event.dataTransfer.files);\r\n  addFiles(files);\r\n};\r\n\r\nconst addFiles = (files) => {\r\n  const validFiles = files.filter(file => {\r\n    const validTypes = [\r\n      'application/msword',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n      'application/vnd.ms-powerpoint',\r\n      'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n      'text/plain',\r\n      'application/pdf'\r\n    ];\r\n    return validTypes.includes(file.type);\r\n  });\r\n  \r\n  selectedFiles.value = [...selectedFiles.value, ...validFiles];\r\n};\r\n\r\nconst removeFile = (index) => {\r\n  selectedFiles.value.splice(index, 1);\r\n};\r\n\r\nconst handleSubmit = () => {\r\n  if (isFormValid.value) {\r\n    // Here you would typically send the files and question count to your backend\r\n    console.log('Files:', selectedFiles.value);\r\n    console.log('Question Count:', questionCount.value);\r\n    alert(`Submitted ${selectedFiles.value.length} files with ${questionCount.value} questions`);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.upload-container {\r\n  background-color: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  width: 90%;\r\n  max-width: 600px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\nh2 {\r\n  color: #444;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-area {\r\n  border: 2px dashed #ccc;\r\n  border-radius: 4px;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: border-color 0.3s;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-area:hover {\r\n  border-color: #666;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-prompt {\r\n  color: #666;\r\n}\r\n\r\n.selected-files {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.selected-files ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.selected-files li {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  background-color: #f8f8f8;\r\n  margin-bottom: 0.5rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.remove-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #ff4444;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  padding: 0 0.5rem;\r\n}\r\n\r\n.questions-section {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.question-input input {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.submit-btn {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  margin-top: 2rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-btn:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.submit-btn:not(:disabled):hover {\r\n  background-color: #45a049;\r\n}\r\n</style> "],"mappings":"AA0DA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;IAEnC,MAAMC,aAAa,GAAGF,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMG,aAAa,GAAGH,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMI,SAAS,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMK,WAAW,GAAGJ,QAAQ,CAAC,MAAM;MACjC,OAAOC,aAAa,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,IAAIJ,aAAa,CAACG,KAAK,GAAG,CAAC;IAClE,CAAC,CAAC;IAEF,MAAME,gBAAgB,GAAIC,KAAK,IAAK;MAClC,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACH,KAAK,CAAC;MAC5CI,QAAQ,CAACJ,KAAK,CAAC;IACjB,CAAC;IAED,MAAMK,UAAU,GAAIN,KAAK,IAAK;MAC5B,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACO,YAAY,CAACN,KAAK,CAAC;MAClDI,QAAQ,CAACJ,KAAK,CAAC;IACjB,CAAC;IAED,MAAMI,QAAQ,GAAIJ,KAAK,IAAK;MAC1B,MAAMO,UAAU,GAAGP,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAI;QACtC,MAAMC,UAAU,GAAG,CACjB,oBAAoB,EACpB,yEAAyE,EACzE,+BAA+B,EAC/B,2EAA2E,EAC3E,YAAY,EACZ,iBAAiB,CAClB;QACD,OAAOA,UAAU,CAACC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC;MACvC,CAAC,CAAC;MAEFpB,aAAa,CAACI,KAAK,GAAG,CAAC,GAAGJ,aAAa,CAACI,KAAK,EAAE,GAAGW,UAAU,CAAC;IAC/D,CAAC;IAED,MAAMM,UAAU,GAAIC,KAAK,IAAK;MAC5BtB,aAAa,CAACI,KAAK,CAACmB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,MAAME,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIrB,WAAW,CAACC,KAAK,EAAE;QACrB;QACAqB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE1B,aAAa,CAACI,KAAK,CAAC;QAC1CqB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEzB,aAAa,CAACG,KAAK,CAAC;QACnDuB,KAAK,CAAC,aAAa3B,aAAa,CAACI,KAAK,CAACC,MAAM,eAAeJ,aAAa,CAACG,KAAK,YAAY,CAAC;MAC9F;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}