{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"quiz-results\"\n};\nvar _hoisted_2 = {\n  \"class\": \"score-summary\"\n};\nvar _hoisted_3 = {\n  \"class\": \"score-display\"\n};\nvar _hoisted_4 = {\n  \"class\": \"score-value\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"prediction-comparison\"\n};\nvar _hoisted_6 = {\n  \"class\": \"performance-text\"\n};\nvar _hoisted_7 = {\n  \"class\": \"questions-review\"\n};\nvar _hoisted_8 = {\n  \"class\": \"question-header\"\n};\nvar _hoisted_9 = {\n  \"class\": \"question-number\"\n};\nvar _hoisted_10 = {\n  \"class\": \"question-text\"\n};\nvar _hoisted_11 = {\n  \"class\": \"answer-details\"\n};\nvar _hoisted_12 = {\n  \"class\": \"your-answer\"\n};\nvar _hoisted_13 = {\n  key: 0,\n  \"class\": \"correct-answer\"\n};\nvar _hoisted_14 = {\n  \"class\": \"correct-text\"\n};\nvar _hoisted_15 = {\n  key: 0,\n  \"class\": \"explanation-text\"\n};\nvar _hoisted_16 = {\n  \"class\": \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Quiz Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"score-circle\", $setup.getScoreClass])\n  }, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.score) + \"%\", 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    \"class\": \"score-label\"\n  }, \"Your Score\", -1 /* HOISTED */))], 2 /* CLASS */), $props.predictedScore !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"Predicted Score: \" + _toDisplayString($props.predictedScore) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.getPerformanceText), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Review Your Answers\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, function (question, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"question-review\"\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, \"Question \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"answer-status\", question.is_correct ? 'correct' : 'incorrect'])\n    }, _toDisplayString(question.is_correct ? 'Correct' : 'Incorrect'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"p\", _hoisted_10, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", _hoisted_12, [_cache[4] || (_cache[4] = _createTextVNode(\" Your Answer: \")), _createElementVNode(\"span\", {\n      \"class\": _normalizeClass(question.is_correct ? 'correct-text' : 'incorrect-text')\n    }, _toDisplayString(question.user_answer), 3 /* TEXT, CLASS */)]), !question.is_correct ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, [_cache[5] || (_cache[5] = _createTextVNode(\" Correct Answer: \")), _createElementVNode(\"span\", _hoisted_14, _toDisplayString(question.correct_answer), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), question.explanation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Explanation:\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString(question.explanation), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('restart');\n    }),\n    \"class\": \"restart-btn\"\n  }, \" Try Again \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.$emit('go-back');\n    }),\n    \"class\": \"back-btn\"\n  }, \" Back to Upload \")])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_normalizeClass","$setup","getScoreClass","_hoisted_4","_toDisplayString","$props","score","predictedScore","_hoisted_5","_hoisted_6","getPerformanceText","_hoisted_7","_Fragment","_renderList","questions","question","index","key","_hoisted_8","_hoisted_9","is_correct","_hoisted_10","text","_hoisted_11","_hoisted_12","user_answer","_hoisted_13","_hoisted_14","correct_answer","explanation","_hoisted_15","_hoisted_16","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <div class=\"score-summary\">\r\n      <h2>Quiz Complete!</h2>\r\n      <div class=\"score-display\">\r\n        <div class=\"score-circle\" :class=\"getScoreClass\">\r\n          <span class=\"score-value\">{{ score }}%</span>\r\n          <span class=\"score-label\">Your Score</span>\r\n        </div>\r\n        <div v-if=\"predictedScore !== null\" class=\"prediction-comparison\">\r\n          <p>Predicted Score: {{ predictedScore }}%</p>\r\n          <p class=\"performance-text\">{{ getPerformanceText }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <h3>Review Your Answers</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-review\">\r\n        <div class=\"question-header\">\r\n          <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n          <span class=\"answer-status\" :class=\"question.is_correct ? 'correct' : 'incorrect'\">\r\n            {{ question.is_correct ? 'Correct' : 'Incorrect' }}\r\n          </span>\r\n        </div>\r\n\r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n\r\n        <div class=\"answer-details\">\r\n          <p class=\"your-answer\">\r\n            Your Answer: <span :class=\"question.is_correct ? 'correct-text' : 'incorrect-text'\">\r\n              {{ question.user_answer }}\r\n            </span>\r\n          </p>\r\n          <p v-if=\"!question.is_correct\" class=\"correct-answer\">\r\n            Correct Answer: <span class=\"correct-text\">{{ question.correct_answer }}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div v-if=\"question.explanation\" class=\"explanation-text\">\r\n          <strong>Explanation:</strong>\r\n          <p>{{ question.explanation }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"action-buttons\">\r\n      <button @click=\"$emit('restart')\" class=\"restart-btn\">\r\n        Try Again\r\n      </button>\r\n      <button @click=\"$emit('go-back')\" class=\"back-btn\">\r\n        Back to Upload\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst getScoreClass = computed(() => {\r\n  if (props.score >= 80) return 'high';\r\n  if (props.score >= 60) return 'medium';\r\n  return 'low';\r\n});\r\n\r\nconst getPerformanceText = computed(() => {\r\n  if (props.predictedScore === null) return '';\r\n  \r\n  const difference = props.score - props.predictedScore;\r\n  if (difference > 10) return 'You exceeded expectations!';\r\n  if (difference < -10) return 'Keep practicing to improve!';\r\n  return 'You met the predicted score!';\r\n});\r\n\r\ndefineEmits(['restart', 'go-back']);\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.score-summary {\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n}\r\n\r\n.score-display {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 2rem auto;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.score-circle.high {\r\n  background-color: #e8f5e9;\r\n  border: 4px solid #4CAF50;\r\n}\r\n\r\n.score-circle.medium {\r\n  background-color: #fff3e0;\r\n  border: 4px solid #ff9800;\r\n}\r\n\r\n.score-circle.low {\r\n  background-color: #ffebee;\r\n  border: 4px solid #f44336;\r\n}\r\n\r\n.score-value {\r\n  font-size: 3.5rem;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n}\r\n\r\n.score-label {\r\n  font-size: 1.2rem;\r\n  opacity: 0.8;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.prediction-comparison {\r\n  color: #666;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.performance-text {\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.questions-review {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.question-review {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 500;\r\n  color: #666;\r\n}\r\n\r\n.answer-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.answer-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.answer-status.incorrect {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.your-answer, .correct-answer {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.correct-text {\r\n  color: #2e7d32;\r\n  font-weight: 500;\r\n}\r\n\r\n.incorrect-text {\r\n  color: #c62828;\r\n  font-weight: 500;\r\n}\r\n\r\n.explanation-text {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n  border-left: 3px solid #2196F3;\r\n  border-radius: 4px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.restart-btn, .back-btn {\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.restart-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.restart-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.back-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.back-btn:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAc;;EAClB,SAAM;AAAe;;EAEnB,SAAM;AAAe;;EAEhB,SAAM;AAAa;;;EAGS,SAAM;;;EAErC,SAAM;AAAkB;;EAK5B,SAAM;AAAkB;;EAGpB,SAAM;AAAiB;;EACpB,SAAM;AAAiB;;EAM5B,SAAM;AAAe;;EAEnB,SAAM;AAAgB;;EACtB,SAAM;AAAa;;;EAKS,SAAM;;;EACb,SAAM;AAAc;;;EAIb,SAAM;;;EAOtC,SAAM;AAAgB;;uBA7C7BA,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXJD,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CASM,OATNE,UASM,GARJF,mBAAA,CAGM;IAHD,SAAKG,eAAA,EAAC,cAAc,EAASC,MAAA,CAAAC,aAAa;MAC7CL,mBAAA,CAA6C,QAA7CM,UAA6C,EAAAC,gBAAA,CAAhBC,MAAA,CAAAC,KAAK,IAAG,GAAC,iB,0BACtCT,mBAAA,CAA2C;IAArC,SAAM;EAAa,GAAC,YAAU,qB,kBAE3BQ,MAAA,CAAAE,cAAc,a,cAAzBZ,mBAAA,CAGM,OAHNa,UAGM,GAFJX,mBAAA,CAA6C,WAA1C,mBAAiB,GAAAO,gBAAA,CAAGC,MAAA,CAAAE,cAAc,IAAG,GAAC,iBACzCV,mBAAA,CAAwD,KAAxDY,UAAwD,EAAAL,gBAAA,CAAzBH,MAAA,CAAAS,kBAAkB,iB,4CAKvDb,mBAAA,CA4BM,OA5BNc,UA4BM,G,0BA3BJd,mBAAA,CAA4B,YAAxB,qBAAmB,uB,kBACvBF,mBAAA,CAyBMiB,SAAA,QAAAC,WAAA,CAzB2BR,MAAA,CAAAS,SAAS,YAA7BC,QAAQ,EAAEC,KAAK;yBAA5BrB,mBAAA,CAyBM;MAzBuCsB,GAAG,EAAED,KAAK;MAAE,SAAM;QAC7DnB,mBAAA,CAKM,OALNqB,UAKM,GAJJrB,mBAAA,CAA6D,QAA7DsB,UAA6D,EAA/B,WAAS,GAAAf,gBAAA,CAAGY,KAAK,sBAC/CnB,mBAAA,CAEO;MAFD,SAAKG,eAAA,EAAC,eAAe,EAASe,QAAQ,CAACK,UAAU;wBAClDL,QAAQ,CAACK,UAAU,kD,GAI1BvB,mBAAA,CAAgD,KAAhDwB,WAAgD,EAAAjB,gBAAA,CAApBW,QAAQ,CAACO,IAAI,kBAEzCzB,mBAAA,CASM,OATN0B,WASM,GARJ1B,mBAAA,CAII,KAJJ2B,WAII,G,2CAJmB,gBACR,IAAA3B,mBAAA,CAEN;MAFa,SAAKG,eAAA,CAAEe,QAAQ,CAACK,UAAU;wBACzCL,QAAQ,CAACU,WAAW,wB,IAGjBV,QAAQ,CAACK,UAAU,I,cAA7BzB,mBAAA,CAEI,KAFJ+B,WAEI,G,2CAFkD,mBACpC,IAAA7B,mBAAA,CAA+D,QAA/D8B,WAA+D,EAAAvB,gBAAA,CAAjCW,QAAQ,CAACa,cAAc,iB,0CAI9Db,QAAQ,CAACc,WAAW,I,cAA/BlC,mBAAA,CAGM,OAHNmC,WAGM,G,0BAFJjC,mBAAA,CAA6B,gBAArB,cAAY,sBACpBA,mBAAA,CAAiC,WAAAO,gBAAA,CAA3BW,QAAQ,CAACc,WAAW,iB;oCAKhChC,mBAAA,CAOM,OAPNkC,WAOM,GANJlC,mBAAA,CAES;IAFAmC,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK;IAAA;IAAa,SAAM;KAAc,aAEtD,GACAvC,mBAAA,CAES;IAFAmC,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK;IAAA;IAAa,SAAM;KAAW,kBAEnD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}