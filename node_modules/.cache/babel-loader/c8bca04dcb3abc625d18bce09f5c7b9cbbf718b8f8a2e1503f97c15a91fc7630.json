{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, withKeys as _withKeys, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, vModelRadio as _vModelRadio, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"upload-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"file-upload-section\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"selected-files\"\n};\nconst _hoisted_5 = {\n  class: \"file-name\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"questions-section\"\n};\nconst _hoisted_8 = {\n  class: \"question-input\"\n};\nconst _hoisted_9 = {\n  class: \"difficulty-section\"\n};\nconst _hoisted_10 = {\n  class: \"difficulty-selector\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = {\n  key: 2\n};\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  class: \"question-item\"\n};\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 3\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = {\n  key: 1\n};\nconst _hoisted_22 = {\n  key: 0\n};\nconst _hoisted_23 = {\n  key: 1\n};\nconst _hoisted_24 = {\n  key: 2\n};\nconst _hoisted_25 = {\n  key: 4,\n  class: \"error-message\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"quiz-container\"\n};\nconst _hoisted_27 = {\n  class: \"options\"\n};\nconst _hoisted_28 = [\"id\", \"name\", \"value\", \"onUpdate:modelValue\"];\nconst _hoisted_29 = [\"for\"];\nconst _hoisted_30 = {\n  key: 0,\n  class: \"feedback\"\n};\nconst _hoisted_31 = {\n  class: \"explanation\"\n};\nconst _hoisted_32 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  const _component_FileErrorDisplay = _resolveComponent(\"FileErrorDisplay\");\n  const _component_TrueFalseQuestion = _resolveComponent(\"TrueFalseQuestion\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[20] || (_cache[20] = _createElementVNode(\"h1\", null, \"QUIZZy\", -1 /* HOISTED */)), !_ctx.showQuestions && !_ctx.quizStarted && _ctx.predictedScore === null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[18] || (_cache[18] = _createElementVNode(\"h2\", null, \"Upload Files\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: \"upload-area\",\n    onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"prevent\"])),\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.triggerFileInput && _ctx.triggerFileInput(...args)),\n    role: \"button\",\n    tabindex: \"0\",\n    onKeydown: _cache[4] || (_cache[4] = _withKeys((...args) => _ctx.triggerFileInput && _ctx.triggerFileInput(...args), [\"enter\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleFileSelect && _ctx.handleFileSelect(...args)),\n    accept: \".pdf,.docx,.pptx,.txt,.png,.jpg,.jpeg,.tiff,.bmp\",\n    ref: \"fileInput\",\n    class: \"file-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"upload-prompt\"\n  }, [_createElementVNode(\"p\", null, \"Drag and drop files here or click to select\"), _createElementVNode(\"p\", null, \"Supported formats: PDF, DOCX, PPTX, TXT\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createVNode(_component_FileErrorDisplay, {\n    \"extraction-errors\": _ctx.extractionErrors,\n    \"unsupported-files\": _ctx.unsupportedFiles\n  }, null, 8 /* PROPS */, [\"extraction-errors\", \"unsupported-files\"]), _ctx.selectedFiles.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[14] || (_cache[14] = _createElementVNode(\"h3\", null, \"Selected Files:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedFiles, (file, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"file-item\"\n    }, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(file.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.removeFile(index),\n      class: \"remove-btn\",\n      title: \"Remove file\"\n    }, \"Ã—\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"Number of Questions\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.questionCount = $event),\n    min: \"1\",\n    max: \"20\",\n    placeholder: \"Enter number of questions\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.questionCount]])])]), _createElementVNode(\"div\", _hoisted_9, [_cache[17] || (_cache[17] = _createElementVNode(\"h2\", null, \"Question Difficulty\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.selectedDifficulty = $event),\n    class: \"difficulty-dropdown\"\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"option\", {\n    value: \"easy\"\n  }, \"Easy\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"medium\"\n  }, \"Medium\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"hard\"\n  }, \"Hard\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.selectedDifficulty]])])]), _createElementVNode(\"button\", {\n    class: \"submit-btn\",\n    disabled: !_ctx.isFormValid || _ctx.isLoading,\n    onClick: _cache[7] || (_cache[7] = (...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args))\n  }, _toDisplayString(_ctx.isLoading ? 'Generating Questions...' : 'Submit'), 9 /* TEXT, PROPS */, _hoisted_11)])) : _createCommentVNode(\"v-if\", true), _ctx.predictedScore !== null && !_ctx.quizStarted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"h2\", null, \"Predicted Score: \" + _toDisplayString(_ctx.predictedScore) + \"% based on your study material and question difficulty.\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"submit-btn\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.startAdaptiveQuiz && _ctx.startAdaptiveQuiz(...args))\n  }, \"Start Quiz\")])) : _createCommentVNode(\"v-if\", true), _ctx.quizStarted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_ctx.getCurrentAdaptiveQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"h2\", null, \"Question \" + _toDisplayString(_ctx.userResponses.length + 1) + \" of \" + _toDisplayString(_ctx.questionCount), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.getCurrentAdaptiveQuestion.text), 1 /* TEXT */), _ctx.getCurrentAdaptiveQuestion.type === 'multiple-choice' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCurrentAdaptiveQuestion.options, (option, letter) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: letter,\n      class: \"option\"\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.submitAdaptiveAnswer(letter)\n    }, _toDisplayString(letter) + \") \" + _toDisplayString(option), 9 /* TEXT, PROPS */, _hoisted_17)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _ctx.getCurrentAdaptiveQuestion.type === 'true-false' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = $event => _ctx.submitAdaptiveAnswer('T'))\n  }, \"True\"), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = $event => _ctx.submitAdaptiveAnswer('F'))\n  }, \"False\")])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.actualScore !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"h2\", null, \"You scored \" + _toDisplayString(_ctx.actualScore) + \"%. Predicted score was \" + _toDisplayString(_ctx.predictedScore) + \"%.\", 1 /* TEXT */), _ctx.actualScore === 100 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[19] || (_cache[19] = [_createElementVNode(\"h3\", null, \"Perfect score! You've mastered the material!\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_ctx.actualScore >= _ctx.predictedScore - 10 && _ctx.actualScore <= _ctx.predictedScore + 10 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, \"You were close!\")) : _createCommentVNode(\"v-if\", true), _ctx.actualScore > _ctx.predictedScore + 10 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, \"You outperformed the prediction! Great job!\")) : _createCommentVNode(\"v-if\", true), _ctx.actualScore < _ctx.predictedScore - 10 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_24, \"You scored below the prediction. Review the material for improvement.\")) : _createCommentVNode(\"v-if\", true)])), _createElementVNode(\"pre\", null, _toDisplayString(_ctx.quizSummary), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"submit-btn\",\n    onClick: _cache[11] || (_cache[11] = (...args) => _ctx.resetToMainScreen && _ctx.resetToMainScreen(...args))\n  }, \"Back to Main\")])) : _createCommentVNode(\"v-if\", true), _ctx.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _toDisplayString(_ctx.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _ctx.quiz ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_cache[21] || (_cache[21] = _createElementVNode(\"h2\", null, \"Generated Quiz\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.quiz.questions, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"question\"\n    }, [_createElementVNode(\"h3\", null, \"Question \" + _toDisplayString(index + 1) + \": \" + _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_27, [question.type === 'multiple-choice' ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 0\n    }, _renderList(question.options, (option, letter) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: letter,\n        class: \"option\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        id: `q${index}-${letter}`,\n        name: `question${index}`,\n        value: letter,\n        \"onUpdate:modelValue\": $event => _ctx.userAnswers[index] = $event\n      }, null, 8 /* PROPS */, _hoisted_28), [[_vModelRadio, _ctx.userAnswers[index]]]), _createElementVNode(\"label\", {\n        for: `q${index}-${letter}`\n      }, _toDisplayString(letter) + \") \" + _toDisplayString(option), 9 /* TEXT, PROPS */, _hoisted_29)]);\n    }), 128 /* KEYED_FRAGMENT */)) : question.type === 'true-false' ? (_openBlock(), _createBlock(_component_TrueFalseQuestion, {\n      key: 1,\n      index: index,\n      \"correct-answer\": question.correctAnswer,\n      explanation: question.explanation,\n      \"show-feedback\": _ctx.showAnswers && _ctx.userAnswers[index],\n      \"onUpdate:answer\": $event => _ctx.userAnswers[index] = $event\n    }, null, 8 /* PROPS */, [\"index\", \"correct-answer\", \"explanation\", \"show-feedback\", \"onUpdate:answer\"])) : _createCommentVNode(\"v-if\", true)]), _ctx.showAnswers && _ctx.userAnswers[index] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createElementVNode(\"p\", {\n      class: _normalizeClass({\n        'correct': _ctx.userAnswers[index] === question.correctAnswer,\n        'incorrect': _ctx.userAnswers[index] !== question.correctAnswer\n      })\n    }, _toDisplayString(_ctx.userAnswers[index] === question.correctAnswer ? 'Correct!' : 'Incorrect!'), 3 /* TEXT, CLASS */), _createElementVNode(\"p\", _hoisted_31, _toDisplayString(question.explanation), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => _ctx.checkAnswers && _ctx.checkAnswers(...args)),\n    disabled: !_ctx.allQuestionsAnswered\n  }, \"Check Answers\", 8 /* PROPS */, _hoisted_32)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","showQuestions","quizStarted","predictedScore","_hoisted_3","onDragover","_cache","_withModifiers","onDrop","args","handleDrop","onClick","triggerFileInput","role","tabindex","onKeydown","_withKeys","type","onChange","handleFileSelect","accept","ref","_createVNode","_component_FileErrorDisplay","extractionErrors","unsupportedFiles","selectedFiles","length","_hoisted_4","_Fragment","_renderList","file","index","_hoisted_5","_toDisplayString","name","$event","removeFile","title","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","questionCount","min","max","placeholder","_hoisted_9","_hoisted_10","selectedDifficulty","value","disabled","isFormValid","isLoading","handleSubmit","_hoisted_11","_hoisted_12","startAdaptiveQuiz","_hoisted_13","getCurrentAdaptiveQuestion","_hoisted_14","userResponses","_hoisted_15","text","_hoisted_16","options","option","letter","submitAdaptiveAnswer","_hoisted_17","_hoisted_18","actualScore","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","quizSummary","resetToMainScreen","error","_hoisted_25","quiz","_hoisted_26","questions","question","_hoisted_27","id","userAnswers","_hoisted_28","for","_hoisted_29","_createBlock","_component_TrueFalseQuestion","correctAnswer","explanation","showAnswers","_hoisted_30","_normalizeClass","_hoisted_31","checkAnswers","allQuestionsAnswered","_hoisted_32"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"upload-container\">\n      <h1>QUIZZy</h1>\n      \n      <div v-if=\"!showQuestions && !quizStarted && predictedScore === null\" class=\"file-upload-section\">\n        <h2>Upload Files</h2>\n        <div class=\"upload-area\" \n          @dragover.prevent \n          @drop.prevent=\"handleDrop\"\n          @click=\"triggerFileInput\"\n          role=\"button\"\n          tabindex=\"0\"\n          @keydown.enter=\"triggerFileInput\"\n        >\n          <input \n            type=\"file\" \n            @change=\"handleFileSelect\" \n            accept=\".pdf,.docx,.pptx,.txt,.png,.jpg,.jpeg,.tiff,.bmp\"\n            ref=\"fileInput\"\n            class=\"file-input\"\n          >\n          <div class=\"upload-prompt\">\n            <p>Drag and drop files here or click to select</p>\n            <p>Supported formats: PDF, DOCX, PPTX, TXT</p>\n          </div>\n        </div>\n        \n        <FileErrorDisplay\n          :extraction-errors=\"extractionErrors\"\n          :unsupported-files=\"unsupportedFiles\"\n        />\n\n        <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n          <h3>Selected Files:</h3>\n          <ul>\n            <li v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-item\">\n              <span class=\"file-name\">{{ file.name }}</span>\n              <button @click=\"removeFile(index)\" class=\"remove-btn\" title=\"Remove file\">Ã—</button>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"questions-section\">\n          <h2>Number of Questions</h2>\n          <div class=\"question-input\">\n            <input\n              type=\"number\"\n              v-model=\"questionCount\"\n              min=\"1\"\n              max=\"20\"\n              placeholder=\"Enter number of questions\"\n            />\n          </div>\n        </div>\n\n        <div class=\"difficulty-section\">\n          <h2>Question Difficulty</h2>\n          <div class=\"difficulty-selector\">\n            <select v-model=\"selectedDifficulty\" class=\"difficulty-dropdown\">\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </div>\n        </div>\n\n        <button \n          class=\"submit-btn\" \n          :disabled=\"!isFormValid || isLoading\"\n          @click=\"handleSubmit\"\n        >\n          {{ isLoading ? 'Generating Questions...' : 'Submit' }}\n        </button>\n      </div>\n\n      <div v-if=\"predictedScore !== null && !quizStarted\">\n        <h2>Predicted Score: {{ predictedScore }}% based on your study material and question difficulty.</h2>\n        <button class=\"submit-btn\" @click=\"startAdaptiveQuiz\">Start Quiz</button>\n      </div>\n\n      <div v-if=\"quizStarted\">\n        <div v-if=\"getCurrentAdaptiveQuestion\">\n          <h2>Question {{ userResponses.length + 1 }} of {{ questionCount }}</h2>\n          <div class=\"question-item\">\n            <h3>{{ getCurrentAdaptiveQuestion.text }}</h3>\n            <div v-if=\"getCurrentAdaptiveQuestion.type === 'multiple-choice'\">\n              <div v-for=\"(option, letter) in getCurrentAdaptiveQuestion.options\" :key=\"letter\" class=\"option\">\n                <button @click=\"submitAdaptiveAnswer(letter)\">{{ letter }}) {{ option }}</button>\n              </div>\n            </div>\n            <div v-else-if=\"getCurrentAdaptiveQuestion.type === 'true-false'\">\n              <button @click=\"submitAdaptiveAnswer('T')\">True</button>\n              <button @click=\"submitAdaptiveAnswer('F')\">False</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"actualScore !== null\">\n        <h2>You scored {{ actualScore }}%. Predicted score was {{ predictedScore }}%.</h2>\n        <div v-if=\"actualScore === 100\">\n          <h3>Perfect score! You've mastered the material!</h3>\n        </div>\n        <div v-else>\n          <p v-if=\"actualScore >= predictedScore - 10 && actualScore <= predictedScore + 10\">You were close!</p>\n          <p v-if=\"actualScore > predictedScore + 10\">You outperformed the prediction! Great job!</p>\n          <p v-if=\"actualScore < predictedScore - 10\">You scored below the prediction. Review the material for improvement.</p>\n        </div>\n        <pre>{{ quizSummary }}</pre>\n        <button class=\"submit-btn\" @click=\"resetToMainScreen\">Back to Main</button>\n      </div>\n\n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n    </div>\n\n    <template v-if=\"quiz\">\n      <div class=\"quiz-container\">\n        <h2>Generated Quiz</h2>\n        <template v-for=\"(question, index) in quiz.questions\" :key=\"index\">\n          <div class=\"question\">\n            <h3>Question {{ index + 1 }}: {{ question.text }}</h3>\n            <div class=\"options\">\n              <template v-if=\"question.type === 'multiple-choice'\">\n                <div v-for=\"(option, letter) in question.options\" :key=\"letter\" class=\"option\">\n                  <input\n                    type=\"radio\"\n                    :id=\"`q${index}-${letter}`\"\n                    :name=\"`question${index}`\"\n                    :value=\"letter\"\n                    v-model=\"userAnswers[index]\"\n                  />\n                  <label :for=\"`q${index}-${letter}`\">{{ letter }}) {{ option }}</label>\n                </div>\n              </template>\n              <template v-else-if=\"question.type === 'true-false'\">\n                <TrueFalseQuestion\n                  :index=\"index\"\n                  :correct-answer=\"question.correctAnswer\"\n                  :explanation=\"question.explanation\"\n                  :show-feedback=\"showAnswers && userAnswers[index]\"\n                  @update:answer=\"userAnswers[index] = $event\"\n                />\n              </template>\n            </div>\n            <div v-if=\"showAnswers && userAnswers[index]\" class=\"feedback\">\n              <p :class=\"{ 'correct': userAnswers[index] === question.correctAnswer, 'incorrect': userAnswers[index] !== question.correctAnswer }\">\n                {{ userAnswers[index] === question.correctAnswer ? 'Correct!' : 'Incorrect!' }}\n              </p>\n              <p class=\"explanation\">{{ question.explanation }}</p>\n            </div>\n          </div>\n        </template>\n        <button @click=\"checkAnswers\" :disabled=\"!allQuestionsAnswered\">Check Answers</button>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport axios from 'axios';\nimport FlashcardQuiz from './components/FlashcardQuiz.vue';\nimport TrueFalseQuestion from './components/TrueFalseQuestion.vue';\nimport FileErrorDisplay from './components/FileErrorDisplay.vue';\n\nconst selectedFiles = ref([]);\nconst questionCount = ref('');\nconst fileInput = ref(null);\nconst generatedQuestions = ref([]);\nconst isLoading = ref(false);\nconst error = ref('');\nconst showQuestions = ref(false);\nconst flashcardQuestions = ref([]);\nconst quiz = ref(null);\nconst userAnswers = ref([]);\nconst showAnswers = ref(false);\nconst unsupportedFiles = ref([]);\nconst extractionErrors = ref([]);\nconst selectedDifficulty = ref('medium');\n\n// Adaptive quiz state\nconst predictedScore = ref(null);\nconst quizStarted = ref(false);\nconst currentQuestionIndex = ref(0);\nconst userResponses = ref([]); // {question, userAnswer, correct, difficulty}\nconst adaptiveQuestions = ref([]); // pool of questions for adaptive flow\nconst adaptiveDifficulty = ref('medium');\nconst actualScore = ref(null);\nconst quizSummary = ref('');\n\nconst isFormValid = computed(() => {\n  return selectedFiles.value.length > 0 && questionCount.value > 0;\n});\n\nconst hasFileErrors = computed(() => {\n  return extractionErrors.value.length > 0 || unsupportedFiles.value.length > 0;\n});\n\nconst triggerFileInput = () => {\n  fileInput.value.click();\n};\n\nconst handleFileSelect = (event) => {\n  const files = Array.from(event.target.files);\n  addFiles(files);\n};\n\nconst handleDrop = (event) => {\n  const files = Array.from(event.dataTransfer.files);\n  addFiles(files);\n};\n\nconst addFiles = (files) => {\n  const validTypes = [\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'text/plain',\n    'application/pdf',\n    'image/png',\n    'image/jpeg',\n    'image/jpg',\n    'image/tiff',\n    'image/bmp'\n  ];\n  \n  const validFiles = [];\n  const invalidFiles = [];\n  \n  files.forEach(file => {\n    if (validTypes.includes(file.type)) {\n      validFiles.push(file);\n    } else {\n      invalidFiles.push(file);\n    }\n  });\n  \n  selectedFiles.value = [...selectedFiles.value, ...validFiles];\n  unsupportedFiles.value = [...unsupportedFiles.value, ...invalidFiles];\n};\n\nconst removeFile = (index) => {\n  selectedFiles.value.splice(index, 1);\n};\n\nconst readFileContent = async (file) => {\n  return new Promise((resolve) => {\n    if (\n      file.type === \"application/pdf\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ||\n      file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ||\n      file.type.startsWith('image/')\n    ) {\n      // PDF, PPTX, DOCX, or Image - send to backend for extraction\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      // Use the correct backend URL\n      const backendUrl = process.env.VUE_APP_BACKEND_URL || 'http://localhost:5001';\n      fetch(`${backendUrl}/extract-file`, {\n        method: 'POST',\n        body: formData\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.text) {\n            resolve(data.text);\n          } else {\n            extractionErrors.value.push({\n              fileName: file.name,\n              message: data.error || 'Failed to extract text from file'\n            });\n            resolve(\"[Could not extract file text]\");\n          }\n        })\n        .catch(() => {\n          extractionErrors.value.push({\n            fileName: file.name,\n            message: 'Server error while extracting text'\n          });\n          resolve(\"[Could not extract file text]\");\n        });\n    } else if (file.type === \"text/plain\") {\n      // Plain text\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target.result);\n      reader.onerror = () => {\n        extractionErrors.value.push({\n          fileName: file.name,\n          message: 'Error reading text file'\n        });\n        resolve(\"[Could not read file]\");\n      };\n      reader.readAsText(file);\n    } else {\n      resolve(`[${file.name} is not a supported file type.]`);\n    }\n  });\n};\n\nfunction predictScore(contentCoverage, difficultyLevel) {\n  // Example coefficients for linear regression\n  const a = 0.5;\n  const b = -10;\n  const c = 90;\n  return Math.max(0, Math.min(100, Math.round(a * contentCoverage + b * difficultyLevel + c)));\n}\n\nfunction getDifficultyLevelValue(diff) {\n  if (diff === 'easy') return 1;\n  if (diff === 'medium') return 2;\n  if (diff === 'hard') return 3;\n  return 2;\n}\n\nfunction analyzeContentForCoverage(content) {\n  // For now, just return 100 (simulate full coverage)\n  // You can later implement keyword/topic extraction and compare to questions\n  return 100;\n}\n\nconst handleSubmit = async () => {\n  if (!isFormValid.value) return;\n\n  isLoading.value = true;\n  error.value = '';\n  generatedQuestions.value = [];\n  flashcardQuestions.value = [];\n  predictedScore.value = null;\n  quizStarted.value = false;\n  currentQuestionIndex.value = 0;\n  userResponses.value = [];\n  adaptiveQuestions.value = [];\n  actualScore.value = null;\n  quizSummary.value = '';\n\n  try {\n    // Read all file contents\n    const fileContents = await Promise.all(\n      selectedFiles.value.map(file => readFileContent(file))\n    );\n\n    // Combine all file contents\n    const combinedContent = fileContents.join('\\n\\n');\n    console.log('Extracted file content:', combinedContent);\n\n    // Prepare the prompt for Gemini with difficulty level\n    const prompt = `Create a quiz with ${questionCount.value} easy, medium, and hard questions based on this text. Format each question exactly as follows:\n\nFor multiple choice questions:\n1. Start with \"Question: [question text]\"\n2. List options as:\n   A) [option text]\n   B) [option text]\n   C) [option text]\n   D) [option text]\n   (Mark correct answer with * after the option)\n3. Add \"Explanation: [explanation text]\"\n4. Add \"Difficulty: [easy|medium|hard]\"\n\nFor true/false questions:\n1. Start with \"True/False: [question text]\"\n2. List options as:\n   True*\n   False\n   (or vice versa, with * marking correct answer)\n3. Add \"Explanation: [explanation text]\"\n4. Add \"Difficulty: [easy|medium|hard]\"\n\nText: ${combinedContent}`;\n\n    // Call Gemini API\n    const response = await axios.post(\n      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${process.env.VUE_APP_GEMINI_API_KEY}`,\n      {\n        contents: [{\n          parts: [{\n            text: prompt\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 2048,\n        }\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    const quizText = response.data.candidates[0].content.parts[0].text;\n    const processedQuiz = processQuizResponse(quizText);\n    // Store all questions for adaptive flow\n    adaptiveQuestions.value = processedQuiz.questions;\n\n    // Predict score using linear regression\n    const contentCoverage = analyzeContentForCoverage(combinedContent);\n    const diffValue = getDifficultyLevelValue(selectedDifficulty.value);\n    predictedScore.value = predictScore(contentCoverage, diffValue);\n\n    // Show predicted score and Start Quiz button\n    showQuestions.value = false;\n    quizStarted.value = false;\n  } catch (err) {\n    error.value = `Error generating questions: ${err.response ? err.response.data.error?.message || 'Unknown error' : err.message}`;\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst startAdaptiveQuiz = () => {\n  quizStarted.value = true;\n  showQuestions.value = false;\n  currentQuestionIndex.value = 0;\n  userResponses.value = [];\n  adaptiveDifficulty.value = selectedDifficulty.value;\n};\n\nconst getCurrentAdaptiveQuestion = computed(() => {\n  // Find next question of current difficulty\n  const pool = adaptiveQuestions.value.filter(q => q.difficulty === adaptiveDifficulty.value);\n  if (pool.length === 0) {\n    // fallback: any question not yet answered\n    return adaptiveQuestions.value[currentQuestionIndex.value];\n  }\n  // Find one not yet answered\n  for (const q of pool) {\n    if (!userResponses.value.find(r => r.text === q.text)) {\n      return q;\n    }\n  }\n  // fallback: any question not yet answered\n  return adaptiveQuestions.value[currentQuestionIndex.value];\n});\n\nconst submitAdaptiveAnswer = (answer) => {\n  const q = getCurrentAdaptiveQuestion.value;\n  const correct = (answer === (q.type === 'multiple-choice' ? q.correctAnswer : (q.correctAnswer === 'true' ? 'T' : 'F')));\n  userResponses.value.push({\n    text: q.text,\n    userAnswer: answer,\n    correct,\n    difficulty: q.difficulty\n  });\n  // Adapt difficulty\n  if (correct && adaptiveDifficulty.value !== 'hard') {\n    adaptiveDifficulty.value = adaptiveDifficulty.value === 'easy' ? 'medium' : 'hard';\n  } else if (!correct && adaptiveDifficulty.value !== 'easy') {\n    adaptiveDifficulty.value = adaptiveDifficulty.value === 'hard' ? 'medium' : 'easy';\n  }\n  currentQuestionIndex.value++;\n  // If finished\n  if (userResponses.value.length >= Number(questionCount.value)) {\n    finishAdaptiveQuiz();\n  }\n};\n\nconst finishAdaptiveQuiz = () => {\n  quizStarted.value = false;\n  showQuestions.value = false;\n  // Calculate actual score\n  const correctCount = userResponses.value.filter(r => r.correct).length;\n  actualScore.value = Math.round((correctCount / userResponses.value.length) * 100);\n  // Generate summary\n  let strong = [], weak = [];\n  for (const diff of ['easy', 'medium', 'hard']) {\n    const total = userResponses.value.filter(r => r.difficulty === diff).length;\n    const correct = userResponses.value.filter(r => r.difficulty === diff && r.correct).length;\n    if (total > 0) {\n      if (correct / total >= 0.8) strong.push(diff);\n      else if (correct / total < 0.5) weak.push(diff);\n    }\n  }\n  let summary = '';\n  if (actualScore.value === 100) {\n    summary = 'Perfect score! You've mastered the material!';\n  } else {\n    summary = `You did well on: ${strong.join(', ') || 'none'}\\nAreas to improve: ${weak.join(', ') || 'none'}`;\n  }\n  quizSummary.value = summary;\n};\n\nconst resetToMainScreen = () => {\n  showQuestions.value = false;\n  flashcardQuestions.value = [];\n  generatedQuestions.value = [];\n  selectedFiles.value = [];\n  unsupportedFiles.value = [];\n  extractionErrors.value = [];\n  questionCount.value = '';\n  error.value = '';\n  isLoading.value = false;\n  predictedScore.value = null;\n  quizStarted.value = false;\n  currentQuestionIndex.value = 0;\n  userResponses.value = [];\n  adaptiveQuestions.value = [];\n  actualScore.value = null;\n  quizSummary.value = '';\n  if (fileInput.value) {\n    fileInput.value.value = '';\n  }\n};\n\nconst checkAnswers = () => {\n  showAnswers.value = true;\n};\n\nconst allQuestionsAnswered = computed(() => {\n  return userAnswers.value.length === quiz.value.questions.length;\n});\n\nconst processQuizResponse = (response) => {\n  const questions = [];\n  const lines = response.split('\\n');\n  let currentQuestion = null;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    if (!line) continue;\n    if (/^\\d*\\.?\\s*(Question:|Q:|Easy Question:|Hard Question:|Medium Question:)/i.test(line)) {\n      if (currentQuestion) questions.push(currentQuestion);\n      currentQuestion = {\n        text: line.replace(/^\\d*\\.?\\s*(Question:|Q:|Easy Question:|Hard Question:|Medium Question:)/i, '').trim(),\n        type: 'multiple-choice',\n        options: {},\n        correctAnswer: '',\n        explanation: '',\n        difficulty: 'medium'\n      };\n    } else if (/^\\d*\\.?\\s*(True\\/False:|True or False:)/i.test(line)) {\n      if (currentQuestion) questions.push(currentQuestion);\n      currentQuestion = {\n        text: line.replace(/^\\d*\\.?\\s*(True\\/False:|True or False:)/i, '').trim(),\n        type: 'true-false',\n        options: { true: 'True', false: 'False' },\n        correctAnswer: '',\n        explanation: '',\n        difficulty: 'medium'\n      };\n    } else if (currentQuestion) {\n      const optionMatch = line.match(/^([A-Da-d])[).]\\s*(.*)/);\n      if (optionMatch) {\n        const letter = optionMatch[1].toUpperCase();\n        let option = optionMatch[2];\n        if (option.includes('*')) {\n          currentQuestion.correctAnswer = letter;\n          option = option.replace('*', '').trim();\n        }\n        currentQuestion.options[letter] = option;\n      } else if (line === 'True*' || line === 'False*') {\n        currentQuestion.correctAnswer = line === 'True*' ? 'true' : 'false';\n      } else if (line.startsWith('Explanation:')) {\n        currentQuestion.explanation = line.replace('Explanation:', '').trim();\n      } else if (line.startsWith('Difficulty:')) {\n        const diff = line.replace('Difficulty:', '').trim().toLowerCase();\n        if (['easy', 'medium', 'hard'].includes(diff)) {\n          currentQuestion.difficulty = diff;\n        }\n      }\n    }\n  }\n  if (currentQuestion) questions.push(currentQuestion);\n  return { questions };\n};\n</script>\n\n<style scoped>\n.app-container {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n  font-family: \"Helvetica\", \"Arial\", sans-serif;\n}\n\n.upload-container {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 90%;\n  max-width: 600px;\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 2rem;\n}\n\nh2 {\n  color: #444;\n  margin-bottom: 1rem;\n}\n\n.file-upload-section {\n  margin-bottom: 2rem;\n}\n\n.upload-area {\n  border: 2px dashed #ccc;\n  border-radius: 8px;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 1rem;\n  outline: none;\n}\n\n.upload-area:hover {\n  border-color: #666;\n  background-color: #f8f8f8;\n}\n\n.upload-area:focus {\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.file-input {\n  display: none;\n}\n\n.upload-prompt {\n  color: #666;\n}\n\n.upload-prompt p {\n  margin: 0.5rem 0;\n}\n\n.selected-files {\n  margin-top: 1rem;\n}\n\n.selected-files ul {\n  list-style: none;\n  padding: 0;\n}\n\n.selected-files li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n}\n\n.remove-btn {\n  background: none;\n  border: none;\n  color: #ff4444;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0 0.5rem;\n}\n\n.questions-section {\n  margin-top: 2rem;\n}\n\n.question-input input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.submit-btn {\n  width: 100%;\n  padding: 1rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-top: 2rem;\n  transition: background-color 0.3s;\n}\n\n.submit-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.submit-btn:not(:disabled):hover {\n  background-color: #45a049;\n}\n\n.questions-list {\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.question-item {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.error-message {\n  color: #ff4444;\n  margin-top: 1rem;\n  text-align: center;\n}\n\n.quiz-container {\n  margin-top: 2rem;\n  padding: 2rem;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.question {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.options {\n  margin-top: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.option {\n  margin-bottom: 0.5rem;\n}\n\n.feedback {\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.correct {\n  color: #4CAF50;\n}\n\n.incorrect {\n  color: #ff4444;\n}\n\n.explanation {\n  margin-top: 0.5rem;\n  margin-left: 1rem;\n}\n\nbutton {\n  width: 100%;\n  padding: 1rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-top: 2rem;\n  transition: background-color 0.3s;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\nbutton:not(:disabled):hover {\n  background-color: #45a049;\n}\n\n.file-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n}\n\n.file-name {\n  flex: 1;\n  margin-right: 0.5rem;\n  word-break: break-word;\n}\n\n.remove-btn {\n  flex-shrink: 0;\n  width: 24px;\n  height: 24px;\n  background: none;\n  border: none;\n  color: #ff4444;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n}\n\n.remove-btn:hover {\n  background-color: #ffeeee;\n}\n\n.unsupported-files {\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #fff3f3;\n  border-radius: 4px;\n  border: 1px solid #ffdddd;\n}\n\n.unsupported-files h3 {\n  color: #d32f2f;\n  margin-bottom: 0.5rem;\n}\n\n.unsupported-label {\n  color: #d32f2f;\n  font-size: 0.9em;\n  margin-left: 0.5rem;\n}\n\n.unsupported-files .file-item {\n  background-color: #fff;\n  border: 1px solid #ffdddd;\n}\n\n.difficulty-section {\n  margin-top: 2rem;\n}\n\n.difficulty-selector {\n  margin-bottom: 1rem;\n}\n\n.difficulty-dropdown {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n  cursor: pointer;\n}\n\n.difficulty-dropdown:focus {\n  outline: none;\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}