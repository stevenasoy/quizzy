{"ast":null,"code":"import _objectSpread from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref } from 'vue';\nexport function useQuizHistory() {\n  var quizHistory = ref([]);\n  var isLoading = ref(false);\n  var error = ref(null);\n  var fetchHistory = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(userId) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            isLoading.value = true;\n            error.value = null;\n            _context.prev = 2;\n            _context.next = 5;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 1000);\n            });\n          case 5:\n            quizHistory.value = [{\n              id: '1',\n              userId: userId,\n              date: new Date().toISOString(),\n              score: 85,\n              totalQuestions: 10,\n              timeSpent: '12:30',\n              category: 'JavaScript'\n            }, {\n              id: '2',\n              userId: userId,\n              date: new Date(Date.now() - 86400000).toISOString(),\n              // 1 day ago\n              score: 92,\n              totalQuestions: 15,\n              timeSpent: '18:45',\n              category: 'Python'\n            }];\n            return _context.abrupt(\"return\", true);\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            error.value = 'Failed to fetch quiz history. Please try again.';\n            return _context.abrupt(\"return\", false);\n          case 13:\n            _context.prev = 13;\n            isLoading.value = false;\n            return _context.finish(13);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 9, 13, 16]]);\n    }));\n    return function fetchHistory(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var addQuizResult = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(result) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            isLoading.value = true;\n            error.value = null;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 500);\n            });\n          case 5:\n            quizHistory.value.unshift(_objectSpread({\n              id: Date.now().toString(),\n              date: new Date().toISOString()\n            }, result));\n            return _context2.abrupt(\"return\", true);\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            error.value = 'Failed to save quiz result. Please try again.';\n            return _context2.abrupt(\"return\", false);\n          case 13:\n            _context2.prev = 13;\n            isLoading.value = false;\n            return _context2.finish(13);\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[2, 9, 13, 16]]);\n    }));\n    return function addQuizResult(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var clearHistory = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(userId) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            isLoading.value = true;\n            error.value = null;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 500);\n            });\n          case 5:\n            quizHistory.value = quizHistory.value.filter(function (quiz) {\n              return quiz.userId !== userId;\n            });\n            return _context3.abrupt(\"return\", true);\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](2);\n            error.value = 'Failed to clear quiz history. Please try again.';\n            return _context3.abrupt(\"return\", false);\n          case 13:\n            _context3.prev = 13;\n            isLoading.value = false;\n            return _context3.finish(13);\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2, 9, 13, 16]]);\n    }));\n    return function clearHistory(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    quizHistory: quizHistory,\n    isLoading: isLoading,\n    error: error,\n    fetchHistory: fetchHistory,\n    addQuizResult: addQuizResult,\n    clearHistory: clearHistory\n  };\n}","map":{"version":3,"names":["ref","useQuizHistory","quizHistory","isLoading","error","fetchHistory","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","wrap","_callee$","_context","prev","next","value","Promise","resolve","setTimeout","id","date","Date","toISOString","score","totalQuestions","timeSpent","category","now","abrupt","t0","finish","stop","_x","apply","arguments","addQuizResult","_ref2","_callee2","result","_callee2$","_context2","unshift","_objectSpread","toString","_x2","clearHistory","_ref3","_callee3","_callee3$","_context3","filter","quiz","_x3"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/composables/useQuizHistory.js"],"sourcesContent":["import { ref } from 'vue';\r\n\r\nexport function useQuizHistory() {\r\n  const quizHistory = ref([]);\r\n  const isLoading = ref(false);\r\n  const error = ref(null);\r\n\r\n  const fetchHistory = async (userId) => {\r\n    isLoading.value = true;\r\n    error.value = null;\r\n    try {\r\n      // Here you would make your actual API call\r\n      // For now, we'll simulate fetching quiz history for specific user\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      quizHistory.value = [\r\n        {\r\n          id: '1',\r\n          userId: userId,\r\n          date: new Date().toISOString(),\r\n          score: 85,\r\n          totalQuestions: 10,\r\n          timeSpent: '12:30',\r\n          category: 'JavaScript'\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: userId,\r\n          date: new Date(Date.now() - 86400000).toISOString(), // 1 day ago\r\n          score: 92,\r\n          totalQuestions: 15,\r\n          timeSpent: '18:45',\r\n          category: 'Python'\r\n        }\r\n      ];\r\n      return true;\r\n    } catch (e) {\r\n      error.value = 'Failed to fetch quiz history. Please try again.';\r\n      return false;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n\r\n  const addQuizResult = async (result) => {\r\n    isLoading.value = true;\r\n    error.value = null;\r\n    try {\r\n      // Here you would make your actual API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      quizHistory.value.unshift({\r\n        id: Date.now().toString(),\r\n        date: new Date().toISOString(),\r\n        ...result\r\n      });\r\n      return true;\r\n    } catch (e) {\r\n      error.value = 'Failed to save quiz result. Please try again.';\r\n      return false;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n\r\n  const clearHistory = async (userId) => {\r\n    isLoading.value = true;\r\n    error.value = null;\r\n    try {\r\n      // Here you would make your actual API call\r\n      // Clear only the history for the specific user\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      quizHistory.value = quizHistory.value.filter(quiz => quiz.userId !== userId);\r\n      return true;\r\n    } catch (e) {\r\n      error.value = 'Failed to clear quiz history. Please try again.';\r\n      return false;\r\n    } finally {\r\n      isLoading.value = false;\r\n    }\r\n  };\r\n\r\n  return {\r\n    quizHistory,\r\n    isLoading,\r\n    error,\r\n    fetchHistory,\r\n    addQuizResult,\r\n    clearHistory\r\n  };\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}