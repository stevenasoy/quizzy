{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"study-stats\"\n};\nvar _hoisted_2 = {\n  \"class\": \"stats-grid\"\n};\nvar _hoisted_3 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_4 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_5 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_6 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_7 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_8 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_9 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_10 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_11 = {\n  key: 0,\n  \"class\": \"performance-chart\"\n};\nvar _hoisted_12 = {\n  \"class\": \"score-bars\"\n};\nvar _hoisted_13 = {\n  \"class\": \"score-label\"\n};\nvar _hoisted_14 = {\n  \"class\": \"quiz-date\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Study Statistics\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Total Quizzes\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.quizHistory.length), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Average Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.averageScore) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Best Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.bestScore) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Total Questions\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.totalQuestions), 1 /* TEXT */)])]), $props.quizHistory.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Recent Performance\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentQuizzes, function (quiz, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"score-bar-container\"\n    }, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"score-bar\", $setup.getScoreClass(quiz.actualScore * 100)]),\n      style: _normalizeStyle({\n        height: \"\".concat(quiz.actualScore * 100, \"%\")\n      })\n    }, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString(Math.round(quiz.actualScore * 100)) + \"%\", 1 /* TEXT */)], 6 /* CLASS, STYLE */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($setup.formatDate(quiz.date)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$props","quizHistory","length","_hoisted_5","_hoisted_6","$setup","averageScore","_hoisted_7","_hoisted_8","bestScore","_hoisted_9","_hoisted_10","totalQuestions","_hoisted_11","_hoisted_12","_Fragment","_renderList","recentQuizzes","quiz","index","key","_normalizeClass","getScoreClass","actualScore","style","_normalizeStyle","height","concat","_hoisted_13","Math","round","_hoisted_14","formatDate","date"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\StudyStats.vue"],"sourcesContent":["<template>\r\n  <div class=\"study-stats\">\r\n    <h2>Study Statistics</h2>\r\n    \r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\">\r\n        <h3>Total Quizzes</h3>\r\n        <div class=\"stat-value\">{{ quizHistory.length }}</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Average Score</h3>\r\n        <div class=\"stat-value\">{{ averageScore }}%</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Best Score</h3>\r\n        <div class=\"stat-value\">{{ bestScore }}%</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Total Questions</h3>\r\n        <div class=\"stat-value\">{{ totalQuestions }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"performance-chart\" v-if=\"quizHistory.length > 0\">\r\n      <h3>Recent Performance</h3>\r\n      <div class=\"score-bars\">\r\n        <div v-for=\"(quiz, index) in recentQuizzes\" \r\n             :key=\"index\" \r\n             class=\"score-bar-container\">\r\n          <div class=\"score-bar\" \r\n               :style=\"{ height: `${quiz.actualScore * 100}%` }\"\r\n               :class=\"getScoreClass(quiz.actualScore * 100)\">\r\n            <span class=\"score-label\">{{ Math.round(quiz.actualScore * 100) }}%</span>\r\n          </div>\r\n          <div class=\"quiz-date\">{{ formatDate(quiz.date) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { getScoreClass } from '../algorithms/score-classification';\r\n\r\nconst props = defineProps({\r\n  quizHistory: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\n// Computed statistics\r\nconst averageScore = computed(() => {\r\n  if (props.quizHistory.length === 0) return 0;\r\n  const total = props.quizHistory.reduce((sum, quiz) => sum + quiz.actualScore * 100, 0);\r\n  return Math.round(total / props.quizHistory.length);\r\n});\r\n\r\nconst bestScore = computed(() => {\r\n  if (props.quizHistory.length === 0) return 0;\r\n  const best = Math.max(...props.quizHistory.map(quiz => quiz.actualScore * 100));\r\n  return Math.round(best);\r\n});\r\n\r\nconst totalQuestions = computed(() => {\r\n  return props.quizHistory.reduce((sum, quiz) => sum + quiz.questionCount, 0);\r\n});\r\n\r\nconst recentQuizzes = computed(() => {\r\n  return [...props.quizHistory]\r\n    .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n    .slice(0, 5);\r\n});\r\n\r\n// Helper function to format dates\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString();\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.study-stats {\r\n  padding: 2rem;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1.5rem;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.stat-card {\r\n  background-color: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.stat-card h3 {\r\n  color: #666;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n}\r\n\r\n.performance-chart {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.score-bars {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  height: 200px;\r\n  margin-top: 1.5rem;\r\n  padding: 1rem 0;\r\n}\r\n\r\n.score-bar-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 0.5rem;\r\n}\r\n\r\n.score-bar {\r\n  width: 40px;\r\n  min-height: 4px;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  transition: height 0.3s ease;\r\n}\r\n\r\n.score-bar.excellent {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.score-bar.good {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.score-bar.average {\r\n  background-color: #FF9800;\r\n}\r\n\r\n.score-bar.needs-improvement {\r\n  background-color: #f44336;\r\n}\r\n\r\n.score-label {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n}\r\n\r\n.quiz-date {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAa;;EAGjB,SAAM;AAAY;;EAChB,SAAM;AAAW;;EAEf,SAAM;AAAY;;EAGpB,SAAM;AAAW;;EAEf,SAAM;AAAY;;EAGpB,SAAM;AAAW;;EAEf,SAAM;AAAY;;EAGpB,SAAM;AAAW;;EAEf,SAAM;AAAY;;;EAItB,SAAM;;;EAEJ,SAAM;AAAY;;EAOX,SAAM;AAAa;;EAEtB,SAAM;AAAW;;uBApC9BA,mBAAA,CAwCM,OAxCNC,UAwCM,G,0BAvCJC,mBAAA,CAAyB,YAArB,kBAAgB,sBAEpBA,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJD,mBAAA,CAGM,OAHNE,UAGM,G,0BAFJF,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAAsD,OAAtDG,UAAsD,EAAAC,gBAAA,CAA3BC,MAAA,CAAAC,WAAW,CAACC,MAAM,iB,GAG/CP,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFJR,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAAiD,OAAjDS,UAAiD,EAAAL,gBAAA,CAAtBM,MAAA,CAAAC,YAAY,IAAG,GAAC,gB,GAG7CX,mBAAA,CAGM,OAHNY,UAGM,G,0BAFJZ,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAA8C,OAA9Ca,UAA8C,EAAAT,gBAAA,CAAnBM,MAAA,CAAAI,SAAS,IAAG,GAAC,gB,GAG1Cd,mBAAA,CAGM,OAHNe,UAGM,G,0BAFJf,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAAkD,OAAlDgB,WAAkD,EAAAZ,gBAAA,CAAvBM,MAAA,CAAAO,cAAc,iB,KAIRZ,MAAA,CAAAC,WAAW,CAACC,MAAM,Q,cAAvDT,mBAAA,CAcM,OAdNoB,WAcM,G,0BAbJlB,mBAAA,CAA2B,YAAvB,oBAAkB,sBACtBA,mBAAA,CAWM,OAXNmB,WAWM,I,kBAVJrB,mBAAA,CASMsB,SAAA,QAAAC,WAAA,CATuBX,MAAA,CAAAY,aAAa,YAA7BC,IAAI,EAAEC,KAAK;yBAAxB1B,mBAAA,CASM;MARA2B,GAAG,EAAED,KAAK;MACX,SAAM;QACTxB,mBAAA,CAIM;MAJD,SAAK0B,eAAA,EAAC,WAAW,EAEThB,MAAA,CAAAiB,aAAa,CAACJ,IAAI,CAACK,WAAW;MADrCC,KAAK,EAAAC,eAAA;QAAAC,MAAA,KAAAC,MAAA,CAAeT,IAAI,CAACK,WAAW;MAAA;QAExC5B,mBAAA,CAA0E,QAA1EiC,WAA0E,EAAA7B,gBAAA,CAA7C8B,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACK,WAAW,WAAU,GAAC,gB,yBAErE5B,mBAAA,CAAwD,OAAxDoC,WAAwD,EAAAhC,gBAAA,CAA9BM,MAAA,CAAA2B,UAAU,CAACd,IAAI,CAACe,IAAI,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}