{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'FlashcardQuiz',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    totalQuestions: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['quiz-completed'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const currentQuestionIndex = ref(0);\n    const currentAnswer = ref(null);\n    const showFeedback = ref(false);\n    const isAnswerCorrect = ref(false);\n    const userResponses = ref([]);\n    const getCurrentQuestion = computed(() => {\n      return props.questions[currentQuestionIndex.value];\n    });\n    const totalQuestions = computed(() => {\n      return props.totalQuestions;\n    });\n    const submitAnswer = answer => {\n      if (showFeedback.value) return;\n      currentAnswer.value = answer;\n      const question = getCurrentQuestion.value;\n      console.log('Submitting answer:', {\n        givenAnswer: answer,\n        correctAnswer: question.correctAnswer,\n        type: question.type\n      });\n      if (question.type === 'true-false') {\n        isAnswerCorrect.value = String(answer).toLowerCase() === String(question.correctAnswer).toLowerCase();\n      } else {\n        isAnswerCorrect.value = String(answer) === String(question.correctAnswer);\n      }\n      console.log('Answer validation result:', isAnswerCorrect.value);\n      showFeedback.value = true;\n    };\n    const moveToNext = () => {\n      const question = getCurrentQuestion.value;\n      userResponses.value.push({\n        text: question.text,\n        userAnswer: currentAnswer.value,\n        correct: isAnswerCorrect.value,\n        difficulty: question.difficulty,\n        explanation: question.explanation\n      });\n      showFeedback.value = false;\n      isAnswerCorrect.value = false;\n      if (currentQuestionIndex.value + 1 >= totalQuestions.value) {\n        emit('quiz-completed', userResponses.value);\n      } else {\n        currentQuestionIndex.value++;\n        currentAnswer.value = null;\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      currentQuestionIndex,\n      currentAnswer,\n      showFeedback,\n      isAnswerCorrect,\n      userResponses,\n      getCurrentQuestion,\n      totalQuestions,\n      submitAnswer,\n      moveToNext,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","currentQuestionIndex","currentAnswer","showFeedback","isAnswerCorrect","userResponses","getCurrentQuestion","questions","value","totalQuestions","submitAnswer","answer","question","console","log","givenAnswer","correctAnswer","type","String","toLowerCase","moveToNext","push","text","userAnswer","correct","difficulty","explanation"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/FlashcardQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <div v-if=\"getCurrentQuestion\" class=\"quiz-content\">\n      <div class=\"quiz-progress\">\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress-fill\"\n            :style=\"{ width: `${(currentQuestionIndex + 1) * 100 / totalQuestions}%` }\"\n          ></div>\n        </div>\n        <span class=\"progress-text\">Question {{ currentQuestionIndex + 1 }} of {{ totalQuestions }}</span>\n      </div>\n      \n      <div class=\"question-item\">\n        <h3>{{ getCurrentQuestion.text }}</h3>\n        <div v-if=\"getCurrentQuestion.type === 'multiple-choice'\" class=\"options\">\n          <button \n            v-for=\"(option, letter) in getCurrentQuestion.options\" \n            :key=\"letter\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === letter,\n              'correct': showFeedback && letter === getCurrentQuestion.correctAnswer,\n              'incorrect': showFeedback && currentAnswer === letter && letter !== getCurrentQuestion.correctAnswer\n            }\"\n            @click=\"submitAnswer(letter)\"\n            :disabled=\"showFeedback\"\n          >\n            <span class=\"option-letter\">{{ letter }}</span>\n            <span class=\"option-text\">{{ option }}</span>\n          </button>\n        </div>\n        <div v-else-if=\"getCurrentQuestion.type === 'true-false'\" class=\"options true-false\">\n          <button \n            v-for=\"option in ['True', 'False']\" \n            :key=\"option\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === option.toLowerCase(),\n              'correct': showFeedback && option.toLowerCase() === getCurrentQuestion.correctAnswer.toLowerCase(),\n              'incorrect': showFeedback && currentAnswer === option.toLowerCase() && option.toLowerCase() !== getCurrentQuestion.correctAnswer.toLowerCase()\n            }\"\n            @click=\"submitAnswer(option.toLowerCase())\"\n            :disabled=\"showFeedback\"\n          >\n            {{ option }}\n          </button>\n        </div>\n\n        <div v-if=\"showFeedback\" class=\"feedback\">\n          <p :class=\"{ 'correct-text': isAnswerCorrect, 'incorrect-text': !isAnswerCorrect }\">\n            {{ isAnswerCorrect ? 'Correct!' : 'Incorrect!' }}\n          </p>\n          <button class=\"next-btn\" @click=\"moveToNext\">\n            {{ currentQuestionIndex + 1 >= totalQuestions ? 'See Results' : 'Next Question' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  questions: {\n    type: Array,\n    required: true\n  },\n  totalQuestions: {\n    type: Number,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['quiz-completed']);\n\nconst currentQuestionIndex = ref(0);\nconst currentAnswer = ref(null);\nconst showFeedback = ref(false);\nconst isAnswerCorrect = ref(false);\nconst userResponses = ref([]);\n\nconst getCurrentQuestion = computed(() => {\n  return props.questions[currentQuestionIndex.value];\n});\n\nconst totalQuestions = computed(() => {\n  return props.totalQuestions;\n});\n\nconst submitAnswer = (answer) => {\n  if (showFeedback.value) return;\n  \n  currentAnswer.value = answer;\n  const question = getCurrentQuestion.value;\n  \n  console.log('Submitting answer:', {\n    givenAnswer: answer,\n    correctAnswer: question.correctAnswer,\n    type: question.type\n  });\n  \n  if (question.type === 'true-false') {\n    isAnswerCorrect.value = String(answer).toLowerCase() === String(question.correctAnswer).toLowerCase();\n  } else {\n    isAnswerCorrect.value = String(answer) === String(question.correctAnswer);\n  }\n  \n  console.log('Answer validation result:', isAnswerCorrect.value);\n  showFeedback.value = true;\n};\n\nconst moveToNext = () => {\n  const question = getCurrentQuestion.value;\n  userResponses.value.push({\n    text: question.text,\n    userAnswer: currentAnswer.value,\n    correct: isAnswerCorrect.value,\n    difficulty: question.difficulty,\n    explanation: question.explanation\n  });\n\n  showFeedback.value = false;\n  isAnswerCorrect.value = false;\n  \n  if (currentQuestionIndex.value + 1 >= totalQuestions.value) {\n    emit('quiz-completed', userResponses.value);\n  } else {\n    currentQuestionIndex.value++;\n    currentAnswer.value = null;\n  }\n};\n</script>\n\n<style scoped>\n.quiz-container {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.quiz-content {\n  background: white;\n  padding: 2rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.quiz-progress {\n  margin-bottom: 2rem;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background-color: #e0e0e0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  display: block;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.question-item {\n  margin-top: 1.5rem;\n}\n\n.question-item h3 {\n  font-size: 1.2rem;\n  color: #333;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n  margin: 1.5rem 0;\n}\n\n.options.true-false {\n  flex-direction: row;\n  justify-content: center;\n  gap: 1.5rem;\n}\n\n.option-btn {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: white;\n  color: #333;\n  cursor: pointer;\n  font-size: 1rem;\n  text-align: left;\n  transition: all 0.2s ease;\n}\n\n.options.true-false .option-btn {\n  width: auto;\n  min-width: 120px;\n  justify-content: center;\n  font-size: 1.1rem;\n  font-weight: 500;\n}\n\n.option-letter {\n  background-color: #f5f5f5;\n  color: #666;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  margin-right: 1rem;\n  font-weight: 600;\n}\n\n.option-text {\n  flex: 1;\n}\n\n.option-btn:hover:not(:disabled) {\n  border-color: #2196F3;\n  background-color: #f8f9fa;\n}\n\n.option-btn.selected {\n  border-color: #2196F3;\n  background-color: #e3f2fd;\n}\n\n.option-btn.correct {\n  border-color: #4CAF50;\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.option-btn.incorrect {\n  border-color: #f44336;\n  background-color: #FFEBEE;\n  color: #c62828;\n}\n\n.feedback {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n\n.correct-text {\n  color: #4CAF50;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.incorrect-text {\n  color: #f44336;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.next-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 0.8rem 2rem;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 1rem;\n  transition: all 0.2s ease;\n}\n\n.next-btn:hover {\n  background-color: #1976D2;\n  transform: translateY(-1px);\n}\n\n.explanation {\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-left: 4px solid #2196F3;\n  border-radius: 4px;\n  color: #333;\n  font-size: 0.95rem;\n  line-height: 1.5;\n}\n</style> "],"mappings":"AA+DA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;IAEnC,MAAMC,KAAK,GAAGC,OASZ;IAEF,MAAMC,IAAI,GAAGC,MAA+B;IAE5C,MAAMC,oBAAoB,GAAGN,GAAG,CAAC,CAAC,CAAC;IACnC,MAAMO,aAAa,GAAGP,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMQ,YAAY,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMS,eAAe,GAAGT,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMU,aAAa,GAAGV,GAAG,CAAC,EAAE,CAAC;IAE7B,MAAMW,kBAAkB,GAAGV,QAAQ,CAAC,MAAM;MACxC,OAAOC,KAAK,CAACU,SAAS,CAACN,oBAAoB,CAACO,KAAK,CAAC;IACpD,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAGb,QAAQ,CAAC,MAAM;MACpC,OAAOC,KAAK,CAACY,cAAc;IAC7B,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAIC,MAAM,IAAK;MAC/B,IAAIR,YAAY,CAACK,KAAK,EAAE;MAExBN,aAAa,CAACM,KAAK,GAAGG,MAAM;MAC5B,MAAMC,QAAQ,GAAGN,kBAAkB,CAACE,KAAK;MAEzCK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAChCC,WAAW,EAAEJ,MAAM;QACnBK,aAAa,EAAEJ,QAAQ,CAACI,aAAa;QACrCC,IAAI,EAAEL,QAAQ,CAACK;MACjB,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACK,IAAI,KAAK,YAAY,EAAE;QAClCb,eAAe,CAACI,KAAK,GAAGU,MAAM,CAACP,MAAM,CAAC,CAACQ,WAAW,CAAC,CAAC,KAAKD,MAAM,CAACN,QAAQ,CAACI,aAAa,CAAC,CAACG,WAAW,CAAC,CAAC;MACvG,CAAC,MAAM;QACLf,eAAe,CAACI,KAAK,GAAGU,MAAM,CAACP,MAAM,CAAC,KAAKO,MAAM,CAACN,QAAQ,CAACI,aAAa,CAAC;MAC3E;MAEAH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEV,eAAe,CAACI,KAAK,CAAC;MAC/DL,YAAY,CAACK,KAAK,GAAG,IAAI;IAC3B,CAAC;IAED,MAAMY,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMR,QAAQ,GAAGN,kBAAkB,CAACE,KAAK;MACzCH,aAAa,CAACG,KAAK,CAACa,IAAI,CAAC;QACvBC,IAAI,EAAEV,QAAQ,CAACU,IAAI;QACnBC,UAAU,EAAErB,aAAa,CAACM,KAAK;QAC/BgB,OAAO,EAAEpB,eAAe,CAACI,KAAK;QAC9BiB,UAAU,EAAEb,QAAQ,CAACa,UAAU;QAC/BC,WAAW,EAAEd,QAAQ,CAACc;MACxB,CAAC,CAAC;MAEFvB,YAAY,CAACK,KAAK,GAAG,KAAK;MAC1BJ,eAAe,CAACI,KAAK,GAAG,KAAK;MAE7B,IAAIP,oBAAoB,CAACO,KAAK,GAAG,CAAC,IAAIC,cAAc,CAACD,KAAK,EAAE;QAC1DT,IAAI,CAAC,gBAAgB,EAAEM,aAAa,CAACG,KAAK,CAAC;MAC7C,CAAC,MAAM;QACLP,oBAAoB,CAACO,KAAK,EAAE;QAC5BN,aAAa,CAACM,KAAK,GAAG,IAAI;MAC5B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}