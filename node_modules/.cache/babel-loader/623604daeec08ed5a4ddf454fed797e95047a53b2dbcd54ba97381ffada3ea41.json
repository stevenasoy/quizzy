{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { computed } from 'vue';\nimport { getScoreClass } from '../algorithms/answer-formatting';\nexport default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    },\n    predictedScore: {\n      type: Number,\n      required: false,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var totalQuestions = computed(function () {\n      return props.questions.length;\n    });\n    var scorePercentage = computed(function () {\n      return Math.round(props.score / totalQuestions.value * 100);\n    });\n    var scoreStatus = computed(function () {\n      var percentage = scorePercentage.value;\n      return getScoreClass(percentage);\n    });\n    function formatAnswer(answer, question) {\n      if (question.type === 'multiple-choice') {\n        return \"\".concat(answer, \") \").concat(question.options[answer]);\n      }\n      return answer;\n    }\n    var __returned__ = {\n      props: props,\n      totalQuestions: totalQuestions,\n      scorePercentage: scorePercentage,\n      scoreStatus: scoreStatus,\n      formatAnswer: formatAnswer,\n      computed: computed,\n      get getScoreClass() {\n        return getScoreClass;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","getScoreClass","props","__props","totalQuestions","questions","length","scorePercentage","Math","round","score","value","scoreStatus","percentage","formatAnswer","answer","question","type","concat","options"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-results\">\n    <h1>Quiz Complete!</h1>\n    \n    <div class=\"score-display\" :class=\"scoreStatus\">\n      <div class=\"score-value\">\n        <span class=\"score-number\">{{ score }}</span>\n        <span class=\"score-separator\">/</span>\n        <span class=\"total-questions\">{{ totalQuestions }}</span>\n      </div>\n      <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\n    </div>\n\n    <div class=\"prediction-message\" :class=\"scoreStatus\" v-if=\"predictedScore !== null\">\n      <p>You scored <strong>{{ scorePercentage }}%</strong>. Predicted score was <strong>{{ predictedScore }}%</strong>.</p>\n      <p class=\"prediction-comparison\" v-if=\"scorePercentage > predictedScore\">\n        <strong>Excellent!</strong> You surpassed the prediction!\n      </p>\n    </div>\n\n    <div class=\"questions-review\">\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-item\">\n        <div class=\"question-header\">\n          <h3>Question {{ index + 1 }}</h3>\n          <div class=\"status-indicator\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\n            {{ question.isCorrect ? 'âœ“' : 'X' }}\n          </div>\n        </div>\n        \n        <p class=\"question-text\">{{ question.text }}</p>\n        \n        <div class=\"answers-container\">\n          <div class=\"answer-box\">\n            <div class=\"answer-label\">YOUR ANSWER:</div>\n            <div class=\"answer-content\" :class=\"{ 'incorrect': !question.isCorrect }\">\n              <strong>{{ formatAnswer(question.userAnswer, question) }}</strong>\n            </div>\n          </div>\n\n          <div class=\"answer-box\">\n            <div class=\"answer-label\">CORRECT ANSWER:</div>\n            <div class=\"answer-content correct\">\n              <strong>{{ formatAnswer(question.correctAnswer, question) }}</strong>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"explanation\" v-if=\"question.explanation\">\n          <div class=\"explanation-label\">EXPLANATION:</div>\n          <div class=\"explanation-text\" :class=\"{ 'correct-highlight': question.isCorrect, 'incorrect-highlight': !question.isCorrect }\">\n            {{ question.explanation }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { getScoreClass } from '../algorithms/answer-formatting';\n\nconst props = defineProps({\n  questions: {\n    type: Array,\n    required: true\n  },\n  userAnswers: {\n    type: Array,\n    required: true\n  },\n  score: {\n    type: Number,\n    required: true\n  },\n  predictedScore: {\n    type: Number,\n    required: false,\n    default: null\n  }\n});\n\nconst totalQuestions = computed(() => props.questions.length);\nconst scorePercentage = computed(() => {\n  return Math.round((props.score / totalQuestions.value) * 100);\n});\n\nconst scoreStatus = computed(() => {\n  const percentage = scorePercentage.value;\n  return getScoreClass(percentage);\n});\n\nfunction formatAnswer(answer, question) {\n  if (question.type === 'multiple-choice') {\n    return `${answer}) ${question.options[answer]}`;\n  }\n  return answer;\n}\n</script>\n\n<style scoped>\n.quiz-results {\n  max-width: 800px;\n  margin: 2rem auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  font-family: \"Helvetica\", \"Arial\", sans-serif;\n}\n\nh1 {\n  font-size: 1.5rem;\n  margin-bottom: 2rem;\n  color: #333;\n  font-weight: 600;\n  text-align: center;\n}\n\n.score-display {\n  border-radius: 12px;\n  padding: 2rem;\n  text-align: center;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n}\n\n.score-display.excellent {\n  background-color: #e8f5e9;\n  border: 3px solid #4CAF50;\n}\n\n.score-display.good {\n  background-color: #e3f2fd;\n  border: 3px solid #2196F3;\n}\n\n.score-display.average {\n  background-color: #fff3e0;\n  border: 3px solid #FF9800;\n}\n\n.score-display.needs-improvement {\n  background-color: #ffebee;\n  border: 3px solid #f44336;\n}\n\n.score-value {\n  font-size: 4rem;\n  font-weight: 800;\n  color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  gap: 0.5rem;\n  line-height: 1;\n}\n\n.score-separator {\n  color: #666;\n  margin: 0 0.2rem;\n}\n\n.score-percentage {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #666;\n  margin-top: 1rem;\n}\n\n.prediction-message {\n  padding: 1.5rem;\n  border-radius: 8px;\n  margin-bottom: 2rem;\n  text-align: center;\n  font-size: 1rem;\n  border: 1px solid;\n}\n\n.prediction-message.excellent {\n  background-color: #e8f5e9;\n  border-color: #4CAF50;\n  color: #2E7D32;\n}\n\n.prediction-message.good {\n  background-color: #e3f2fd;\n  border-color: #2196F3;\n  color: #1565C0;\n}\n\n.prediction-message.average {\n  background-color: #fff3e0;\n  border-color: #FF9800;\n  color: #E65100;\n}\n\n.prediction-message.needs-improvement {\n  background-color: #ffebee;\n  border-color: #f44336;\n  color: #c62828;\n}\n\n.prediction-message.exceeded {\n  background-color: #e8f5e9;\n  border-color: #4CAF50;\n  color: #2E7D32;\n}\n\n.prediction-message.met {\n  background-color: #e3f2fd;\n  border-color: #2196F3;\n  color: #1565C0;\n}\n\n.prediction-message.below {\n  background-color: #ffebee;\n  border-color: #f44336;\n  color: #c62828;\n}\n\n.prediction-message strong {\n  font-weight: 700;\n}\n\n.prediction-comparison {\n  color: #4CAF50;\n  margin-top: 0.5rem;\n  font-weight: 600;\n  font-size: 1.1rem;\n}\n\n.prediction-comparison strong {\n  font-weight: 700;\n}\n\n.question-item {\n  background: white;\n  border-radius: 8px;\n  margin-bottom: 1.5rem;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.question-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.question-header h3 {\n  color: #666;\n  font-size: 1rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.status-indicator {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 800;\n  font-size: 1rem;\n}\n\n.status-indicator.correct {\n  background-color: #e8f5e9;\n  color: #2e7d32;\n}\n\n.status-indicator.incorrect {\n  background-color: #ffebee;\n  color: #c62828;\n}\n\n.question-text {\n  padding: 1.5rem;\n  margin: 0;\n  color: #333;\n  font-size: 1.1rem;\n  line-height: 1.5;\n}\n\n.answers-container {\n  padding: 1rem 1.5rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1.5rem;\n}\n\n.answer-box {\n  background: #f8f9fa;\n  padding: 1rem;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n}\n\n.answer-label {\n  font-size: 0.8rem;\n  color: #666;\n  margin-bottom: 0.75rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.answer-content {\n  color: #333;\n  font-size: 1rem;\n  line-height: 1.4;\n}\n\n.answer-content.incorrect {\n  color: #c62828;\n}\n\n.answer-content.correct {\n  color: #2e7d32;\n}\n\n.answer-content strong {\n  font-weight: 600;\n}\n\n.explanation {\n  padding: 1.5rem;\n  background-color: #fff;\n  margin: 1rem 1.5rem 1.5rem;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n}\n\n.explanation-label {\n  font-weight: 700;\n  color: #666;\n  margin-bottom: 0.75rem;\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.explanation-text {\n  margin: 0;\n  color: #333;\n  line-height: 1.6;\n  font-size: 1rem;\n  padding: 1rem;\n  border-radius: 4px;\n}\n\n.explanation-text.correct-highlight {\n  background-color: #e8f5e9;\n  border-left: 4px solid #4CAF50;\n}\n\n.explanation-text.incorrect-highlight {\n  background-color: #ffebee;\n  border-left: 4px solid #f44336;\n}\n</style> "],"mappings":";;;AA2DA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,aAAa,QAAQ,iCAAiC;;;;;;;;;;;;;;;;;;;;;;;;;IAE/D,IAAMC,KAAK,GAAGC,OAkBZ;IAEF,IAAMC,cAAc,GAAGJ,QAAQ,CAAC;MAAA,OAAME,KAAK,CAACG,SAAS,CAACC,MAAM;IAAA,EAAC;IAC7D,IAAMC,eAAe,GAAGP,QAAQ,CAAC,YAAM;MACrC,OAAOQ,IAAI,CAACC,KAAK,CAAEP,KAAK,CAACQ,KAAK,GAAGN,cAAc,CAACO,KAAK,GAAI,GAAG,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAMC,WAAW,GAAGZ,QAAQ,CAAC,YAAM;MACjC,IAAMa,UAAU,GAAGN,eAAe,CAACI,KAAK;MACxC,OAAOV,aAAa,CAACY,UAAU,CAAC;IAClC,CAAC,CAAC;IAEF,SAASC,YAAYA,CAACC,MAAM,EAAEC,QAAQ,EAAE;MACtC,IAAIA,QAAQ,CAACC,IAAI,KAAK,iBAAiB,EAAE;QACvC,UAAAC,MAAA,CAAUH,MAAM,QAAAG,MAAA,CAAKF,QAAQ,CAACG,OAAO,CAACJ,MAAM,CAAC;MAC/C;MACA,OAAOA,MAAM;IACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}