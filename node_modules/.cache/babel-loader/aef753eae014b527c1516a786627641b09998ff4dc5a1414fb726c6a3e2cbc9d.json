{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/**\r\n * Question Management Algorithms Module\r\n */\n\n/**\r\n * Implements Fisher-Yates shuffle algorithm\r\n * @param {Array} array - Array to shuffle\r\n * @returns {Array} Shuffled array\r\n */\nexport function shuffleQuestions(array) {\n  var shuffled = _toConsumableArray(array);\n  for (var i = shuffled.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [shuffled[j], shuffled[i]];\n    shuffled[i] = _ref[0];\n    shuffled[j] = _ref[1];\n  }\n  return shuffled;\n}\n\n/**\r\n * Distributes questions by difficulty\r\n * @param {Array} questions - Array of questions\r\n * @param {number} targetCount - Desired number of questions\r\n * @returns {Array} Balanced question set\r\n */\nexport function distributeByDifficulty(questions, targetCount) {\n  var targetPerDifficulty = Math.ceil(targetCount / 3);\n  var difficultyCount = {\n    easy: 0,\n    medium: 0,\n    hard: 0\n  };\n  var selectedQuestions = [];\n  var _loop = function _loop() {\n    var difficulty = _arr[_i];\n    var questionsOfDifficulty = questions.filter(function (q) {\n      return q.difficulty === difficulty && !selectedQuestions.includes(q);\n    });\n    var _iterator = _createForOfIteratorHelper(questionsOfDifficulty),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var question = _step.value;\n        if (difficultyCount[difficulty] < targetPerDifficulty && selectedQuestions.length < targetCount) {\n          selectedQuestions.push(question);\n          difficultyCount[difficulty]++;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  for (var _i = 0, _arr = ['easy', 'medium', 'hard']; _i < _arr.length; _i++) {\n    _loop();\n  }\n  return selectedQuestions;\n}","map":{"version":3,"names":["shuffleQuestions","array","shuffled","_toConsumableArray","i","length","j","Math","floor","random","_ref","distributeByDifficulty","questions","targetCount","targetPerDifficulty","ceil","difficultyCount","easy","medium","hard","selectedQuestions","_loop","difficulty","_arr","_i","questionsOfDifficulty","filter","q","includes","_iterator","_createForOfIteratorHelper","_step","s","n","done","question","value","push","err","e","f"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/algorithms/question-management/index.js"],"sourcesContent":["/**\r\n * Question Management Algorithms Module\r\n */\r\n\r\n/**\r\n * Implements Fisher-Yates shuffle algorithm\r\n * @param {Array} array - Array to shuffle\r\n * @returns {Array} Shuffled array\r\n */\r\nexport function shuffleQuestions(array) {\r\n  const shuffled = [...array];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n  }\r\n  return shuffled;\r\n}\r\n\r\n/**\r\n * Distributes questions by difficulty\r\n * @param {Array} questions - Array of questions\r\n * @param {number} targetCount - Desired number of questions\r\n * @returns {Array} Balanced question set\r\n */\r\nexport function distributeByDifficulty(questions, targetCount) {\r\n  const targetPerDifficulty = Math.ceil(targetCount / 3);\r\n  const difficultyCount = { easy: 0, medium: 0, hard: 0 };\r\n  const selectedQuestions = [];\r\n\r\n  for (const difficulty of ['easy', 'medium', 'hard']) {\r\n    const questionsOfDifficulty = questions.filter(q => \r\n      q.difficulty === difficulty && !selectedQuestions.includes(q)\r\n    );\r\n    \r\n    for (const question of questionsOfDifficulty) {\r\n      if (difficultyCount[difficulty] < targetPerDifficulty && \r\n          selectedQuestions.length < targetCount) {\r\n        selectedQuestions.push(question);\r\n        difficultyCount[difficulty]++;\r\n      }\r\n    }\r\n  }\r\n\r\n  return selectedQuestions;\r\n} "],"mappings":";;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAgBA,CAACC,KAAK,EAAE;EACtC,IAAMC,QAAQ,GAAAC,kBAAA,CAAOF,KAAK,CAAC;EAC3B,KAAK,IAAIG,CAAC,GAAGF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5C,IAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAAC,IAAAM,IAAA,GACjB,CAACR,QAAQ,CAACI,CAAC,CAAC,EAAEJ,QAAQ,CAACE,CAAC,CAAC,CAAC;IAAtDF,QAAQ,CAACE,CAAC,CAAC,GAAAM,IAAA;IAAER,QAAQ,CAACI,CAAC,CAAC,GAAAI,IAAA;EAC3B;EACA,OAAOR,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,sBAAsBA,CAACC,SAAS,EAAEC,WAAW,EAAE;EAC7D,IAAMC,mBAAmB,GAAGP,IAAI,CAACQ,IAAI,CAACF,WAAW,GAAG,CAAC,CAAC;EACtD,IAAMG,eAAe,GAAG;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC;EACvD,IAAMC,iBAAiB,GAAG,EAAE;EAAC,IAAAC,KAAA,YAAAA,MAAA,EAEwB;IAAhD,IAAMC,UAAU,GAAAC,IAAA,CAAAC,EAAA;IACnB,IAAMC,qBAAqB,GAAGb,SAAS,CAACc,MAAM,CAAC,UAAAC,CAAC;MAAA,OAC9CA,CAAC,CAACL,UAAU,KAAKA,UAAU,IAAI,CAACF,iBAAiB,CAACQ,QAAQ,CAACD,CAAC,CAAC;IAAA,CAC/D,CAAC;IAAC,IAAAE,SAAA,GAAAC,0BAAA,CAEqBL,qBAAqB;MAAAM,KAAA;IAAA;MAA5C,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8C;QAAA,IAAnCC,QAAQ,GAAAJ,KAAA,CAAAK,KAAA;QACjB,IAAIpB,eAAe,CAACM,UAAU,CAAC,GAAGR,mBAAmB,IACjDM,iBAAiB,CAACf,MAAM,GAAGQ,WAAW,EAAE;UAC1CO,iBAAiB,CAACiB,IAAI,CAACF,QAAQ,CAAC;UAChCnB,eAAe,CAACM,UAAU,CAAC,EAAE;QAC/B;MACF;IAAC,SAAAgB,GAAA;MAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;IAAA;MAAAT,SAAA,CAAAW,CAAA;IAAA;EACH,CAAC;EAZD,SAAAhB,EAAA,MAAAD,IAAA,GAAyB,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAAC,EAAA,GAAAD,IAAA,CAAAlB,MAAA,EAAAmB,EAAA;IAAAH,KAAA;EAAA;EAcnD,OAAOD,iBAAiB;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}