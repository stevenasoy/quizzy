{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { getScoreClass } from '../algorithms/answer-formatting';\nexport default {\n  __name: 'QuizHistoryDetails',\n  props: {\n    quiz: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['retake-quiz', 'close'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var formatDate = function formatDate(date) {\n      return new Date(date).toLocaleString();\n    };\n    var formatAnswer = function formatAnswer(answer, question) {\n      if (!answer && answer !== false) return 'Not answered';\n      if (question.type === 'multiple-choice' && question.options) {\n        return \"\".concat(answer, \") \").concat(question.options[answer]);\n      } else if (question.type === 'true-false') {\n        return String(answer).charAt(0).toUpperCase() + String(answer).slice(1);\n      }\n      return answer;\n    };\n    var __returned__ = {\n      formatDate: formatDate,\n      formatAnswer: formatAnswer,\n      get getScoreClass() {\n        return getScoreClass;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["getScoreClass","formatDate","date","Date","toLocaleString","formatAnswer","answer","question","type","options","concat","String","charAt","toUpperCase","slice"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizHistoryDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-history-details\">\r\n    <div class=\"header\">\r\n      <button class=\"close-btn\" @click=\"$emit('close')\">&times;</button>\r\n      <h2>Quiz History</h2>\r\n      <div class=\"file-info\">\r\n        <span class=\"file-name\">{{ quiz.fileName }}</span>\r\n        <span class=\"date\">{{ formatDate(quiz.date) }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"score-display\" :class=\"getScoreClass(quiz.actualScore * 100)\">\r\n      <div class=\"score-value\">\r\n        <span class=\"score-number\">{{ Math.round(quiz.actualScore * 100) }}</span>\r\n        <span class=\"score-separator\">/</span>\r\n        <span class=\"total-questions\">100</span>\r\n      </div>\r\n      <div class=\"score-percentage\">({{ Math.round(quiz.actualScore * 100) }}%)</div>\r\n    </div>\r\n\r\n    <div class=\"prediction-message\" :class=\"getScoreClass(quiz.actualScore * 100)\" v-if=\"quiz.predictedScore !== null\">\r\n      <p>You scored <strong>{{ Math.round(quiz.actualScore * 100) }}%</strong>. \r\n         Predicted score was <strong>{{ quiz.predictedScore }}%</strong>.</p>\r\n      <p class=\"prediction-comparison\" v-if=\"quiz.actualScore * 100 > quiz.predictedScore\">\r\n        <strong>Excellent!</strong> You surpassed the prediction!\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <div v-for=\"(question, index) in quiz.questions\" :key=\"index\" class=\"question-item\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ index + 1 }}</h3>\r\n          <div class=\"status-indicator\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? 'âœ“' : 'X' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answers-container\">\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">YOUR ANSWER:</div>\r\n            <div class=\"answer-content\" :class=\"{ 'incorrect': !question.isCorrect }\">\r\n              <strong>{{ formatAnswer(question.userAnswer, question) }}</strong>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">CORRECT ANSWER:</div>\r\n            <div class=\"answer-content correct\">\r\n              <strong>{{ formatAnswer(question.correctAnswer, question) }}</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"explanation\" v-if=\"question.explanation\">\r\n          <div class=\"explanation-label\">EXPLANATION:</div>\r\n          <div class=\"explanation-text\" :class=\"{ 'correct-highlight': question.isCorrect, 'incorrect-highlight': !question.isCorrect }\">\r\n            {{ question.explanation }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n      <button class=\"retake-btn\" @click=\"$emit('retake-quiz', quiz)\">Retake Quiz</button>\r\n      <button class=\"close-btn-bottom\" @click=\"$emit('close')\">Close</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from 'vue';\r\nimport { getScoreClass } from '../algorithms/answer-formatting';\r\n\r\ndefineProps({\r\n  quiz: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n});\r\n\r\ndefineEmits(['retake-quiz', 'close']);\r\n\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleString();\r\n};\r\n\r\nconst formatAnswer = (answer, question) => {\r\n  if (!answer && answer !== false) return 'Not answered';\r\n  \r\n  if (question.type === 'multiple-choice' && question.options) {\r\n    return `${answer}) ${question.options[answer]}`;\r\n  } else if (question.type === 'true-false') {\r\n    return String(answer).charAt(0).toUpperCase() + String(answer).slice(1);\r\n  }\r\n  return answer;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-history-details {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  font-family: \"Helvetica\", \"Arial\", sans-serif;\r\n  position: relative;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #666;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  line-height: 1;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #333;\r\n}\r\n\r\n.file-info {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 500;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.score-display {\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n.score-display.excellent {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.good {\r\n  background-color: #e3f2fd;\r\n  border: 3px solid #2196F3;\r\n}\r\n\r\n.score-display.average {\r\n  background-color: #fff3e0;\r\n  border: 3px solid #FF9800;\r\n}\r\n\r\n.score-display.needs-improvement {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.score-value {\r\n  font-size: 4rem;\r\n  font-weight: 800;\r\n  color: #333;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  gap: 0.5rem;\r\n  line-height: 1;\r\n}\r\n\r\n.score-separator {\r\n  color: #666;\r\n  margin: 0 0.2rem;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #666;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.prediction-message {\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  border: 1px solid;\r\n}\r\n\r\n.prediction-message.excellent {\r\n  background-color: #e8f5e9;\r\n  border-color: #4CAF50;\r\n  color: #2E7D32;\r\n}\r\n\r\n.prediction-message.good {\r\n  background-color: #e3f2fd;\r\n  border-color: #2196F3;\r\n  color: #1565C0;\r\n}\r\n\r\n.prediction-message.average {\r\n  background-color: #fff3e0;\r\n  border-color: #FF9800;\r\n  color: #E65100;\r\n}\r\n\r\n.prediction-message.needs-improvement {\r\n  background-color: #ffebee;\r\n  border-color: #f44336;\r\n  color: #d32f2f;\r\n}\r\n\r\n.questions-review {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.question-item {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.question-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.status-indicator {\r\n  font-weight: bold;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.status-indicator.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.status-indicator.incorrect {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.answers-container {\r\n  display: grid;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.answer-box {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 6px;\r\n}\r\n\r\n.answer-label {\r\n  font-size: 0.8rem;\r\n  text-transform: uppercase;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.answer-content {\r\n  color: #333;\r\n}\r\n\r\n.answer-content.correct {\r\n  color: #2e7d32;\r\n}\r\n\r\n.answer-content.incorrect {\r\n  color: #c62828;\r\n}\r\n\r\n.explanation {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 6px;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.explanation-label {\r\n  font-size: 0.8rem;\r\n  text-transform: uppercase;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.5;\r\n}\r\n\r\n.explanation-text.correct-highlight {\r\n  border-left: 3px solid #4caf50;\r\n  padding-left: 1rem;\r\n}\r\n\r\n.explanation-text.incorrect-highlight {\r\n  border-left: 3px solid #f44336;\r\n  padding-left: 1rem;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n  padding-top: 2rem;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.retake-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.8rem 2rem;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.retake-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.close-btn-bottom {\r\n  background-color: #f5f5f5;\r\n  color: #666;\r\n  border: 1px solid #ddd;\r\n  padding: 0.8rem 2rem;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.close-btn-bottom:hover {\r\n  background-color: #e0e0e0;\r\n  color: #333;\r\n}\r\n</style> "],"mappings":";;;;AAyEA,SAASA,aAAa,QAAQ,iCAAiC;;;;;;;;;;;;;IAW/D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;MAC3B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,cAAc,CAAC,CAAC;IACxC,CAAC;IAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAEC,QAAQ,EAAK;MACzC,IAAI,CAACD,MAAM,IAAIA,MAAM,KAAK,KAAK,EAAE,OAAO,cAAc;MAEtD,IAAIC,QAAQ,CAACC,IAAI,KAAK,iBAAiB,IAAID,QAAQ,CAACE,OAAO,EAAE;QAC3D,UAAAC,MAAA,CAAUJ,MAAM,QAAAI,MAAA,CAAKH,QAAQ,CAACE,OAAO,CAACH,MAAM,CAAC;MAC/C,CAAC,MAAM,IAAIC,QAAQ,CAACC,IAAI,KAAK,YAAY,EAAE;QACzC,OAAOG,MAAM,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACL,MAAM,CAAC,CAACQ,KAAK,CAAC,CAAC,CAAC;MACzE;MACA,OAAOR,MAAM;IACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}