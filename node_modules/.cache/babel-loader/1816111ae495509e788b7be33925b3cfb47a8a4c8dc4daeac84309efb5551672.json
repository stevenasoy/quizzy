{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"calendar-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"months-grid\"\n};\nvar _hoisted_3 = {\n  \"class\": \"month-title\"\n};\nvar _hoisted_4 = {\n  \"class\": \"calendar-grid\"\n};\nvar _hoisted_5 = {\n  \"class\": \"weekday-header\"\n};\nvar _hoisted_6 = {\n  \"class\": \"days-grid\"\n};\nvar _hoisted_7 = [\"title\"];\nvar _hoisted_8 = {\n  \"class\": \"date-number\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.monthsData, function (month) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: month.name,\n      \"class\": \"month-card\"\n    }, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString(month.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.weekdays, function (day) {\n      return _createElementVNode(\"div\", {\n        key: day,\n        \"class\": \"weekday\"\n      }, _toDisplayString(day), 1 /* TEXT */);\n    }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(month.days, function (day, index) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        \"class\": _normalizeClass([\"day-cell\", $setup.getDayClass(day)]),\n        title: $setup.getDayTooltip(day)\n      }, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(day.date ? day.date.getDate() : ''), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[0] || (_cache[0] = _createStaticVNode(\"<div class=\\\"legend\\\" data-v-57e95f4e><span data-v-57e95f4e>Less</span><div class=\\\"legend-item empty\\\" data-v-57e95f4e></div><div class=\\\"legend-item activity-low\\\" data-v-57e95f4e></div><div class=\\\"legend-item activity-medium\\\" data-v-57e95f4e></div><div class=\\\"legend-item activity-high\\\" data-v-57e95f4e></div><span data-v-57e95f4e>More</span></div>\", 1))]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","monthsData","month","key","name","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","weekdays","day","_hoisted_6","days","index","_normalizeClass","getDayClass","title","getDayTooltip","_hoisted_8","date","getDate"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\CalendarHeatmap.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-container\">\r\n    <div class=\"months-grid\">\r\n      <div v-for=\"month in monthsData\" :key=\"month.name\" class=\"month-card\">\r\n        <h3 class=\"month-title\">{{ month.name }}</h3>\r\n        <div class=\"calendar-grid\">\r\n          <div class=\"weekday-header\">\r\n            <div v-for=\"day in weekdays\" :key=\"day\" class=\"weekday\">\r\n              {{ day }}\r\n            </div>\r\n          </div>\r\n          <div class=\"days-grid\">\r\n            <div v-for=\"(day, index) in month.days\" \r\n              :key=\"index\"\r\n              class=\"day-cell\"\r\n              :class=\"getDayClass(day)\"\r\n              :title=\"getDayTooltip(day)\"\r\n            >\r\n              <span class=\"date-number\">{{ day.date ? day.date.getDate() : '' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"legend\">\r\n      <span>Less</span>\r\n      <div class=\"legend-item empty\"></div>\r\n      <div class=\"legend-item activity-low\"></div>\r\n      <div class=\"legend-item activity-medium\"></div>\r\n      <div class=\"legend-item activity-high\"></div>\r\n      <span>More</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  activities: {\r\n    type: Array,\r\n    required: true,\r\n    default: () => []\r\n  }\r\n});\r\n\r\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthNames = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst monthsData = computed(() => {\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  return monthNames.map((name, monthIndex) => {\r\n    const firstDay = new Date(currentYear, monthIndex, 1);\r\n    const lastDay = new Date(currentYear, monthIndex + 1, 0);\r\n    const daysInMonth = lastDay.getDate();\r\n    const startingDayIndex = firstDay.getDay();\r\n    \r\n    // Create array for all days in the month\r\n    const days = [];\r\n    \r\n    // Add empty cells for days before the first of the month\r\n    for (let i = 0; i < startingDayIndex; i++) {\r\n      days.push({ date: null });\r\n    }\r\n    \r\n    // Add all days of the month\r\n    for (let date = 1; date <= daysInMonth; date++) {\r\n      const currentDate = new Date(currentYear, monthIndex, date);\r\n      const dateStr = currentDate.toISOString().split('T')[0];\r\n      const activity = props.activities.find(a => a.date === dateStr);\r\n      \r\n      days.push({\r\n        date: currentDate,\r\n        count: activity ? activity.count : 0,\r\n        isCurrentMonth: true\r\n      });\r\n    }\r\n    \r\n    // Add empty cells to complete the last week\r\n    const remainingCells = (7 - (days.length % 7)) % 7;\r\n    for (let i = 0; i < remainingCells; i++) {\r\n      days.push({ date: null });\r\n    }\r\n    \r\n    return {\r\n      name,\r\n      days\r\n    };\r\n  });\r\n});\r\n\r\nconst getDayClass = (day) => {\r\n  if (!day.date) return 'empty-day';\r\n  \r\n  const classes = ['has-date'];\r\n  \r\n  if (day.count > 0) {\r\n    classes.push('has-activity');\r\n    if (day.count <= 2) classes.push('activity-low');\r\n    else if (day.count <= 5) classes.push('activity-medium');\r\n    else classes.push('activity-high');\r\n  }\r\n  \r\n  const today = new Date();\r\n  if (day.date.toDateString() === today.toDateString()) {\r\n    classes.push('today');\r\n  }\r\n  \r\n  return classes;\r\n};\r\n\r\nconst getDayTooltip = (day) => {\r\n  if (!day.date) return '';\r\n  const dateStr = day.date.toLocaleDateString(undefined, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n  return day.count > 0\r\n    ? `${dateStr}: ${day.count} activities`\r\n    : dateStr;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-container {\r\n  padding: 1rem;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  overflow-x: auto;\r\n  background: #ffffff;\r\n}\r\n\r\n.months-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n  min-width: 1200px;\r\n}\r\n\r\n.month-card {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 0.75rem;\r\n  border: 1px solid #e1e4e8;\r\n}\r\n\r\n.month-title {\r\n  margin: 0 0 0.5rem;\r\n  font-size: 0.9rem;\r\n  color: #24292e;\r\n  text-align: center;\r\n  font-weight: 600;\r\n}\r\n\r\n.calendar-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.weekday-header {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  text-align: center;\r\n  font-size: 0.7rem;\r\n  color: #57606a;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.weekday {\r\n  padding: 0.15rem;\r\n}\r\n\r\n.days-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 1px;\r\n}\r\n\r\n.day-cell {\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  background: #ebedf0;\r\n  border: 1px solid #ffffff;\r\n}\r\n\r\n.day-cell.empty-day {\r\n  background: transparent;\r\n  border: none;\r\n}\r\n\r\n.date-number {\r\n  font-size: 0.7rem;\r\n  color: #57606a;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.day-cell.has-activity {\r\n  color: #57606a;\r\n}\r\n\r\n.day-cell.activity-low {\r\n  background-color: #e6ffec;\r\n  border-color: #e6ffec;\r\n}\r\n\r\n.day-cell.activity-medium {\r\n  background-color: #9be9a8;\r\n  border-color: #9be9a8;\r\n}\r\n\r\n.day-cell.activity-high {\r\n  background-color: #40c463;\r\n  border-color: #40c463;\r\n}\r\n\r\n.day-cell.today {\r\n  border: 2px solid #0969da;\r\n}\r\n\r\n.legend {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  justify-content: center;\r\n  font-size: 0.75rem;\r\n  color: #57606a;\r\n  padding: 0.75rem;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #e1e4e8;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.legend-item {\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 2px;\r\n  border: 1px solid #ffffff;\r\n}\r\n\r\n.legend-item.empty {\r\n  background-color: #ebedf0;\r\n  border-color: #ebedf0;\r\n}\r\n\r\n.legend-item.activity-low {\r\n  background-color: #e6ffec;\r\n  border-color: #e6ffec;\r\n}\r\n\r\n.legend-item.activity-medium {\r\n  background-color: #9be9a8;\r\n  border-color: #9be9a8;\r\n}\r\n\r\n.legend-item.activity-high {\r\n  background-color: #40c463;\r\n  border-color: #40c463;\r\n}\r\n\r\n@media (max-width: 1400px) {\r\n  .months-grid {\r\n    grid-template-columns: repeat(4, 1fr);\r\n    min-width: 800px;\r\n  }\r\n}\r\n\r\n@media (max-width: 900px) {\r\n  .months-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    min-width: 600px;\r\n  }\r\n  \r\n  .month-card {\r\n    padding: 0.5rem;\r\n  }\r\n  \r\n  .month-title {\r\n    font-size: 0.8rem;\r\n  }\r\n  \r\n  .date-number {\r\n    font-size: 0.65rem;\r\n  }\r\n}\r\n</style> "],"mappings":";;;EACO,SAAM;AAAoB;;EACxB,SAAM;AAAa;;EAEhB,SAAM;AAAa;;EAClB,SAAM;AAAe;;EACnB,SAAM;AAAgB;;EAKtB,SAAM;AAAW;;;EAOZ,SAAM;AAAa;;uBAjBrCA,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,CAqBM,OArBNC,UAqBM,I,kBApBJH,mBAAA,CAmBMI,SAAA,QAAAC,WAAA,CAnBeC,MAAA,CAAAC,UAAU,YAAnBC,KAAK;yBAAjBR,mBAAA,CAmBM;MAnB4BS,GAAG,EAAED,KAAK,CAACE,IAAI;MAAE,SAAM;QACvDR,mBAAA,CAA6C,MAA7CS,UAA6C,EAAAC,gBAAA,CAAlBJ,KAAK,CAACE,IAAI,kBACrCR,mBAAA,CAgBM,OAhBNW,UAgBM,GAfJX,mBAAA,CAIM,OAJNY,UAIM,I,cAHJd,mBAAA,CAEMI,SAAA,QAAAC,WAAA,CAFaC,MAAA,CAAAS,QAAQ,YAAfC,GAAG;aAAfd,mBAAA,CAEM;QAFwBO,GAAG,EAAEO,GAAG;QAAE,SAAM;0BACzCA,GAAG;sCAGVd,mBAAA,CASM,OATNe,UASM,I,kBARJjB,mBAAA,CAOMI,SAAA,QAAAC,WAAA,CAPsBG,KAAK,CAACU,IAAI,YAAzBF,GAAG,EAAEG,KAAK;2BAAvBnB,mBAAA,CAOM;QANHS,GAAG,EAAEU,KAAK;QACX,SAAKC,eAAA,EAAC,UAAU,EACRd,MAAA,CAAAe,WAAW,CAACL,GAAG;QACtBM,KAAK,EAAEhB,MAAA,CAAAiB,aAAa,CAACP,GAAG;UAEzBd,mBAAA,CAAyE,QAAzEsB,UAAyE,EAAAZ,gBAAA,CAA5CI,GAAG,CAACS,IAAI,GAAGT,GAAG,CAACS,IAAI,CAACC,OAAO,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}