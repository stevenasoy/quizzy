{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    },\n    predictedScore: {\n      type: Number,\n      required: false,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var totalQuestions = computed(function () {\n      return props.questions.length;\n    });\n    var scorePercentage = computed(function () {\n      return Math.round(props.score / totalQuestions.value * 100);\n    });\n    var scoreClass = computed(function () {\n      return scorePercentage.value >= 75 ? 'passing' : 'failing';\n    });\n    function formatExplanation(question) {\n      if (!question.explanation) return \"No explanation available.\";\n\n      // Add a supportive prefix for correct answers\n      if (question.isCorrect) {\n        var correctPhrases = [\"That's right! \", \"Excellent work! \", \"Perfect answer! \", \"You got it! \", \"Spot on! \"];\n        var _randomPhrase = correctPhrases[Math.floor(Math.random() * correctPhrases.length)];\n        return \"\".concat(_randomPhrase).concat(question.explanation);\n      }\n\n      // Add a gentle correction prefix for incorrect answers\n      var incorrectPhrases = [\"Let's understand why: \", \"Here's the explanation: \", \"To clarify this concept: \", \"Let me explain: \", \"Here's what you need to know: \"];\n      var randomPhrase = incorrectPhrases[Math.floor(Math.random() * incorrectPhrases.length)];\n      return \"\".concat(randomPhrase).concat(question.explanation);\n    }\n    var __returned__ = {\n      props: props,\n      totalQuestions: totalQuestions,\n      scorePercentage: scorePercentage,\n      scoreClass: scoreClass,\n      formatExplanation: formatExplanation,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","totalQuestions","questions","length","scorePercentage","Math","round","score","value","scoreClass","formatExplanation","question","explanation","isCorrect","correctPhrases","randomPhrase","floor","random","concat","incorrectPhrases"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Results</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <h3>Your Score: {{ scorePercentage }}%</h3>\r\n      <p v-if=\"predictedScore !== null\" class=\"prediction-comparison\">\r\n        Predicted Score: {{ predictedScore }}%\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <h3>Questions Review</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-review\">\r\n        <div class=\"question-header\">\r\n          <div class=\"question-info\">\r\n            <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n            <span class=\"question-difficulty\">({{ question.difficulty }})</span>\r\n          </div>\r\n          <span class=\"answer-status\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? 'Correct' : 'Incorrect' }}\r\n          </span>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answer-details\">\r\n          <div class=\"answer-row\">\r\n            <p class=\"your-answer\">\r\n              <strong>Your answer:</strong> {{ question.userAnswer }}\r\n            </p>\r\n            <p class=\"correct-answer\" v-if=\"!question.isCorrect\">\r\n              <strong>Correct answer:</strong> {{ question.correctAnswer }}\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"explanation-box\" :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n            <p class=\"explanation-label\">Explanation:</p>\r\n            <p class=\"explanation-text\">{{ formatExplanation(question) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"action-buttons\">\r\n      <button @click=\"$emit('restart')\" class=\"restart-btn\">Try Again</button>\r\n      <button @click=\"$emit('go-back')\" class=\"back-btn\">Back to Upload</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\nfunction formatExplanation(question) {\r\n  if (!question.explanation) return \"No explanation available.\";\r\n  \r\n  // Add a supportive prefix for correct answers\r\n  if (question.isCorrect) {\r\n    const correctPhrases = [\r\n      `That's right! `,\r\n      `Excellent work! `,\r\n      `Perfect answer! `,\r\n      `You got it! `,\r\n      `Spot on! `\r\n    ];\r\n    const randomPhrase = correctPhrases[Math.floor(Math.random() * correctPhrases.length)];\r\n    return `${randomPhrase}${question.explanation}`;\r\n  }\r\n\r\n  // Add a gentle correction prefix for incorrect answers\r\n  const incorrectPhrases = [\r\n    `Let's understand why: `,\r\n    `Here's the explanation: `,\r\n    `To clarify this concept: `,\r\n    `Let me explain: `,\r\n    `Here's what you need to know: `\r\n  ];\r\n  const randomPhrase = incorrectPhrases[Math.floor(Math.random() * incorrectPhrases.length)];\r\n  return `${randomPhrase}${question.explanation}`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n}\r\n\r\n.score-display {\r\n  margin: 2rem 0;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.question-difficulty {\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.answer-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.answer-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.answer-status.incorrect {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.answer-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.explanation-box {\r\n  margin-top: 1.5rem;\r\n  padding: 1.5rem;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.explanation-box.correct {\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.explanation-box.incorrect {\r\n  border-left: 4px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 600;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n}\r\n\r\n.restart-btn, .back-btn {\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.restart-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.back-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.restart-btn:hover, .back-btn:hover {\r\n  transform: translateY(-1px);\r\n}\r\n</style> "],"mappings":";;;AAmDA,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;IAE9B,IAAMC,KAAK,GAAGC,OAkBZ;IAEF,IAAMC,cAAc,GAAGH,QAAQ,CAAC;MAAA,OAAMC,KAAK,CAACG,SAAS,CAACC,MAAM;IAAA,EAAC;IAC7D,IAAMC,eAAe,GAAGN,QAAQ,CAAC,YAAM;MACrC,OAAOO,IAAI,CAACC,KAAK,CAAEP,KAAK,CAACQ,KAAK,GAAGN,cAAc,CAACO,KAAK,GAAI,GAAG,CAAC;IAC/D,CAAC,CAAC;IACF,IAAMC,UAAU,GAAGX,QAAQ,CAAC,YAAM;MAChC,OAAOM,eAAe,CAACI,KAAK,IAAI,EAAE,GAAG,SAAS,GAAG,SAAS;IAC5D,CAAC,CAAC;IAEF,SAASE,iBAAiBA,CAACC,QAAQ,EAAE;MACnC,IAAI,CAACA,QAAQ,CAACC,WAAW,EAAE,OAAO,2BAA2B;;MAE7D;MACA,IAAID,QAAQ,CAACE,SAAS,EAAE;QACtB,IAAMC,cAAc,GAAG,uFAMtB;QACD,IAAMC,aAAY,GAAGD,cAAc,CAACT,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,GAAGH,cAAc,CAACX,MAAM,CAAC,CAAC;QACtF,UAAAe,MAAA,CAAUH,aAAY,EAAAG,MAAA,CAAGP,QAAQ,CAACC,WAAW;MAC/C;;MAEA;MACA,IAAMO,gBAAgB,GAAG,yIAMxB;MACD,IAAMJ,YAAY,GAAGI,gBAAgB,CAACd,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,GAAGE,gBAAgB,CAAChB,MAAM,CAAC,CAAC;MAC1F,UAAAe,MAAA,CAAUH,YAAY,EAAAG,MAAA,CAAGP,QAAQ,CAACC,WAAW;IAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}