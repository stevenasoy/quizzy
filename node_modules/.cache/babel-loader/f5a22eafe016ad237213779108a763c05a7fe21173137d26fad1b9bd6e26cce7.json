{"ast":null,"code":"import _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    },\n    predictedScore: {\n      type: Number,\n      required: false,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var totalQuestions = computed(function () {\n      return props.questions.length;\n    });\n    var scorePercentage = computed(function () {\n      return Math.round(props.score / totalQuestions.value * 100);\n    });\n    var scoreClass = computed(function () {\n      return scorePercentage.value >= 75 ? 'passing' : 'failing';\n    });\n\n    // Timing computations\n    var averageTime = computed(function () {\n      var times = props.questions.map(function (q) {\n        return q.timeSpent;\n      }).filter(function (t) {\n        return t;\n      });\n      return times.length ? times.reduce(function (a, b) {\n        return a + b;\n      }, 0) / times.length : 0;\n    });\n    var fastestTime = computed(function () {\n      return Math.min.apply(Math, _toConsumableArray(props.questions.map(function (q) {\n        return q.timeSpent;\n      }).filter(function (t) {\n        return t;\n      })));\n    });\n    var slowestTime = computed(function () {\n      return Math.max.apply(Math, _toConsumableArray(props.questions.map(function (q) {\n        return q.timeSpent;\n      }).filter(function (t) {\n        return t;\n      })));\n    });\n    function formatTime(ms) {\n      if (!ms) return 'N/A';\n      if (ms < 1000) return \"\".concat(ms, \"ms\");\n      var seconds = Math.floor(ms / 1000);\n      var minutes = Math.floor(seconds / 60);\n      if (minutes > 0) {\n        return \"\".concat(minutes, \"m \").concat(seconds % 60, \"s\");\n      }\n      return \"\".concat(seconds, \"s\");\n    }\n    function getTimingFeedback(question) {\n      if (!question.timeSpent) return null;\n      var avgForDifficulty = props.questions.filter(function (q) {\n        return q.difficulty === question.difficulty;\n      }).reduce(function (sum, q) {\n        return sum + (q.timeSpent || 0);\n      }, 0) / props.questions.length;\n      var timeDiff = question.timeSpent - avgForDifficulty;\n      var isSignificant = Math.abs(timeDiff) > avgForDifficulty * 0.5;\n      if (!isSignificant) return null;\n      if (question.isCorrect) {\n        if (timeDiff < 0) {\n          return \"Quick and accurate! Great job!\";\n        } else {\n          return \"Good job taking your time to get the right answer!\";\n        }\n      } else {\n        if (timeDiff < 0) {\n          return \"Consider taking more time to review your answers.\";\n        } else {\n          return \"This question seemed challenging. Let's review the concept.\";\n        }\n      }\n    }\n    function formatExplanation(question) {\n      if (!question.explanation) return \"No explanation available.\";\n\n      // Add a supportive prefix for correct answers\n      if (question.isCorrect) {\n        var correctPhrases = [\"That's right! \", \"Excellent work! \", \"Perfect answer! \", \"You got it! \", \"Spot on! \"];\n        var _randomPhrase = correctPhrases[Math.floor(Math.random() * correctPhrases.length)];\n        return \"\".concat(_randomPhrase).concat(question.explanation);\n      }\n\n      // Add a gentle correction prefix for incorrect answers\n      var incorrectPhrases = [\"Let's understand why: \", \"Here's the explanation: \", \"To clarify this concept: \", \"Let me explain: \", \"Here's what you need to know: \"];\n      var randomPhrase = incorrectPhrases[Math.floor(Math.random() * incorrectPhrases.length)];\n      return \"\".concat(randomPhrase).concat(question.explanation);\n    }\n    var __returned__ = {\n      props: props,\n      totalQuestions: totalQuestions,\n      scorePercentage: scorePercentage,\n      scoreClass: scoreClass,\n      averageTime: averageTime,\n      fastestTime: fastestTime,\n      slowestTime: slowestTime,\n      formatTime: formatTime,\n      getTimingFeedback: getTimingFeedback,\n      formatExplanation: formatExplanation,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","totalQuestions","questions","length","scorePercentage","Math","round","score","value","scoreClass","averageTime","times","map","q","timeSpent","filter","t","reduce","a","b","fastestTime","min","apply","_toConsumableArray","slowestTime","max","formatTime","ms","concat","seconds","floor","minutes","getTimingFeedback","question","avgForDifficulty","difficulty","sum","timeDiff","isSignificant","abs","isCorrect","formatExplanation","explanation","correctPhrases","randomPhrase","random","incorrectPhrases"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Results</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <h3>Your Score: {{ scorePercentage }}%</h3>\r\n      <p v-if=\"predictedScore !== null\" class=\"prediction-comparison\">\r\n        Predicted Score: {{ predictedScore }}%\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"timing-summary\">\r\n      <h3>Time Analysis</h3>\r\n      <div class=\"timing-stats\">\r\n        <div class=\"stat-item\">\r\n          <span class=\"stat-label\">Average Time per Question:</span>\r\n          <span class=\"stat-value\">{{ formatTime(averageTime) }}</span>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <span class=\"stat-label\">Fastest Answer:</span>\r\n          <span class=\"stat-value\">{{ formatTime(fastestTime) }}</span>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <span class=\"stat-label\">Slowest Answer:</span>\r\n          <span class=\"stat-value\">{{ formatTime(slowestTime) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <h3>Questions Review</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-review\">\r\n        <div class=\"question-header\">\r\n          <div class=\"question-info\">\r\n            <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n            <span class=\"question-difficulty\">({{ question.difficulty }})</span>\r\n            <span class=\"time-taken\">Time: {{ formatTime(question.timeSpent) }}</span>\r\n          </div>\r\n          <span class=\"answer-status\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? 'Correct' : 'Incorrect' }}\r\n          </span>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answer-details\">\r\n          <div class=\"answer-row\">\r\n            <p class=\"your-answer\">\r\n              <strong>Your answer:</strong> {{ question.userAnswer }}\r\n            </p>\r\n            <p class=\"correct-answer\" v-if=\"!question.isCorrect\">\r\n              <strong>Correct answer:</strong> {{ question.correctAnswer }}\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"timing-feedback\" v-if=\"getTimingFeedback(question)\">\r\n            {{ getTimingFeedback(question) }}\r\n          </div>\r\n          \r\n          <div class=\"explanation-box\" :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n            <p class=\"explanation-label\">Explanation:</p>\r\n            <p class=\"explanation-text\">{{ formatExplanation(question) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"action-buttons\">\r\n      <button @click=\"$emit('restart')\" class=\"restart-btn\">Try Again</button>\r\n      <button @click=\"$emit('go-back')\" class=\"back-btn\">Back to Upload</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\n// Timing computations\r\nconst averageTime = computed(() => {\r\n  const times = props.questions.map(q => q.timeSpent).filter(t => t);\r\n  return times.length ? times.reduce((a, b) => a + b, 0) / times.length : 0;\r\n});\r\n\r\nconst fastestTime = computed(() => {\r\n  return Math.min(...props.questions.map(q => q.timeSpent).filter(t => t));\r\n});\r\n\r\nconst slowestTime = computed(() => {\r\n  return Math.max(...props.questions.map(q => q.timeSpent).filter(t => t));\r\n});\r\n\r\nfunction formatTime(ms) {\r\n  if (!ms) return 'N/A';\r\n  if (ms < 1000) return `${ms}ms`;\r\n  const seconds = Math.floor(ms / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  if (minutes > 0) {\r\n    return `${minutes}m ${seconds % 60}s`;\r\n  }\r\n  return `${seconds}s`;\r\n}\r\n\r\nfunction getTimingFeedback(question) {\r\n  if (!question.timeSpent) return null;\r\n  \r\n  const avgForDifficulty = props.questions\r\n    .filter(q => q.difficulty === question.difficulty)\r\n    .reduce((sum, q) => sum + (q.timeSpent || 0), 0) / props.questions.length;\r\n\r\n  const timeDiff = question.timeSpent - avgForDifficulty;\r\n  const isSignificant = Math.abs(timeDiff) > avgForDifficulty * 0.5;\r\n\r\n  if (!isSignificant) return null;\r\n\r\n  if (question.isCorrect) {\r\n    if (timeDiff < 0) {\r\n      return \"Quick and accurate! Great job!\";\r\n    } else {\r\n      return \"Good job taking your time to get the right answer!\";\r\n    }\r\n  } else {\r\n    if (timeDiff < 0) {\r\n      return \"Consider taking more time to review your answers.\";\r\n    } else {\r\n      return \"This question seemed challenging. Let's review the concept.\";\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatExplanation(question) {\r\n  if (!question.explanation) return \"No explanation available.\";\r\n  \r\n  // Add a supportive prefix for correct answers\r\n  if (question.isCorrect) {\r\n    const correctPhrases = [\r\n      `That's right! `,\r\n      `Excellent work! `,\r\n      `Perfect answer! `,\r\n      `You got it! `,\r\n      `Spot on! `\r\n    ];\r\n    const randomPhrase = correctPhrases[Math.floor(Math.random() * correctPhrases.length)];\r\n    return `${randomPhrase}${question.explanation}`;\r\n  }\r\n\r\n  // Add a gentle correction prefix for incorrect answers\r\n  const incorrectPhrases = [\r\n    `Let's understand why: `,\r\n    `Here's the explanation: `,\r\n    `To clarify this concept: `,\r\n    `Let me explain: `,\r\n    `Here's what you need to know: `\r\n  ];\r\n  const randomPhrase = incorrectPhrases[Math.floor(Math.random() * incorrectPhrases.length)];\r\n  return `${randomPhrase}${question.explanation}`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n}\r\n\r\n.score-display {\r\n  margin: 2rem 0;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.score-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-main {\r\n  display: flex;\r\n  align-items: baseline;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-value {\r\n  font-size: 4rem;\r\n  line-height: 1;\r\n  font-weight: 800;\r\n}\r\n\r\n.score-separator {\r\n  font-size: 3rem;\r\n  opacity: 0.5;\r\n}\r\n\r\n.score-total {\r\n  font-size: 2.5rem;\r\n  opacity: 0.7;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  opacity: 0.9;\r\n}\r\n\r\n.score-comparison {\r\n  margin: 1.5rem 0;\r\n  padding: 1.5rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n}\r\n\r\n.comparison-text {\r\n  margin-top: 0.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.comparison-text.success {\r\n  color: #4CAF50;\r\n}\r\n\r\n.comparison-text.neutral {\r\n  color: #666;\r\n}\r\n\r\n.comparison-text.warning {\r\n  color: #f44336;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n}\r\n\r\n.result-item {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.result-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.result-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.result-status.wrong {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.answer-details.incorrect {\r\n  border-color: #ffcdd2;\r\n  background-color: #fff5f5;\r\n}\r\n\r\n.answer-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-answer, .correct-answer {\r\n  padding: 1rem;\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.user-answer strong, .correct-answer strong {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.incorrect-text {\r\n  color: #d32f2f;\r\n}\r\n\r\n.correct-text {\r\n  color: #2e7d32;\r\n}\r\n\r\n.explanation-box {\r\n  margin-top: 1.5rem;\r\n  padding: 1.5rem;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.explanation-box.correct {\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.explanation-box.incorrect {\r\n  border-left: 4px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 600;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.explanation-label.correct {\r\n  color: #4CAF50;\r\n}\r\n\r\n.explanation-label.incorrect {\r\n  color: #f57c00;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.return-hint {\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n}\r\n\r\n.return-hint p {\r\n  margin: 0.5rem 0;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.return-hint p:first-child {\r\n  color: #4CAF50;\r\n  font-weight: 500;\r\n}\r\n\r\n.return-hint p:last-child {\r\n  color: #2196F3;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Remove button styles */\r\n.button-group, .restart-btn, .back-btn {\r\n  display: none;\r\n}\r\n\r\n.timing-summary {\r\n  background-color: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.timing-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.stat-item {\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #2196F3;\r\n}\r\n\r\n.question-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.time-taken {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.question-difficulty {\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.timing-feedback {\r\n  margin: 0.5rem 0;\r\n  padding: 0.5rem;\r\n  background-color: #e3f2fd;\r\n  border-radius: 4px;\r\n  color: #1976d2;\r\n  font-size: 0.9rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}