{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    },\n    predictedScore: {\n      type: Number,\n      required: false,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var totalQuestions = computed(function () {\n      return props.questions.length;\n    });\n    var scorePercentage = computed(function () {\n      return Math.round(props.score / totalQuestions.value * 100);\n    });\n    var scoreStatus = computed(function () {\n      var percentage = scorePercentage.value;\n      if (percentage === 100) return 'perfect';\n      if (percentage >= 50) return 'passing';\n      return 'failing';\n    });\n    function formatAnswer(answer, question) {\n      if (question.type === 'multiple-choice') {\n        return \"\".concat(answer, \") \").concat(question.options[answer]);\n      }\n      return answer;\n    }\n    var __returned__ = {\n      props: props,\n      totalQuestions: totalQuestions,\n      scorePercentage: scorePercentage,\n      scoreStatus: scoreStatus,\n      formatAnswer: formatAnswer,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","totalQuestions","questions","length","scorePercentage","Math","round","score","value","scoreStatus","percentage","formatAnswer","answer","question","type","concat","options"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h1>Quiz Complete!</h1>\r\n    \r\n    <div class=\"score-display\" :class=\"scoreStatus\">\r\n      <div class=\"score-value\">\r\n        <span class=\"score-number\">{{ score }}</span>\r\n        <span class=\"score-separator\">/</span>\r\n        <span class=\"total-questions\">{{ totalQuestions }}</span>\r\n      </div>\r\n      <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\r\n    </div>\r\n\r\n    <div class=\"prediction-message\" v-if=\"predictedScore !== null\">\r\n      <p>You scored {{ scorePercentage }}%. Predicted score was {{ predictedScore }}%.</p>\r\n      <p class=\"prediction-comparison\" v-if=\"scorePercentage > predictedScore\">\r\n        Excellent! You surpassed the prediction!\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-item\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ index + 1 }}</h3>\r\n          <div class=\"status-indicator\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? 'âœ“' : 'X' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answers-container\">\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">YOUR ANSWER:</div>\r\n            <div class=\"answer-content\" :class=\"{ 'incorrect': !question.isCorrect }\">\r\n              {{ formatAnswer(question.userAnswer, question) }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">CORRECT ANSWER:</div>\r\n            <div class=\"answer-content correct\">\r\n              {{ formatAnswer(question.correctAnswer, question) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"explanation\" v-if=\"question.explanation\">\r\n          <div class=\"explanation-label\">EXPLANATION:</div>\r\n          <p class=\"explanation-text\">{{ question.explanation }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\n\r\nconst scoreStatus = computed(() => {\r\n  const percentage = scorePercentage.value;\r\n  if (percentage === 100) return 'perfect';\r\n  if (percentage >= 50) return 'passing';\r\n  return 'failing';\r\n});\r\n\r\nfunction formatAnswer(answer, question) {\r\n  if (question.type === 'multiple-choice') {\r\n    return `${answer}) ${question.options[answer]}`;\r\n  }\r\n  return answer;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 600px;\r\n  margin: 2rem auto;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\nh1 {\r\n  font-size: 1.75rem;\r\n  margin-bottom: 1.5rem;\r\n  color: #000;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-display {\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 1px solid #ef9a9a;\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e3f2fd;\r\n  border: 1px solid #90caf9;\r\n}\r\n\r\n.score-display.perfect {\r\n  background-color: #e8f5e9;\r\n  border: 1px solid #a5d6a7;\r\n}\r\n\r\n.score-value {\r\n  font-size: 2.5rem;\r\n  font-weight: 600;\r\n  color: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.score-separator {\r\n  color: #757575;\r\n  margin: 0 0.1rem;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.5rem;\r\n  color: #757575;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.prediction-message {\r\n  background-color: #f5f5f5;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin-bottom: 1.5rem;\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.prediction-comparison {\r\n  color: #4caf50;\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.question-item {\r\n  background: white;\r\n  border-radius: 8px;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-header h3 {\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\n.status-indicator {\r\n  width: 1.75rem;\r\n  height: 1.75rem;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.status-indicator.correct {\r\n  background-color: #e8f5e9;\r\n  color: #4caf50;\r\n}\r\n\r\n.status-indicator.incorrect {\r\n  background-color: #ffebee;\r\n  color: #ef5350;\r\n}\r\n\r\n.question-text {\r\n  padding: 1rem;\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 0.95rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.answers-container {\r\n  padding: 0.75rem 1rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1rem;\r\n}\r\n\r\n.answer-box {\r\n  background: #fafafa;\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.answer-label {\r\n  font-size: 0.75rem;\r\n  color: #757575;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.answer-content {\r\n  color: #333;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-content.incorrect {\r\n  color: #ef5350;\r\n}\r\n\r\n.answer-content.correct {\r\n  color: #4caf50;\r\n}\r\n\r\n.explanation {\r\n  padding: 0.75rem 1rem;\r\n  background-color: #fff;\r\n  margin: 0.5rem 1rem 1rem;\r\n  border-radius: 4px;\r\n  border-left: 3px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 500;\r\n  color: #757575;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.explanation-text {\r\n  margin: 0;\r\n  color: #333;\r\n  line-height: 1.5;\r\n  font-size: 0.9rem;\r\n}\r\n</style> "],"mappings":";;;AAyDA,SAASA,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;IAE9B,IAAMC,KAAK,GAAGC,OAkBZ;IAEF,IAAMC,cAAc,GAAGH,QAAQ,CAAC;MAAA,OAAMC,KAAK,CAACG,SAAS,CAACC,MAAM;IAAA,EAAC;IAC7D,IAAMC,eAAe,GAAGN,QAAQ,CAAC,YAAM;MACrC,OAAOO,IAAI,CAACC,KAAK,CAAEP,KAAK,CAACQ,KAAK,GAAGN,cAAc,CAACO,KAAK,GAAI,GAAG,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAMC,WAAW,GAAGX,QAAQ,CAAC,YAAM;MACjC,IAAMY,UAAU,GAAGN,eAAe,CAACI,KAAK;MACxC,IAAIE,UAAU,KAAK,GAAG,EAAE,OAAO,SAAS;MACxC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,SAAS;MACtC,OAAO,SAAS;IAClB,CAAC,CAAC;IAEF,SAASC,YAAYA,CAACC,MAAM,EAAEC,QAAQ,EAAE;MACtC,IAAIA,QAAQ,CAACC,IAAI,KAAK,iBAAiB,EAAE;QACvC,UAAAC,MAAA,CAAUH,MAAM,QAAAG,MAAA,CAAKF,QAAQ,CAACG,OAAO,CAACJ,MAAM,CAAC;MAC/C;MACA,OAAOA,MAAM;IACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}