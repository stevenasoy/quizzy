{"ast":null,"code":"export default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['restart', 'go-back'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const totalQuestions = computed(() => props.questions.length);\n    function normalizeLetter(letter) {\n      return String(letter).replace(/[)\\s]/g, '').toUpperCase();\n    }\n    const __returned__ = {\n      totalQuestions,\n      normalizeLetter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["totalQuestions","computed","props","questions","length","normalizeLetter","letter","String","replace","toUpperCase"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Complete!</h2>\r\n    <p>Your score: {{ score }} / {{ totalQuestions }}</p>\r\n    \r\n    <div class=\"detailed-results\">\r\n      <h3>Detailed Results</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"result-item\">\r\n        <div class=\"question-header\">\r\n          <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n          <span :class=\"['result-status', \r\n            normalizeLetter(userAnswers[index]) === normalizeLetter(question.answer) ? 'correct' : 'wrong']\">\r\n            {{ normalizeLetter(userAnswers[index]) === normalizeLetter(question.answer) ? '✓' : '✗' }}\r\n          </span>\r\n        </div>\r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        <div class=\"answer-details\">\r\n          <p>Your answer: {{ userAnswers[index] || 'Not answered' }}</p>\r\n          <p>Correct answer: {{ question.answer }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-group\">\r\n      <button @click=\"$emit('restart')\">Redo Quiz</button>\r\n      <button @click=\"$emit('go-back')\">Go Back to Main Screen</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\ndefineEmits(['restart', 'go-back']);\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\n\r\nfunction normalizeLetter(letter) {\r\n  return String(letter).replace(/[)\\s]/g, '').toUpperCase();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 500px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n}\r\n\r\n.result-item {\r\n  background: #f8f8f8;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.result-status {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.result-status.correct {\r\n  color: #27ae60;\r\n}\r\n\r\n.result-status.wrong {\r\n  color: #e74c3c;\r\n}\r\n\r\n.answer-details {\r\n  margin-top: 0.5rem;\r\n  padding-top: 0.5rem;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.answer-details p {\r\n  margin: 0.25rem 0;\r\n  color: #666;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.button-group button {\r\n  padding: 0.7rem 2rem;\r\n  background: #4CAF50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.button-group button:hover {\r\n  background: #388e3c;\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;IAgDA,MAAMA,cAAc,GAAGC,QAAQ,CAAC,MAAMC,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC;IAE7D,SAASC,eAAeA,CAACC,MAAM,EAAE;MAC/B,OAAOC,MAAM,CAACD,MAAM,CAAC,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;IAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}