{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"quiz-results\"\n};\nvar _hoisted_2 = {\n  \"class\": \"score-main\"\n};\nvar _hoisted_3 = {\n  \"class\": \"score-value\"\n};\nvar _hoisted_4 = {\n  \"class\": \"score-percentage\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"prediction-comparison\"\n};\nvar _hoisted_6 = {\n  \"class\": \"questions-review\"\n};\nvar _hoisted_7 = {\n  \"class\": \"question-header\"\n};\nvar _hoisted_8 = {\n  \"class\": \"question-info\"\n};\nvar _hoisted_9 = {\n  \"class\": \"question-number\"\n};\nvar _hoisted_10 = {\n  \"class\": \"question-difficulty\"\n};\nvar _hoisted_11 = {\n  \"class\": \"question-text\"\n};\nvar _hoisted_12 = {\n  \"class\": \"answer-details\"\n};\nvar _hoisted_13 = {\n  \"class\": \"answer-row\"\n};\nvar _hoisted_14 = {\n  \"class\": \"your-answer\"\n};\nvar _hoisted_15 = {\n  key: 0,\n  \"class\": \"correct-answer\"\n};\nvar _hoisted_16 = {\n  \"class\": \"explanation-text\"\n};\nvar _hoisted_17 = {\n  \"class\": \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Quiz Results\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"score-display\", $setup.scoreClass])\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Your Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, _toDisplayString($props.score) + \" / \" + _toDisplayString($setup.totalQuestions), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, \"(\" + _toDisplayString($setup.scorePercentage) + \"%)\", 1 /* TEXT */)]), $props.predictedScore !== null ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \" Predicted: \" + _toDisplayString($props.predictedScore) + \"% \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Questions Review\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, function (question, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"question-review\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, \"Question \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(question.difficulty), 1 /* TEXT */)]), _createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"answer-status\", question.isCorrect ? 'correct' : 'incorrect'])\n    }, _toDisplayString(question.isCorrect ? 'Correct' : 'Incorrect'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"p\", _hoisted_14, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Your answer:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(question.userAnswer), 1 /* TEXT */)]), !question.isCorrect ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Correct answer:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(question.correctAnswer), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"explanation-box\", {\n        'correct': question.isCorrect,\n        'incorrect': !question.isCorrect\n      }])\n    }, [_cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n      \"class\": \"explanation-label\"\n    }, \"Explanation:\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_16, _toDisplayString($setup.formatExplanation(question)), 1 /* TEXT */)], 2 /* CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('restart');\n    }),\n    \"class\": \"restart-btn\"\n  }, \"Try Again\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.$emit('go-back');\n    }),\n    \"class\": \"back-btn\"\n  }, \"Back to Upload\")])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","scoreClass","_hoisted_2","_hoisted_3","_toDisplayString","$props","score","totalQuestions","_hoisted_4","scorePercentage","predictedScore","_hoisted_5","_hoisted_6","_Fragment","_renderList","questions","question","index","key","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","difficulty","isCorrect","_hoisted_11","text","_hoisted_12","_hoisted_13","_hoisted_14","userAnswer","_hoisted_15","correctAnswer","_hoisted_16","formatExplanation","_hoisted_17","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Results</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <div class=\"score-main\">\r\n        <h3>Your Score</h3>\r\n        <div class=\"score-value\">{{ score }} / {{ totalQuestions }}</div>\r\n        <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\r\n      </div>\r\n      <p v-if=\"predictedScore !== null\" class=\"prediction-comparison\">\r\n        Predicted: {{ predictedScore }}%\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <h3>Questions Review</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-review\">\r\n        <div class=\"question-header\">\r\n          <div class=\"question-info\">\r\n            <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n            <span class=\"question-difficulty\">{{ question.difficulty }}</span>\r\n          </div>\r\n          <span class=\"answer-status\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? 'Correct' : 'Incorrect' }}\r\n          </span>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answer-details\">\r\n          <div class=\"answer-row\">\r\n            <p class=\"your-answer\">\r\n              <strong>Your answer:</strong> {{ question.userAnswer }}\r\n            </p>\r\n            <p class=\"correct-answer\" v-if=\"!question.isCorrect\">\r\n              <strong>Correct answer:</strong> {{ question.correctAnswer }}\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"explanation-box\" :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n            <p class=\"explanation-label\">Explanation:</p>\r\n            <p class=\"explanation-text\">{{ formatExplanation(question) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"action-buttons\">\r\n      <button @click=\"$emit('restart')\" class=\"restart-btn\">Try Again</button>\r\n      <button @click=\"$emit('go-back')\" class=\"back-btn\">Back to Upload</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\nfunction formatExplanation(question) {\r\n  if (!question.explanation) return \"No explanation available.\";\r\n  \r\n  // Add a supportive prefix for correct answers\r\n  if (question.isCorrect) {\r\n    const correctPhrases = [\r\n      `That's right! `,\r\n      `Excellent work! `,\r\n      `Perfect answer! `,\r\n      `You got it! `,\r\n      `Spot on! `\r\n    ];\r\n    const randomPhrase = correctPhrases[Math.floor(Math.random() * correctPhrases.length)];\r\n    return `${randomPhrase}${question.explanation}`;\r\n  }\r\n\r\n  // Add a gentle correction prefix for incorrect answers\r\n  const incorrectPhrases = [\r\n    `Let's understand why: `,\r\n    `Here's the explanation: `,\r\n    `To clarify this concept: `,\r\n    `Let me explain: `,\r\n    `Here's what you need to know: `\r\n  ];\r\n  const randomPhrase = incorrectPhrases[Math.floor(Math.random() * incorrectPhrases.length)];\r\n  return `${randomPhrase}${question.explanation}`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n}\r\n\r\n.score-display {\r\n  margin: 2rem 0;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.score-main {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-main h3 {\r\n  font-size: 1.5rem;\r\n  color: #666;\r\n  margin: 0;\r\n}\r\n\r\n.score-value {\r\n  font-size: 4rem;\r\n  font-weight: 800;\r\n  line-height: 1;\r\n  color: #333;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 2rem;\r\n  color: #666;\r\n}\r\n\r\n.prediction-comparison {\r\n  margin-top: 1rem;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  opacity: 0.8;\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.question-difficulty {\r\n  color: #666;\r\n  font-style: italic;\r\n  padding: 0.2rem 0.6rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.answer-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.answer-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.answer-status.incorrect {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.answer-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.explanation-box {\r\n  margin-top: 1.5rem;\r\n  padding: 1.5rem;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.explanation-box.correct {\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.explanation-box.incorrect {\r\n  border-left: 4px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 600;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n}\r\n\r\n.restart-btn, .back-btn {\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.restart-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.back-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.restart-btn:hover, .back-btn:hover {\r\n  transform: translateY(-1px);\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}