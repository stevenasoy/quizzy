{"ast":null,"code":"import _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed } from 'vue';\nimport { getScoreClass } from '../algorithms/score-classification';\nexport default {\n  __name: 'StudyStats',\n  props: {\n    quizHistory: {\n      type: Array,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n\n    // Computed statistics\n    var averageScore = computed(function () {\n      if (props.quizHistory.length === 0) return 0;\n      var total = props.quizHistory.reduce(function (sum, quiz) {\n        return sum + quiz.actualScore * 100;\n      }, 0);\n      return Math.round(total / props.quizHistory.length);\n    });\n    var bestScore = computed(function () {\n      if (props.quizHistory.length === 0) return 0;\n      var best = Math.max.apply(Math, _toConsumableArray(props.quizHistory.map(function (quiz) {\n        return quiz.actualScore * 100;\n      })));\n      return Math.round(best);\n    });\n    var totalQuestions = computed(function () {\n      return props.quizHistory.reduce(function (sum, quiz) {\n        return sum + quiz.questionCount;\n      }, 0);\n    });\n    var recentQuizzes = computed(function () {\n      return _toConsumableArray(props.quizHistory).sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      }).slice(0, 5);\n    });\n\n    // Helper function to format dates\n    var formatDate = function formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    };\n    var __returned__ = {\n      props: props,\n      averageScore: averageScore,\n      bestScore: bestScore,\n      totalQuestions: totalQuestions,\n      recentQuizzes: recentQuizzes,\n      formatDate: formatDate,\n      computed: computed,\n      get getScoreClass() {\n        return getScoreClass;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","getScoreClass","props","__props","averageScore","quizHistory","length","total","reduce","sum","quiz","actualScore","Math","round","bestScore","best","max","apply","_toConsumableArray","map","totalQuestions","questionCount","recentQuizzes","sort","a","b","Date","date","slice","formatDate","toLocaleDateString"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/StudyStats.vue"],"sourcesContent":["<template>\r\n  <div class=\"study-stats\">\r\n    <h2>Study Statistics</h2>\r\n    \r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\">\r\n        <h3>Total Quizzes</h3>\r\n        <div class=\"stat-value\">{{ quizHistory.length }}</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Average Score</h3>\r\n        <div class=\"stat-value\">{{ averageScore }}%</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Best Score</h3>\r\n        <div class=\"stat-value\">{{ bestScore }}%</div>\r\n      </div>\r\n      \r\n      <div class=\"stat-card\">\r\n        <h3>Total Questions</h3>\r\n        <div class=\"stat-value\">{{ totalQuestions }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"performance-chart\" v-if=\"quizHistory.length > 0\">\r\n      <h3>Recent Performance</h3>\r\n      <div class=\"score-bars\">\r\n        <div v-for=\"(quiz, index) in recentQuizzes\" \r\n             :key=\"index\" \r\n             class=\"score-bar-container\">\r\n          <div class=\"score-bar\" \r\n               :style=\"{ height: `${quiz.actualScore * 100}%` }\"\r\n               :class=\"getScoreClass(quiz.actualScore * 100)\">\r\n            <span class=\"score-label\">{{ Math.round(quiz.actualScore * 100) }}%</span>\r\n          </div>\r\n          <div class=\"quiz-date\">{{ formatDate(quiz.date) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { getScoreClass } from '../algorithms/score-classification';\r\n\r\nconst props = defineProps({\r\n  quizHistory: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\n// Computed statistics\r\nconst averageScore = computed(() => {\r\n  if (props.quizHistory.length === 0) return 0;\r\n  const total = props.quizHistory.reduce((sum, quiz) => sum + quiz.actualScore * 100, 0);\r\n  return Math.round(total / props.quizHistory.length);\r\n});\r\n\r\nconst bestScore = computed(() => {\r\n  if (props.quizHistory.length === 0) return 0;\r\n  const best = Math.max(...props.quizHistory.map(quiz => quiz.actualScore * 100));\r\n  return Math.round(best);\r\n});\r\n\r\nconst totalQuestions = computed(() => {\r\n  return props.quizHistory.reduce((sum, quiz) => sum + quiz.questionCount, 0);\r\n});\r\n\r\nconst recentQuizzes = computed(() => {\r\n  return [...props.quizHistory]\r\n    .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n    .slice(0, 5);\r\n});\r\n\r\n// Helper function to format dates\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString();\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.study-stats {\r\n  padding: 2rem;\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1.5rem;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.stat-card {\r\n  background-color: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.stat-card h3 {\r\n  color: #666;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n}\r\n\r\n.performance-chart {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.score-bars {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  height: 200px;\r\n  margin-top: 1.5rem;\r\n  padding: 1rem 0;\r\n}\r\n\r\n.score-bar-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 0.5rem;\r\n}\r\n\r\n.score-bar {\r\n  width: 40px;\r\n  min-height: 4px;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  transition: height 0.3s ease;\r\n}\r\n\r\n.score-bar.excellent {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.score-bar.good {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.score-bar.average {\r\n  background-color: #FF9800;\r\n}\r\n\r\n.score-bar.needs-improvement {\r\n  background-color: #f44336;\r\n}\r\n\r\n.score-label {\r\n  position: absolute;\r\n  top: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n}\r\n\r\n.quiz-date {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;AA6CA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,aAAa,QAAQ,oCAAoC;;;;;;;;;;;;IAElE,IAAMC,KAAK,GAAGC,OAKZ;;IAEF;IACA,IAAMC,YAAY,GAAGJ,QAAQ,CAAC,YAAM;MAClC,IAAIE,KAAK,CAACG,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;MAC5C,IAAMC,KAAK,GAAGL,KAAK,CAACG,WAAW,CAACG,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;QAAA,OAAKD,GAAG,GAAGC,IAAI,CAACC,WAAW,GAAG,GAAG;MAAA,GAAE,CAAC,CAAC;MACtF,OAAOC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGL,KAAK,CAACG,WAAW,CAACC,MAAM,CAAC;IACrD,CAAC,CAAC;IAEF,IAAMQ,SAAS,GAAGd,QAAQ,CAAC,YAAM;MAC/B,IAAIE,KAAK,CAACG,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;MAC5C,IAAMS,IAAI,GAAGH,IAAI,CAACI,GAAG,CAAAC,KAAA,CAARL,IAAI,EAAAM,kBAAA,CAAQhB,KAAK,CAACG,WAAW,CAACc,GAAG,CAAC,UAAAT,IAAI;QAAA,OAAIA,IAAI,CAACC,WAAW,GAAG,GAAG;MAAA,EAAC,EAAC;MAC/E,OAAOC,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC;IAEF,IAAMK,cAAc,GAAGpB,QAAQ,CAAC,YAAM;MACpC,OAAOE,KAAK,CAACG,WAAW,CAACG,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;QAAA,OAAKD,GAAG,GAAGC,IAAI,CAACW,aAAa;MAAA,GAAE,CAAC,CAAC;IAC7E,CAAC,CAAC;IAEF,IAAMC,aAAa,GAAGtB,QAAQ,CAAC,YAAM;MACnC,OAAOkB,kBAAA,CAAIhB,KAAK,CAACG,WAAW,EACzBkB,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;QAAA,OAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;MAAA,EAAC,CACnDC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC,CAAC;;IAEF;IACA,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIF,IAAI,EAAK;MAC3B,OAAO,IAAID,IAAI,CAACC,IAAI,CAAC,CAACG,kBAAkB,CAAC,CAAC;IAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}