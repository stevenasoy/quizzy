{"ast":null,"code":"import _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { computed } from 'vue';\nimport { getScoreClass } from '../algorithms/score-classification';\nexport default {\n  __name: 'StudyStats',\n  props: {\n    quizHistory: {\n      type: Array,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n\n    // Computed statistics\n    var averageScore = computed(function () {\n      if (props.quizHistory.length === 0) return 0;\n      var total = props.quizHistory.reduce(function (sum, quiz) {\n        return sum + quiz.actualScore * 100;\n      }, 0);\n      return Math.round(total / props.quizHistory.length);\n    });\n    var bestScore = computed(function () {\n      if (props.quizHistory.length === 0) return 0;\n      var best = Math.max.apply(Math, _toConsumableArray(props.quizHistory.map(function (quiz) {\n        return quiz.actualScore * 100;\n      })));\n      return Math.round(best);\n    });\n    var totalQuestions = computed(function () {\n      return props.quizHistory.reduce(function (sum, quiz) {\n        return sum + quiz.questionCount;\n      }, 0);\n    });\n    var recentQuizzes = computed(function () {\n      return _toConsumableArray(props.quizHistory).sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      }).slice(0, 5);\n    });\n\n    // Activity calendar computation\n    var activityCalendar = computed(function () {\n      var days = 12; // Show last 12 days\n      var calendar = [];\n      var now = new Date();\n      var sessionMap = new Map();\n\n      // Group quizzes by date to count sessions\n      props.quizHistory.forEach(function (quiz) {\n        var date = new Date(quiz.date);\n        var dateKey = date.toISOString().split('T')[0];\n        // Count unique sessions (timestamps) per day\n        var sessions = sessionMap.get(dateKey) || new Set();\n        sessions.add(date.getTime());\n        sessionMap.set(dateKey, sessions);\n      });\n\n      // Generate calendar data for last 12 days\n      for (var d = days - 1; d >= 0; d--) {\n        var _sessionMap$get;\n        var date = new Date(now);\n        date.setDate(date.getDate() - d);\n        var dateKey = date.toISOString().split('T')[0];\n        var sessions = ((_sessionMap$get = sessionMap.get(dateKey)) === null || _sessionMap$get === void 0 ? void 0 : _sessionMap$get.size) || 0;\n        var activityLevel = 0;\n        if (sessions > 0) {\n          // 1-4 scale based on number of sessions\n          activityLevel = Math.min(sessions, 4);\n        }\n        calendar.push({\n          date: date,\n          activity: sessions > 0,\n          activityLevel: activityLevel,\n          tooltip: sessions > 0 ? \"\".concat(sessions, \" session\").concat(sessions > 1 ? 's' : '', \" on \").concat(formatDate(date)) : formatDate(date)\n        });\n      }\n      return calendar;\n    });\n\n    // Helper function to format dates\n    var formatDate = function formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    };\n\n    // New helper function to format day labels\n    var formatDayLabel = function formatDayLabel(date) {\n      return date.getDate();\n    };\n    var __returned__ = {\n      props: props,\n      averageScore: averageScore,\n      bestScore: bestScore,\n      totalQuestions: totalQuestions,\n      recentQuizzes: recentQuizzes,\n      activityCalendar: activityCalendar,\n      formatDate: formatDate,\n      formatDayLabel: formatDayLabel,\n      computed: computed,\n      get getScoreClass() {\n        return getScoreClass;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","getScoreClass","props","__props","averageScore","quizHistory","length","total","reduce","sum","quiz","actualScore","Math","round","bestScore","best","max","apply","_toConsumableArray","map","totalQuestions","questionCount","recentQuizzes","sort","a","b","Date","date","slice","activityCalendar","days","calendar","now","sessionMap","Map","forEach","dateKey","toISOString","split","sessions","get","Set","add","getTime","set","d","_sessionMap$get","setDate","getDate","size","activityLevel","min","push","activity","tooltip","concat","formatDate","toLocaleDateString","formatDayLabel"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/StudyStats.vue"],"sourcesContent":["<template>\n  <div class=\"study-stats\">\n    <h2>Study Statistics</h2>\n    \n    <div class=\"stats-grid\">\n      <div class=\"stat-card\">\n        <h3>Total Quizzes</h3>\n        <div class=\"stat-value\">{{ quizHistory.length }}</div>\n      </div>\n      \n      <div class=\"stat-card\">\n        <h3>Average Score</h3>\n        <div class=\"stat-value\">{{ averageScore }}%</div>\n      </div>\n      \n      <div class=\"stat-card\">\n        <h3>Best Score</h3>\n        <div class=\"stat-value\">{{ bestScore }}%</div>\n      </div>\n      \n      <div class=\"stat-card\">\n        <h3>Total Questions</h3>\n        <div class=\"stat-value\">{{ totalQuestions }}</div>\n      </div>\n    </div>\n\n    <div class=\"activity-calendar\">\n      <h3>Activity Calendar (Last 12 Days)</h3>\n      <div class=\"calendar-grid\">\n        <div class=\"calendar-row\">\n          <div v-for=\"day in activityCalendar.slice(0, 6)\" \n               :key=\"day.date\"\n               class=\"calendar-day\"\n               :class=\"[\n                 day.activity ? `activity-${day.activityLevel}` : '',\n                 { 'has-activity': day.activity }\n               ]\"\n               :title=\"day.tooltip\">\n            <span class=\"day-label\">{{ formatDayLabel(day.date) }}</span>\n          </div>\n        </div>\n        <div class=\"calendar-row\">\n          <div v-for=\"day in activityCalendar.slice(6, 12)\" \n               :key=\"day.date\"\n               class=\"calendar-day\"\n               :class=\"[\n                 day.activity ? `activity-${day.activityLevel}` : '',\n                 { 'has-activity': day.activity }\n               ]\"\n               :title=\"day.tooltip\">\n            <span class=\"day-label\">{{ formatDayLabel(day.date) }}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"calendar-legend\">\n        <div class=\"legend-item\">No Sessions</div>\n        <div class=\"legend-squares\">\n          <div class=\"legend-square\"></div>\n          <div class=\"legend-square activity-1\">1</div>\n          <div class=\"legend-square activity-2\">2</div>\n          <div class=\"legend-square activity-3\">3</div>\n          <div class=\"legend-square activity-4\">4+</div>\n        </div>\n        <div class=\"legend-item\">4+ Sessions</div>\n      </div>\n    </div>\n\n    <div class=\"performance-chart\" v-if=\"quizHistory.length > 0\">\n      <h3>Recent Performance</h3>\n      <div class=\"score-bars\">\n        <div v-for=\"(quiz, index) in recentQuizzes\" \n             :key=\"index\" \n             class=\"score-bar-container\">\n          <div class=\"score-bar\" \n               :style=\"{ height: `${quiz.actualScore * 100}%` }\"\n               :class=\"getScoreClass(quiz.actualScore * 100)\">\n            <span class=\"score-label\">{{ Math.round(quiz.actualScore * 100) }}%</span>\n          </div>\n          <div class=\"quiz-date\">{{ formatDate(quiz.date) }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { getScoreClass } from '../algorithms/score-classification';\n\nconst props = defineProps({\n  quizHistory: {\n    type: Array,\n    required: true\n  }\n});\n\n// Computed statistics\nconst averageScore = computed(() => {\n  if (props.quizHistory.length === 0) return 0;\n  const total = props.quizHistory.reduce((sum, quiz) => sum + quiz.actualScore * 100, 0);\n  return Math.round(total / props.quizHistory.length);\n});\n\nconst bestScore = computed(() => {\n  if (props.quizHistory.length === 0) return 0;\n  const best = Math.max(...props.quizHistory.map(quiz => quiz.actualScore * 100));\n  return Math.round(best);\n});\n\nconst totalQuestions = computed(() => {\n  return props.quizHistory.reduce((sum, quiz) => sum + quiz.questionCount, 0);\n});\n\nconst recentQuizzes = computed(() => {\n  return [...props.quizHistory]\n    .sort((a, b) => new Date(b.date) - new Date(a.date))\n    .slice(0, 5);\n});\n\n// Activity calendar computation\nconst activityCalendar = computed(() => {\n  const days = 12; // Show last 12 days\n  const calendar = [];\n  const now = new Date();\n  const sessionMap = new Map();\n  \n  // Group quizzes by date to count sessions\n  props.quizHistory.forEach(quiz => {\n    const date = new Date(quiz.date);\n    const dateKey = date.toISOString().split('T')[0];\n    // Count unique sessions (timestamps) per day\n    const sessions = sessionMap.get(dateKey) || new Set();\n    sessions.add(date.getTime());\n    sessionMap.set(dateKey, sessions);\n  });\n\n  // Generate calendar data for last 12 days\n  for (let d = days - 1; d >= 0; d--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - d);\n    const dateKey = date.toISOString().split('T')[0];\n    const sessions = sessionMap.get(dateKey)?.size || 0;\n    \n    let activityLevel = 0;\n    if (sessions > 0) {\n      // 1-4 scale based on number of sessions\n      activityLevel = Math.min(sessions, 4);\n    }\n\n    calendar.push({\n      date: date,\n      activity: sessions > 0,\n      activityLevel,\n      tooltip: sessions > 0 \n        ? `${sessions} session${sessions > 1 ? 's' : ''} on ${formatDate(date)}`\n        : formatDate(date)\n    });\n  }\n  \n  return calendar;\n});\n\n// Helper function to format dates\nconst formatDate = (date) => {\n  return new Date(date).toLocaleDateString();\n};\n\n// New helper function to format day labels\nconst formatDayLabel = (date) => {\n  return date.getDate();\n};\n</script>\n\n<style scoped>\n.study-stats {\n  padding: 2rem;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1.5rem;\n  margin: 2rem 0;\n}\n\n.stat-card {\n  background-color: #f8f9fa;\n  padding: 1.5rem;\n  border-radius: 8px;\n  text-align: center;\n  transition: transform 0.2s;\n}\n\n.stat-card:hover {\n  transform: translateY(-2px);\n}\n\n.stat-card h3 {\n  color: #666;\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n.stat-value {\n  font-size: 2rem;\n  font-weight: bold;\n  color: #2196F3;\n}\n\n/* Activity Calendar Styles */\n.activity-calendar {\n  margin: 3rem 0;\n  padding: 1.5rem;\n  background-color: #f8f9fa;\n  border-radius: 12px;\n}\n\n.calendar-grid {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 1.5rem 0;\n}\n\n.calendar-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n}\n\n.calendar-day {\n  flex: 1;\n  aspect-ratio: 1;\n  min-width: 60px;\n  border-radius: 8px;\n  background-color: #ebedf0;\n  border: 1px solid rgba(27, 31, 35, 0.06);\n  cursor: pointer;\n  transition: transform 0.1s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.calendar-day:hover {\n  transform: scale(1.05);\n}\n\n.day-label {\n  font-size: 0.9rem;\n  color: #666;\n  position: absolute;\n  top: 4px;\n  left: 4px;\n}\n\n.calendar-day.has-activity {\n  border: none;\n}\n\n.activity-1 { background-color: #9be9a8; }\n.activity-2 { background-color: #40c463; }\n.activity-3 { background-color: #30a14e; }\n.activity-4 { background-color: #216e39; }\n\n.calendar-legend {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-top: 1rem;\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.legend-squares {\n  display: flex;\n  gap: 4px;\n}\n\n.legend-square {\n  width: 24px;\n  height: 24px;\n  border-radius: 4px;\n  background-color: #ebedf0;\n  border: 1px solid rgba(27, 31, 35, 0.06);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.legend-square.activity-1,\n.legend-square.activity-2,\n.legend-square.activity-3,\n.legend-square.activity-4 {\n  color: white;\n}\n\n/* Performance Chart Styles */\n.performance-chart {\n  margin-top: 3rem;\n}\n\n.score-bars {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  height: 200px;\n  margin-top: 1.5rem;\n  padding: 1rem 0;\n}\n\n.score-bar-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 0.5rem;\n}\n\n.score-bar {\n  width: 40px;\n  min-height: 4px;\n  border-radius: 4px;\n  position: relative;\n  transition: height 0.3s ease;\n}\n\n.score-bar.excellent {\n  background-color: #4CAF50;\n}\n\n.score-bar.good {\n  background-color: #2196F3;\n}\n\n.score-bar.average {\n  background-color: #FF9800;\n}\n\n.score-bar.needs-improvement {\n  background-color: #f44336;\n}\n\n.score-label {\n  position: absolute;\n  top: -25px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.quiz-date {\n  margin-top: 0.5rem;\n  font-size: 0.8rem;\n  color: #666;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}