{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar-header\"\n};\nconst _hoisted_3 = {\n  class: \"quiz-history\"\n};\nconst _hoisted_4 = {\n  class: \"history-list\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_6 = [\"onClick\", \"onKeyup\"];\nconst _hoisted_7 = {\n  class: \"score-section\"\n};\nconst _hoisted_8 = {\n  class: \"predicted-score\"\n};\nconst _hoisted_9 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_10 = {\n  class: \"quiz-details\"\n};\nconst _hoisted_11 = {\n  class: \"questions\"\n};\nconst _hoisted_12 = {\n  class: \"date\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"create-quiz-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('create-quiz'))\n  }, _cache[1] || (_cache[1] = [_createElementVNode(\"span\", {\n    class: \"plus-icon\"\n  }, \"+\", -1 /* HOISTED */), _createTextVNode(\" Create New Quiz \")]))]), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Quiz History\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [$props.quizHistory.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"No quiz history yet\", -1 /* HOISTED */), _createElementVNode(\"small\", null, \"Complete a quiz to see your performance here\", -1 /* HOISTED */)]))) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($props.quizHistory, (quiz, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"history-item\",\n      onClick: $event => _ctx.$emit('retake-quiz', quiz),\n      role: \"button\",\n      tabindex: \"0\",\n      onKeyup: _withKeys($event => _ctx.$emit('retake-quiz', quiz), [\"enter\"])\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"score-badge\", $setup.getScoreClass(quiz.actualScore)])\n    }, _toDisplayString(quiz.actualScore) + \"% \", 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_8, \" Predicted: \" + _toDisplayString(quiz.predictedScore) + \"% \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h4\", null, _toDisplayString(quiz.fileName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString(quiz.questionCount) + \" questions\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.formatDate(quiz.date)), 1 /* TEXT */)])]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      class: \"retake-hint\"\n    }, [_createElementVNode(\"span\", null, \"Click to retake quiz\")], -1 /* HOISTED */))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$emit","_createTextVNode","_hoisted_3","_hoisted_4","$props","quizHistory","length","_hoisted_5","_Fragment","_renderList","quiz","index","role","tabindex","onKeyup","_withKeys","_hoisted_7","_normalizeClass","$setup","getScoreClass","actualScore","_hoisted_8","_toDisplayString","predictedScore","_hoisted_9","fileName","_hoisted_10","_hoisted_11","questionCount","_hoisted_12","formatDate","date","_hoisted_6"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\Sidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <div class=\"sidebar-header\">\r\n      <button class=\"create-quiz-btn\" @click=\"$emit('create-quiz')\">\r\n        <span class=\"plus-icon\">+</span>\r\n        Create New Quiz\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"quiz-history\">\r\n      <h3>Quiz History</h3>\r\n      <div class=\"history-list\">\r\n        <div v-if=\"quizHistory.length === 0\" class=\"empty-state\">\r\n          <p>No quiz history yet</p>\r\n          <small>Complete a quiz to see your performance here</small>\r\n        </div>\r\n        <div v-else v-for=\"(quiz, index) in quizHistory\" \r\n             :key=\"index\" \r\n             class=\"history-item\"\r\n             @click=\"$emit('retake-quiz', quiz)\"\r\n             role=\"button\"\r\n             tabindex=\"0\"\r\n             @keyup.enter=\"$emit('retake-quiz', quiz)\">\r\n          <div class=\"score-section\">\r\n            <div class=\"score-badge\" :class=\"getScoreClass(quiz.actualScore)\">\r\n              {{ quiz.actualScore }}%\r\n            </div>\r\n            <div class=\"predicted-score\">\r\n              Predicted: {{ quiz.predictedScore }}%\r\n            </div>\r\n          </div>\r\n          <div class=\"quiz-info\">\r\n            <h4>{{ quiz.fileName }}</h4>\r\n            <div class=\"quiz-details\">\r\n              <span class=\"questions\">{{ quiz.questionCount }} questions</span>\r\n              <span class=\"date\">{{ formatDate(quiz.date) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"retake-hint\">\r\n            <span>Click to retake quiz</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefineProps({\r\n  quizHistory: {\r\n    type: Array,\r\n    default: () => []\r\n  }\r\n});\r\n\r\ndefineEmits(['create-quiz', 'retake-quiz']);\r\n\r\nconst getScoreClass = (score) => {\r\n  if (score >= 90) return 'excellent';\r\n  if (score >= 80) return 'good';\r\n  if (score >= 70) return 'average';\r\n  return 'needs-improvement';\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  const d = new Date(date);\r\n  const now = new Date();\r\n  const diff = now - d;\r\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n  \r\n  if (days === 0) {\r\n    return 'Today, ' + d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  } else if (days === 1) {\r\n    return 'Yesterday';\r\n  } else if (days < 7) {\r\n    return `${days} days ago`;\r\n  } else {\r\n    return d.toLocaleDateString();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 280px;\r\n  height: 100vh;\r\n  background-color: #f8f9fa;\r\n  border-right: 1px solid #e0e0e0;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n\r\n.sidebar-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.create-quiz-btn {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 2px 4px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.create-quiz-btn:hover {\r\n  background-color: #45a049;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);\r\n}\r\n\r\n.plus-icon {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.quiz-history {\r\n  flex: 1;\r\n}\r\n\r\n.quiz-history h3 {\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.history-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.history-item {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.history-item:hover {\r\n  transform: translateX(5px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.history-item:hover .retake-hint {\r\n  opacity: 1;\r\n}\r\n\r\n.retake-hint {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  background: rgba(76, 175, 80, 0.9);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n  font-size: 0.9rem;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.history-item:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px #4CAF50;\r\n}\r\n\r\n.score-badge {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.score-badge.excellent {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n  border: 2px solid #4caf50;\r\n}\r\n\r\n.score-badge.good {\r\n  background-color: #e3f2fd;\r\n  color: #1565c0;\r\n  border: 2px solid #2196f3;\r\n}\r\n\r\n.score-badge.average {\r\n  background-color: #fff3e0;\r\n  color: #ef6c00;\r\n  border: 2px solid #ff9800;\r\n}\r\n\r\n.score-badge.needs-improvement {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  border: 2px solid #f44336;\r\n}\r\n\r\n.quiz-info {\r\n  flex: 1;\r\n}\r\n\r\n.quiz-info h4 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.date {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  display: block;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  border: 2px dashed #e0e0e0;\r\n}\r\n\r\n.empty-state p {\r\n  margin: 0 0 0.5rem 0;\r\n  font-weight: 500;\r\n}\r\n\r\n.empty-state small {\r\n  color: #888;\r\n}\r\n\r\n.score-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.predicted-score {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n  text-align: center;\r\n}\r\n\r\n.quiz-details {\r\n  display: flex;\r\n  gap: 1rem;\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.questions {\r\n  color: #4CAF50;\r\n  font-weight: 500;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAgB;;EAOtBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAc;;EAX/BC,GAAA;EAY6CD,KAAK,EAAC;;mBAZnD;;EAuBeA,KAAK,EAAC;AAAe;;EAInBA,KAAK,EAAC;AAAiB;;EAIzBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAc;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAM;;uBAlC9BE,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJC,mBAAA,CAKM,OALNC,UAKM,GAJJD,mBAAA,CAGS;IAHDJ,KAAK,EAAC,iBAAiB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;gCAC3CN,mBAAA,CAAgC;IAA1BJ,KAAK,EAAC;EAAW,GAAC,GAAC,qBAJjCW,gBAAA,CAIwC,mBAElC,E,MAGFP,mBAAA,CAkCM,OAlCNQ,UAkCM,G,0BAjCJR,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CA+BM,OA/BNS,UA+BM,GA9BOC,MAAA,CAAAC,WAAW,CAACC,MAAM,U,cAA7Bd,mBAAA,CAGM,OAHNe,UAGM,EAAAV,MAAA,QAAAA,MAAA,OAFJH,mBAAA,CAA0B,WAAvB,qBAAmB,qBACtBA,mBAAA,CAA2D,eAApD,8CAA4C,oB,yBAErDF,mBAAA,CAyBMgB,SAAA;IAzCdjB,GAAA;EAAA,GAAAkB,WAAA,CAgB4CL,MAAA,CAAAC,WAAW,EAhBvD,CAgB4BK,IAAI,EAAEC,KAAK;yBAA/BnB,mBAAA,CAyBM;MAxBAD,GAAG,EAAEoB,KAAK;MACXrB,KAAK,EAAC,cAAc;MACnBM,OAAK,EAAAE,MAAA,IAAEC,IAAA,CAAAC,KAAK,gBAAgBU,IAAI;MACjCE,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAC,GAAG;MACXC,OAAK,EAtBnBC,SAAA,CAAAjB,MAAA,IAsB2BC,IAAA,CAAAC,KAAK,gBAAgBU,IAAI;QAC1ChB,mBAAA,CAOM,OAPNsB,UAOM,GANJtB,mBAAA,CAEM;MAFDJ,KAAK,EAxBtB2B,eAAA,EAwBuB,aAAa,EAASC,MAAA,CAAAC,aAAa,CAACT,IAAI,CAACU,WAAW;wBAC1DV,IAAI,CAACU,WAAW,IAAG,IACxB,wBACA1B,mBAAA,CAEM,OAFN2B,UAEM,EAFuB,cAChB,GAAAC,gBAAA,CAAGZ,IAAI,CAACa,cAAc,IAAG,IACtC,gB,GAEF7B,mBAAA,CAMM,OANN8B,UAMM,GALJ9B,mBAAA,CAA4B,YAAA4B,gBAAA,CAArBZ,IAAI,CAACe,QAAQ,kBACpB/B,mBAAA,CAGM,OAHNgC,WAGM,GAFJhC,mBAAA,CAAiE,QAAjEiC,WAAiE,EAAAL,gBAAA,CAAtCZ,IAAI,CAACkB,aAAa,IAAG,YAAU,iBAC1DlC,mBAAA,CAAqD,QAArDmC,WAAqD,EAAAP,gBAAA,CAA/BJ,MAAA,CAAAY,UAAU,CAACpB,IAAI,CAACqB,IAAI,kB,+BAG9CrC,mBAAA,CAEM;MAFDJ,KAAK,EAAC;IAAa,IACtBI,mBAAA,CAAiC,cAA3B,sBAAoB,E,uDAvCtCsC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}