{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'FlashcardQuiz',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['go-back'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const currentIndex = ref(0);\n    const selectedAnswer = ref(null);\n    const showAnswer = ref(false);\n    const showResults = ref(false);\n    const score = ref(0);\n    const userAnswers = ref([]);\n    const currentQuestion = computed(() => props.questions[currentIndex.value]);\n    const isLastQuestion = computed(() => currentIndex.value === props.questions.length - 1);\n    const isCorrect = computed(() => selectedAnswer.value === currentQuestion.value.answer);\n    const selectAnswer = answer => {\n      if (showAnswer.value) return;\n      selectedAnswer.value = answer;\n      showAnswer.value = true;\n      if (isCorrect.value) {\n        score.value++;\n      }\n      userAnswers.value[currentIndex.value] = {\n        question: currentQuestion.value.text,\n        userAnswer: answer,\n        correctAnswer: currentQuestion.value.answer,\n        isCorrect: isCorrect.value\n      };\n    };\n    const nextQuestion = () => {\n      if (isLastQuestion.value) {\n        showResults.value = true;\n      } else {\n        currentIndex.value++;\n        selectedAnswer.value = null;\n        showAnswer.value = false;\n      }\n    };\n    const restartQuiz = () => {\n      currentIndex.value = 0;\n      selectedAnswer.value = null;\n      showAnswer.value = false;\n      showResults.value = false;\n      score.value = 0;\n      userAnswers.value = [];\n    };\n    const goBack = () => {\n      emit('go-back');\n    };\n    const scorePercentage = computed(() => {\n      return Math.round(score.value / props.questions.length * 100);\n    });\n    const scoreClass = computed(() => {\n      return scorePercentage.value >= 75 ? 'score-green' : 'score-red';\n    });\n\n    // eslint-disable-next-line no-unused-vars\n    function analyzeContentForCoverage(content) {\n      return 100;\n    }\n    const __returned__ = {\n      props,\n      emit,\n      currentIndex,\n      selectedAnswer,\n      showAnswer,\n      showResults,\n      score,\n      userAnswers,\n      currentQuestion,\n      isLastQuestion,\n      isCorrect,\n      selectAnswer,\n      nextQuestion,\n      restartQuiz,\n      goBack,\n      scorePercentage,\n      scoreClass,\n      analyzeContentForCoverage,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","currentIndex","selectedAnswer","showAnswer","showResults","score","userAnswers","currentQuestion","questions","value","isLastQuestion","length","isCorrect","answer","selectAnswer","question","text","userAnswer","correctAnswer","nextQuestion","restartQuiz","goBack","scorePercentage","Math","round","scoreClass","analyzeContentForCoverage","content"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/FlashcardQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"flashcard-quiz\">\n    <div v-if=\"!showResults\" class=\"quiz-content\">\n      <div class=\"progress-bar\">\n        <div class=\"progress\" :style=\"{ width: `${(currentIndex + 1) / questions.length * 100}%` }\"></div>\n      </div>\n      \n      <div class=\"question-counter\">\n        Question {{ currentIndex + 1 }} of {{ questions.length }}\n      </div>\n\n      <div class=\"flashcard\">\n        <div class=\"question\">\n          {{ currentQuestion.text }}\n        </div>\n\n        <div class=\"options\">\n          <button\n            v-for=\"option in currentQuestion.options\"\n            :key=\"option.letter\"\n            class=\"option-btn\"\n            :class=\"{\n              'selected': selectedAnswer === option.letter,\n              'correct': showAnswer && option.letter === currentQuestion.answer,\n              'incorrect': showAnswer && selectedAnswer === option.letter && option.letter !== currentQuestion.answer\n            }\"\n            @click=\"selectAnswer(option.letter)\"\n            :disabled=\"showAnswer\"\n          >\n            {{ option.letter }}) {{ option.text }}\n          </button>\n        </div>\n\n        <div v-if=\"showAnswer\" class=\"feedback\">\n          <p :class=\"{ 'correct': isCorrect, 'incorrect': !isCorrect }\">\n            {{ isCorrect ? 'Correct!' : 'Incorrect!' }}\n          </p>\n        </div>\n\n        <button \n          v-if=\"showAnswer\"\n          class=\"next-btn\"\n          @click=\"nextQuestion\"\n        >\n          {{ isLastQuestion ? 'Finish Quiz' : 'Next Question' }}\n        </button>\n      </div>\n    </div>\n\n    <div v-else class=\"quiz-results\">\n      <h2>Quiz Results</h2>\n      <div class=\"score\" :class=\"scoreClass\">\n        <p class=\"score-value\">{{ score }} / {{ questions.length }}</p>\n        <p class=\"score-percentage\">{{ Math.round((score / questions.length) * 100) }}%</p>\n      </div>\n      \n      <div class=\"detailed-results\">\n        <h3>Question Review</h3>\n        <div v-for=\"(answer, index) in userAnswers\" :key=\"index\" class=\"result-item\">\n          <div class=\"question-header\">\n            <span class=\"question-number\">Question {{ index + 1 }}</span>\n            <span :class=\"['result-status', answer.isCorrect ? 'correct' : 'incorrect']\">\n              {{ answer.isCorrect ? '✓' : '✗' }}\n            </span>\n          </div>\n          <p class=\"question-text\">{{ answer.question }}</p>\n          <div class=\"answer-details\">\n            <p>Your answer: {{ answer.userAnswer }}</p>\n            <p>Correct answer: {{ answer.correctAnswer }}</p>\n            <p class=\"explanation\">{{ questions[index].explanation }}</p>\n          </div>\n        </div>\n      </div>\n\n      <button class=\"restart-btn\" @click=\"restartQuiz\">Try Again</button>\n      <button class=\"back-btn\" @click=\"goBack\">Back to Upload</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  questions: {\n    type: Array,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['go-back']);\n\nconst currentIndex = ref(0);\nconst selectedAnswer = ref(null);\nconst showAnswer = ref(false);\nconst showResults = ref(false);\nconst score = ref(0);\nconst userAnswers = ref([]);\n\nconst currentQuestion = computed(() => props.questions[currentIndex.value]);\n\nconst isLastQuestion = computed(() => currentIndex.value === props.questions.length - 1);\n\nconst isCorrect = computed(() => selectedAnswer.value === currentQuestion.value.answer);\n\nconst selectAnswer = (answer) => {\n  if (showAnswer.value) return;\n  selectedAnswer.value = answer;\n  showAnswer.value = true;\n  if (isCorrect.value) {\n    score.value++;\n  }\n  userAnswers.value[currentIndex.value] = {\n    question: currentQuestion.value.text,\n    userAnswer: answer,\n    correctAnswer: currentQuestion.value.answer,\n    isCorrect: isCorrect.value\n  };\n};\n\nconst nextQuestion = () => {\n  if (isLastQuestion.value) {\n    showResults.value = true;\n  } else {\n    currentIndex.value++;\n    selectedAnswer.value = null;\n    showAnswer.value = false;\n  }\n};\n\nconst restartQuiz = () => {\n  currentIndex.value = 0;\n  selectedAnswer.value = null;\n  showAnswer.value = false;\n  showResults.value = false;\n  score.value = 0;\n  userAnswers.value = [];\n};\n\nconst goBack = () => {\n  emit('go-back');\n};\n\nconst scorePercentage = computed(() => {\n  return Math.round((score.value / props.questions.length) * 100);\n});\nconst scoreClass = computed(() => {\n  return scorePercentage.value >= 75 ? 'score-green' : 'score-red';\n});\n\n// eslint-disable-next-line no-unused-vars\nfunction analyzeContentForCoverage(content) {\n  return 100;\n}\n</script>\n\n<style scoped>\n.flashcard-quiz {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.quiz-content {\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background-color: #f0f0f0;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.question-counter {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #666;\n}\n\n.flashcard {\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n}\n\n.question {\n  font-size: 1.2em;\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.option-btn {\n  padding: 12px;\n  border: 2px solid #e0e0e0;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  font-size: 1em;\n}\n\n.option-btn:hover:not(:disabled) {\n  border-color: #4CAF50;\n  background: #f8f8f8;\n}\n\n.option-btn.selected {\n  border-color: #4CAF50;\n  background: #f0f8f0;\n}\n\n.option-btn.correct {\n  border-color: #4CAF50;\n  background: #e8f5e9;\n}\n\n.option-btn.incorrect {\n  border-color: #f44336;\n  background: #ffebee;\n}\n\n.option-btn:disabled {\n  cursor: default;\n  opacity: 0.8;\n}\n\n.feedback {\n  margin-top: 20px;\n  padding: 15px;\n  background: #f8f8f8;\n  border-radius: 6px;\n}\n\n.next-btn {\n  width: 100%;\n  padding: 12px;\n  background: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1em;\n  margin-top: 20px;\n  transition: background 0.2s;\n}\n\n.next-btn:hover {\n  background: #45a049;\n}\n\n.quiz-results {\n  text-align: center;\n  padding: 30px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.quiz-results h2 {\n  color: #333;\n  margin-bottom: 20px;\n}\n\n.score {\n  font-size: 2.5em;\n  margin-bottom: 30px;\n  font-weight: bold;\n  text-align: center;\n}\n\n.score-value {\n  font-size: 3.5em;\n  font-weight: 900;\n  margin-bottom: 0.2em;\n}\n\n.score-percentage {\n  font-size: 1.5em;\n  font-weight: 600;\n}\n\n.score-green {\n  color: #2e7d32;\n}\n\n.score-red {\n  color: #c62828;\n}\n\n.restart-btn, .back-btn {\n  padding: 12px 24px;\n  margin: 10px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1em;\n  transition: background 0.2s;\n}\n\n.restart-btn {\n  background: #4CAF50;\n  color: white;\n}\n\n.restart-btn:hover {\n  background: #45a049;\n}\n\n.back-btn {\n  background: #f0f0f0;\n  color: #333;\n}\n\n.back-btn:hover {\n  background: #e0e0e0;\n}\n\n.detailed-results {\n  margin: 2rem 0;\n  text-align: left;\n}\n\n.result-item {\n  background: #f8f8f8;\n  border-radius: 8px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.question-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.question-number {\n  font-weight: bold;\n  color: #333;\n}\n\n.result-status {\n  font-weight: bold;\n  font-size: 1.2em;\n}\n\n.result-status.correct {\n  color: #4CAF50;\n}\n\n.result-status.incorrect {\n  color: #f44336;\n}\n\n.question-text {\n  margin-bottom: 0.5rem;\n  color: #333;\n}\n\n.answer-details {\n  margin-top: 0.5rem;\n  padding-top: 0.5rem;\n  border-top: 1px solid #ddd;\n}\n\n.answer-details p {\n  margin: 0.3rem 0;\n  color: #666;\n}\n\n.explanation {\n  margin-top: 0.5rem;\n  padding: 0.5rem;\n  background: #fff;\n  border-radius: 4px;\n  border-left: 3px solid #4CAF50;\n}\n</style> "],"mappings":"AAiFA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;IAEnC,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAwB;IAErC,MAAMC,YAAY,GAAGN,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMO,cAAc,GAAGP,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMQ,UAAU,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMS,WAAW,GAAGT,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMU,KAAK,GAAGV,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMW,WAAW,GAAGX,GAAG,CAAC,EAAE,CAAC;IAE3B,MAAMY,eAAe,GAAGX,QAAQ,CAAC,MAAMC,KAAK,CAACW,SAAS,CAACP,YAAY,CAACQ,KAAK,CAAC,CAAC;IAE3E,MAAMC,cAAc,GAAGd,QAAQ,CAAC,MAAMK,YAAY,CAACQ,KAAK,KAAKZ,KAAK,CAACW,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC;IAExF,MAAMC,SAAS,GAAGhB,QAAQ,CAAC,MAAMM,cAAc,CAACO,KAAK,KAAKF,eAAe,CAACE,KAAK,CAACI,MAAM,CAAC;IAEvF,MAAMC,YAAY,GAAID,MAAM,IAAK;MAC/B,IAAIV,UAAU,CAACM,KAAK,EAAE;MACtBP,cAAc,CAACO,KAAK,GAAGI,MAAM;MAC7BV,UAAU,CAACM,KAAK,GAAG,IAAI;MACvB,IAAIG,SAAS,CAACH,KAAK,EAAE;QACnBJ,KAAK,CAACI,KAAK,EAAE;MACf;MACAH,WAAW,CAACG,KAAK,CAACR,YAAY,CAACQ,KAAK,CAAC,GAAG;QACtCM,QAAQ,EAAER,eAAe,CAACE,KAAK,CAACO,IAAI;QACpCC,UAAU,EAAEJ,MAAM;QAClBK,aAAa,EAAEX,eAAe,CAACE,KAAK,CAACI,MAAM;QAC3CD,SAAS,EAAEA,SAAS,CAACH;MACvB,CAAC;IACH,CAAC;IAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIT,cAAc,CAACD,KAAK,EAAE;QACxBL,WAAW,CAACK,KAAK,GAAG,IAAI;MAC1B,CAAC,MAAM;QACLR,YAAY,CAACQ,KAAK,EAAE;QACpBP,cAAc,CAACO,KAAK,GAAG,IAAI;QAC3BN,UAAU,CAACM,KAAK,GAAG,KAAK;MAC1B;IACF,CAAC;IAED,MAAMW,WAAW,GAAGA,CAAA,KAAM;MACxBnB,YAAY,CAACQ,KAAK,GAAG,CAAC;MACtBP,cAAc,CAACO,KAAK,GAAG,IAAI;MAC3BN,UAAU,CAACM,KAAK,GAAG,KAAK;MACxBL,WAAW,CAACK,KAAK,GAAG,KAAK;MACzBJ,KAAK,CAACI,KAAK,GAAG,CAAC;MACfH,WAAW,CAACG,KAAK,GAAG,EAAE;IACxB,CAAC;IAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;MACnBtB,IAAI,CAAC,SAAS,CAAC;IACjB,CAAC;IAED,MAAMuB,eAAe,GAAG1B,QAAQ,CAAC,MAAM;MACrC,OAAO2B,IAAI,CAACC,KAAK,CAAEnB,KAAK,CAACI,KAAK,GAAGZ,KAAK,CAACW,SAAS,CAACG,MAAM,GAAI,GAAG,CAAC;IACjE,CAAC,CAAC;IACF,MAAMc,UAAU,GAAG7B,QAAQ,CAAC,MAAM;MAChC,OAAO0B,eAAe,CAACb,KAAK,IAAI,EAAE,GAAG,aAAa,GAAG,WAAW;IAClE,CAAC,CAAC;;IAEF;IACA,SAASiB,yBAAyBA,CAACC,OAAO,EAAE;MAC1C,OAAO,GAAG;IACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}