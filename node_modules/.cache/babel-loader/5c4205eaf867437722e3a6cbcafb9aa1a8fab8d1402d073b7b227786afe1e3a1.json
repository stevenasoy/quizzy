{"ast":null,"code":"import _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.flat-map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport CalendarHeatmap from './CalendarHeatmap.vue';\nimport { getDueQuestions, getMasteryLevel, getReviewForecast } from '../algorithms/spaced-repetition';\nexport default {\n  __name: 'StudyStats',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var store = useStore();\n\n    // Activity data for the heatmap\n    var activityData = computed(function () {\n      var activities = [];\n      var quizHistory = store.state.quizHistory || [];\n\n      // Group activities by date\n      var groupedActivities = {};\n      quizHistory.forEach(function (quiz) {\n        var date = new Date(quiz.date).toISOString().split('T')[0];\n        if (!groupedActivities[date]) {\n          groupedActivities[date] = 0;\n        }\n        groupedActivities[date] += quiz.questions.length;\n      });\n\n      // Convert to array format\n      Object.entries(groupedActivities).forEach(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          date = _ref3[0],\n          count = _ref3[1];\n        activities.push({\n          date: date,\n          count: count\n        });\n      });\n      return activities;\n    });\n\n    // Computed statistics\n    var totalQuizzes = computed(function () {\n      var _store$state$quizHist;\n      return ((_store$state$quizHist = store.state.quizHistory) === null || _store$state$quizHist === void 0 ? void 0 : _store$state$quizHist.length) || 0;\n    });\n    var averageScore = computed(function () {\n      var history = store.state.quizHistory || [];\n      if (history.length === 0) return 0;\n      var totalScore = history.reduce(function (sum, quiz) {\n        return sum + quiz.actualScore;\n      }, 0);\n      return Math.round(totalScore / history.length);\n    });\n    var totalQuestions = computed(function () {\n      var history = store.state.quizHistory || [];\n      return history.reduce(function (sum, quiz) {\n        return sum + quiz.questions.length;\n      }, 0);\n    });\n    var dueCount = computed(function () {\n      var _store$state$quizzes;\n      var questions = ((_store$state$quizzes = store.state.quizzes) === null || _store$state$quizzes === void 0 ? void 0 : _store$state$quizzes.flatMap(function (quiz) {\n        return quiz.questions;\n      })) || [];\n      return getDueQuestions(questions).length;\n    });\n    var masteryLevels = computed(function () {\n      var _store$state$quizzes2;\n      var questions = ((_store$state$quizzes2 = store.state.quizzes) === null || _store$state$quizzes2 === void 0 ? void 0 : _store$state$quizzes2.flatMap(function (quiz) {\n        return quiz.questions;\n      })) || [];\n      return {\n        \"new\": questions.filter(function (q) {\n          return getMasteryLevel(q) === 'new';\n        }).length,\n        learning: questions.filter(function (q) {\n          return getMasteryLevel(q) === 'learning';\n        }).length,\n        mastered: questions.filter(function (q) {\n          return getMasteryLevel(q) === 'mastered';\n        }).length\n      };\n    });\n    var reviewForecast = computed(function () {\n      var _store$state$quizzes3;\n      var questions = ((_store$state$quizzes3 = store.state.quizzes) === null || _store$state$quizzes3 === void 0 ? void 0 : _store$state$quizzes3.flatMap(function (quiz) {\n        return quiz.questions;\n      })) || [];\n      var forecast = getReviewForecast(questions, 7);\n      var days = ['Today', 'Tomorrow'].concat(_toConsumableArray(Array(5).fill().map(function (_, i) {\n        var date = new Date();\n        date.setDate(date.getDate() + i + 2);\n        return date.toLocaleDateString('en-US', {\n          weekday: 'short'\n        });\n      })));\n      return days.reduce(function (acc, day, index) {\n        if (forecast[index] > 0) {\n          acc[day] = forecast[index];\n        }\n        return acc;\n      }, {});\n    });\n    var __returned__ = {\n      store: store,\n      activityData: activityData,\n      totalQuizzes: totalQuizzes,\n      averageScore: averageScore,\n      totalQuestions: totalQuestions,\n      dueCount: dueCount,\n      masteryLevels: masteryLevels,\n      reviewForecast: reviewForecast,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      get useStore() {\n        return useStore;\n      },\n      CalendarHeatmap: CalendarHeatmap,\n      get getDueQuestions() {\n        return getDueQuestions;\n      },\n      get getMasteryLevel() {\n        return getMasteryLevel;\n      },\n      get getReviewForecast() {\n        return getReviewForecast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","CalendarHeatmap","getDueQuestions","getMasteryLevel","getReviewForecast","store","activityData","activities","quizHistory","state","groupedActivities","forEach","quiz","date","Date","toISOString","split","questions","length","Object","entries","_ref2","_ref3","_slicedToArray","count","push","totalQuizzes","_store$state$quizHist","averageScore","history","totalScore","reduce","sum","actualScore","Math","round","totalQuestions","dueCount","_store$state$quizzes","quizzes","flatMap","masteryLevels","_store$state$quizzes2","filter","q","learning","mastered","reviewForecast","_store$state$quizzes3","forecast","days","concat","_toConsumableArray","Array","fill","map","_","i","setDate","getDate","toLocaleDateString","weekday","acc","day","index"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/StudyStats.vue"],"sourcesContent":["<template>\r\n  <div class=\"study-stats\">\r\n    <h2>Study Statistics</h2>\r\n    \r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ totalQuizzes }}</div>\r\n        <div class=\"stat-label\">Total Quizzes</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ averageScore }}%</div>\r\n        <div class=\"stat-label\">Average Score</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ totalQuestions }}</div>\r\n        <div class=\"stat-label\">Questions Answered</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ dueCount }}</div>\r\n        <div class=\"stat-label\">Due for Review</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"activity-section\">\r\n      <h3>Activity Overview</h3>\r\n      <CalendarHeatmap :activities=\"activityData\" />\r\n    </div>\r\n\r\n    <div class=\"mastery-section\">\r\n      <h3>Mastery Progress</h3>\r\n      <div class=\"mastery-grid\">\r\n        <div class=\"mastery-card\">\r\n          <div class=\"mastery-icon\">üå±</div>\r\n          <div class=\"mastery-count\">{{ masteryLevels.new }}</div>\r\n          <div class=\"mastery-label\">New</div>\r\n        </div>\r\n        <div class=\"mastery-card\">\r\n          <div class=\"mastery-icon\">üìö</div>\r\n          <div class=\"mastery-count\">{{ masteryLevels.learning }}</div>\r\n          <div class=\"mastery-label\">Learning</div>\r\n        </div>\r\n        <div class=\"mastery-card\">\r\n          <div class=\"mastery-icon\">‚≠ê</div>\r\n          <div class=\"mastery-count\">{{ masteryLevels.mastered }}</div>\r\n          <div class=\"mastery-label\">Mastered</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"review-forecast\">\r\n      <h3>Review Forecast</h3>\r\n      <div class=\"forecast-grid\">\r\n        <div v-for=\"(count, day) in reviewForecast\" :key=\"day\" class=\"forecast-day\">\r\n          <div class=\"day-label\">{{ day }}</div>\r\n          <div class=\"day-count\">{{ count }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport CalendarHeatmap from './CalendarHeatmap.vue';\r\nimport { getDueQuestions, getMasteryLevel, getReviewForecast } from '../algorithms/spaced-repetition';\r\n\r\nconst store = useStore();\r\n\r\n// Activity data for the heatmap\r\nconst activityData = computed(() => {\r\n  const activities = [];\r\n  const quizHistory = store.state.quizHistory || [];\r\n  \r\n  // Group activities by date\r\n  const groupedActivities = {};\r\n  quizHistory.forEach(quiz => {\r\n    const date = new Date(quiz.date).toISOString().split('T')[0];\r\n    if (!groupedActivities[date]) {\r\n      groupedActivities[date] = 0;\r\n    }\r\n    groupedActivities[date] += quiz.questions.length;\r\n  });\r\n\r\n  // Convert to array format\r\n  Object.entries(groupedActivities).forEach(([date, count]) => {\r\n    activities.push({ date, count });\r\n  });\r\n\r\n  return activities;\r\n});\r\n\r\n// Computed statistics\r\nconst totalQuizzes = computed(() => store.state.quizHistory?.length || 0);\r\n\r\nconst averageScore = computed(() => {\r\n  const history = store.state.quizHistory || [];\r\n  if (history.length === 0) return 0;\r\n  const totalScore = history.reduce((sum, quiz) => sum + quiz.actualScore, 0);\r\n  return Math.round(totalScore / history.length);\r\n});\r\n\r\nconst totalQuestions = computed(() => {\r\n  const history = store.state.quizHistory || [];\r\n  return history.reduce((sum, quiz) => sum + quiz.questions.length, 0);\r\n});\r\n\r\nconst dueCount = computed(() => {\r\n  const questions = store.state.quizzes?.flatMap(quiz => quiz.questions) || [];\r\n  return getDueQuestions(questions).length;\r\n});\r\n\r\nconst masteryLevels = computed(() => {\r\n  const questions = store.state.quizzes?.flatMap(quiz => quiz.questions) || [];\r\n  return {\r\n    new: questions.filter(q => getMasteryLevel(q) === 'new').length,\r\n    learning: questions.filter(q => getMasteryLevel(q) === 'learning').length,\r\n    mastered: questions.filter(q => getMasteryLevel(q) === 'mastered').length\r\n  };\r\n});\r\n\r\nconst reviewForecast = computed(() => {\r\n  const questions = store.state.quizzes?.flatMap(quiz => quiz.questions) || [];\r\n  const forecast = getReviewForecast(questions, 7);\r\n  const days = ['Today', 'Tomorrow', ...Array(5).fill().map((_, i) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + i + 2);\r\n    return date.toLocaleDateString('en-US', { weekday: 'short' });\r\n  })];\r\n  \r\n  return days.reduce((acc, day, index) => {\r\n    if (forecast[index] > 0) {\r\n      acc[day] = forecast[index];\r\n    }\r\n    return acc;\r\n  }, {});\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.study-stats {\r\n  padding: 2rem;\r\n  background: #1a1a1a;\r\n  border-radius: 12px;\r\n  color: #e1e1e1;\r\n}\r\n\r\nh2 {\r\n  margin: 0 0 2rem 0;\r\n  color: #ffffff;\r\n  font-size: 1.8rem;\r\n}\r\n\r\nh3 {\r\n  color: #ffffff;\r\n  margin: 2rem 0 1rem 0;\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: #2d2d2d;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  color: #39d353;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-label {\r\n  color: #a1a1a1;\r\n  font-size: 1rem;\r\n}\r\n\r\n.activity-section {\r\n  margin: 2rem 0;\r\n}\r\n\r\n.mastery-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.mastery-card {\r\n  background: #2d2d2d;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.mastery-icon {\r\n  font-size: 2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.mastery-count {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  color: #39d353;\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.mastery-label {\r\n  color: #a1a1a1;\r\n}\r\n\r\n.review-forecast {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.forecast-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.forecast-day {\r\n  background: #2d2d2d;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.day-label {\r\n  color: #a1a1a1;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.day-count {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: #39d353;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}