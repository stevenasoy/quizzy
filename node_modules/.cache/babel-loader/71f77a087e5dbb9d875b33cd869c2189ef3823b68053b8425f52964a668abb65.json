{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"quiz-container\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"quiz-content\"\n};\nvar _hoisted_3 = {\n  \"class\": \"quiz-progress\"\n};\nvar _hoisted_4 = {\n  \"class\": \"progress-bar\"\n};\nvar _hoisted_5 = {\n  \"class\": \"progress-text\"\n};\nvar _hoisted_6 = {\n  \"class\": \"question-item\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"options\"\n};\nvar _hoisted_8 = [\"onClick\", \"disabled\"];\nvar _hoisted_9 = {\n  \"class\": \"option-letter\"\n};\nvar _hoisted_10 = {\n  \"class\": \"option-text\"\n};\nvar _hoisted_11 = {\n  key: 1,\n  \"class\": \"options true-false\"\n};\nvar _hoisted_12 = [\"onClick\", \"disabled\"];\nvar _hoisted_13 = {\n  key: 2,\n  \"class\": \"feedback\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.getCurrentQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    \"class\": \"progress-fill\",\n    style: _normalizeStyle({\n      width: \"\".concat(($setup.currentQuestionIndex + 1) * 100 / $setup.totalQuestions, \"%\")\n    })\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", _hoisted_5, \"Question \" + _toDisplayString($setup.currentQuestionIndex + 1) + \" of \" + _toDisplayString($setup.totalQuestions), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($setup.getCurrentQuestion.text), 1 /* TEXT */), $setup.getCurrentQuestion.type === 'multiple-choice' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCurrentQuestion.options, function (option, letter) {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: letter,\n      \"class\": _normalizeClass([\"option-btn\", {\n        'selected': $setup.currentAnswer === letter,\n        'correct': $setup.showFeedback && letter === $setup.getCurrentQuestion.correctAnswer,\n        'incorrect': $setup.showFeedback && $setup.currentAnswer === letter && letter !== $setup.getCurrentQuestion.correctAnswer\n      }]),\n      onClick: function onClick($event) {\n        return $setup.submitAnswer(letter);\n      },\n      disabled: $setup.showFeedback\n    }, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(letter), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(option), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])) : $setup.getCurrentQuestion.type === 'true-false' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList({\n    \"true\": 'True',\n    \"false\": 'False'\n  }, function (text, value) {\n    return _createElementVNode(\"button\", {\n      key: value,\n      \"class\": _normalizeClass([\"option-btn\", {\n        'selected': $setup.currentAnswer === value,\n        'correct': $setup.showFeedback && value === $setup.getCurrentQuestion.correctAnswer,\n        'incorrect': $setup.showFeedback && $setup.currentAnswer === value && value !== $setup.getCurrentQuestion.correctAnswer\n      }]),\n      onClick: function onClick($event) {\n        return $setup.submitAnswer(value);\n      },\n      disabled: $setup.showFeedback\n    }, _toDisplayString(text), 11 /* TEXT, CLASS, PROPS */, _hoisted_12);\n  }), 64 /* STABLE_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.showFeedback ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"p\", {\n    \"class\": _normalizeClass({\n      'correct-text': $setup.isAnswerCorrect,\n      'incorrect-text': !$setup.isAnswerCorrect\n    })\n  }, _toDisplayString($setup.isAnswerCorrect ? 'Correct!' : 'Incorrect!'), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    \"class\": \"next-btn\",\n    onClick: $setup.moveToNext\n  }, _toDisplayString($setup.currentQuestionIndex + 1 >= $setup.totalQuestions ? 'See Results' : 'Next Question'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","$setup","getCurrentQuestion","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","style","_normalizeStyle","width","concat","currentQuestionIndex","totalQuestions","_hoisted_5","_toDisplayString","_hoisted_6","text","type","_hoisted_7","_Fragment","_renderList","options","option","letter","key","_normalizeClass","currentAnswer","showFeedback","correctAnswer","onClick","$event","submitAnswer","disabled","_hoisted_9","_hoisted_10","_hoisted_11","value","_hoisted_12","_hoisted_13","isAnswerCorrect","moveToNext"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\FlashcardQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <div v-if=\"getCurrentQuestion\" class=\"quiz-content\">\n      <div class=\"quiz-progress\">\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress-fill\"\n            :style=\"{ width: `${(currentQuestionIndex + 1) * 100 / totalQuestions}%` }\"\n          ></div>\n        </div>\n        <span class=\"progress-text\">Question {{ currentQuestionIndex + 1 }} of {{ totalQuestions }}</span>\n      </div>\n      \n      <div class=\"question-item\">\n        <h3>{{ getCurrentQuestion.text }}</h3>\n        <div v-if=\"getCurrentQuestion.type === 'multiple-choice'\" class=\"options\">\n          <button \n            v-for=\"(option, letter) in getCurrentQuestion.options\" \n            :key=\"letter\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === letter,\n              'correct': showFeedback && letter === getCurrentQuestion.correctAnswer,\n              'incorrect': showFeedback && currentAnswer === letter && letter !== getCurrentQuestion.correctAnswer\n            }\"\n            @click=\"submitAnswer(letter)\"\n            :disabled=\"showFeedback\"\n          >\n            <span class=\"option-letter\">{{ letter }}</span>\n            <span class=\"option-text\">{{ option }}</span>\n          </button>\n        </div>\n        <div v-else-if=\"getCurrentQuestion.type === 'true-false'\" class=\"options true-false\">\n          <button \n            v-for=\"(text, value) in { true: 'True', false: 'False' }\" \n            :key=\"value\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === value,\n              'correct': showFeedback && value === getCurrentQuestion.correctAnswer,\n              'incorrect': showFeedback && currentAnswer === value && value !== getCurrentQuestion.correctAnswer\n            }\"\n            @click=\"submitAnswer(value)\"\n            :disabled=\"showFeedback\"\n          >\n            {{ text }}\n          </button>\n        </div>\n\n        <div v-if=\"showFeedback\" class=\"feedback\">\n          <p :class=\"{ 'correct-text': isAnswerCorrect, 'incorrect-text': !isAnswerCorrect }\">\n            {{ isAnswerCorrect ? 'Correct!' : 'Incorrect!' }}\n          </p>\n          <button class=\"next-btn\" @click=\"moveToNext\">\n            {{ currentQuestionIndex + 1 >= totalQuestions ? 'See Results' : 'Next Question' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { calculateWeightedScore } from '../algorithms/score-calculation';\nimport { \n  initializeAdaptiveQuiz,\n  updateQuizState,\n  selectNextQuestion\n} from '../algorithms/difficulty-adaptation';\nimport {\n  updateQuestionAfterReview,\n  updateSpacedRepetition\n} from '../algorithms/spaced-repetition';\n\nconst props = defineProps({\n  questions: {\n    type: Array,\n    required: true\n  },\n  totalQuestions: {\n    type: Number,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['quiz-completed', 'complete', 'update-question']);\n\nconst currentQuestionIndex = ref(0);\nconst currentAnswer = ref(null);\nconst showFeedback = ref(false);\nconst isAnswerCorrect = ref(false);\nconst userResponses = ref([]);\n\n// Initialize adaptive quiz state\nconst quizState = ref(initializeAdaptiveQuiz(props.questions));\nconst currentQuestion = ref(null);\n\n// Add performance rating system\nconst performanceRating = ref(0);\nconst showRating = ref(false);\n\n// Method to select the next question\nconst selectQuestion = () => {\n  if (!quizState.value.availableQuestions.length) return null;\n  \n  const { question, remainingQuestions } = selectNextQuestion(\n    quizState.value.availableQuestions,\n    quizState.value.currentDifficulty\n  );\n  \n  currentQuestion.value = question;\n  quizState.value.availableQuestions = remainingQuestions;\n  return question;\n};\n\nconst getCurrentQuestion = computed(() => {\n  if (!currentQuestion.value && !showFeedback.value) {\n    return selectQuestion();\n  }\n  return currentQuestion.value;\n});\n\nconst totalQuestions = computed(() => {\n  return props.totalQuestions;\n});\n\nconst submitAnswer = (answer) => {\n  if (showFeedback.value) return;\n  \n  currentAnswer.value = answer;\n  const question = getCurrentQuestion.value;\n  \n  // Calculate weighted score based on question difficulty\n  const weights = {\n    easy: 0.7,\n    medium: 1.0,\n    hard: 1.3\n  };\n  \n  let rawScore;\n  if (question.type === 'true-false') {\n    const userAnswer = String(answer).toLowerCase();\n    const correctAnswer = String(question.correctAnswer).toLowerCase();\n    rawScore = userAnswer === correctAnswer;\n  } else {\n    rawScore = String(answer) === String(question.correctAnswer);\n  }\n  \n  isAnswerCorrect.value = rawScore;\n  showFeedback.value = true;\n  \n  // Update spaced repetition state\n  const performance = rawScore ? 5 : 1; // Use 5 for correct, 1 for incorrect\n  const updatedSpacedRepetition = updateSpacedRepetition(currentQuestion.value, performance);\n  \n  // Emit update event with new spaced repetition data\n  emit('update-question', {\n    ...currentQuestion.value,\n    spacedRepetition: updatedSpacedRepetition\n  });\n  \n  // Store response data\n  const response = {\n    questionId: currentQuestionIndex.value,\n    text: question.text,\n    userAnswer: answer,\n    correctAnswer: question.correctAnswer,\n    correct: rawScore,\n    difficulty: question.difficulty,\n    weightedScore: calculateWeightedScore(\n      { score: rawScore ? 100 : 0 },\n      { score: weights[question.difficulty || 'medium'] }\n    ),\n    explanation: question.explanation,\n    spacedRepetition: updatedSpacedRepetition\n  };\n  \n  userResponses.value.push(response);\n};\n\nconst moveToNext = () => {\n  showFeedback.value = false;\n  isAnswerCorrect.value = false;\n  currentQuestion.value = null; // Clear current question to trigger next selection\n  \n  if (currentQuestionIndex.value + 1 >= totalQuestions.value) {\n    emit('quiz-completed', userResponses.value);\n  } else {\n    currentQuestionIndex.value++;\n    currentAnswer.value = null;\n  }\n};\n\n// Handle performance rating and move to next question\nconst handleRating = (rating) => {\n  // Update spaced repetition data\n  const updatedSpacedRepetition = updateSpacedRepetition(currentQuestion.value, rating);\n  \n  // Emit update event with new spaced repetition data\n  emit('update-question', {\n    ...currentQuestion.value,\n    spacedRepetition: updatedSpacedRepetition\n  });\n\n  showRating.value = false;\n  performanceRating.value = 0;\n\n  // Move to next question or complete quiz\n  if (currentQuestionIndex.value < props.questions.length - 1) {\n    currentQuestionIndex.value++;\n    currentAnswer.value = null;\n  } else {\n    emit('complete', {\n      score: userResponses.value.length,\n      total: props.questions.length,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n</script>\n\n<style scoped>\n.quiz-container {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.quiz-content {\n  background: white;\n  padding: 2rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.quiz-progress {\n  margin-bottom: 2rem;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background-color: #e0e0e0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  display: block;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.question-item {\n  margin-top: 1.5rem;\n}\n\n.question-item h3 {\n  font-size: 1.2rem;\n  color: #333;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n  margin: 1.5rem 0;\n}\n\n.options.true-false {\n  flex-direction: row;\n  justify-content: center;\n  gap: 1.5rem;\n}\n\n.option-btn {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: white;\n  color: #333;\n  cursor: pointer;\n  font-size: 1rem;\n  text-align: left;\n  transition: all 0.2s ease;\n}\n\n.options.true-false .option-btn {\n  width: auto;\n  min-width: 120px;\n  justify-content: center;\n  font-size: 1.1rem;\n  font-weight: 500;\n}\n\n.option-letter {\n  background-color: #f5f5f5;\n  color: #666;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  margin-right: 1rem;\n  font-weight: 600;\n}\n\n.option-text {\n  flex: 1;\n}\n\n.option-btn:hover:not(:disabled) {\n  border-color: #2196F3;\n  background-color: #f8f9fa;\n}\n\n.option-btn.selected {\n  border-color: #2196F3;\n  background-color: #e3f2fd;\n}\n\n.option-btn.correct {\n  border-color: #4CAF50;\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.option-btn.incorrect {\n  border-color: #f44336;\n  background-color: #FFEBEE;\n  color: #c62828;\n}\n\n.feedback {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n\n.correct-text {\n  color: #4CAF50;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.incorrect-text {\n  color: #f44336;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.next-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 0.8rem 2rem;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 1rem;\n  transition: all 0.2s ease;\n}\n\n.next-btn:hover {\n  background-color: #1976D2;\n  transform: translateY(-1px);\n}\n\n.explanation {\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-left: 4px solid #2196F3;\n  border-radius: 4px;\n  color: #333;\n  font-size: 0.95rem;\n  line-height: 1.5;\n}\n\n.rating-container {\n  margin-top: 2rem;\n  text-align: center;\n}\n\n.rating-prompt {\n  font-size: 1.1rem;\n  margin-bottom: 1rem;\n  color: #666;\n}\n\n.rating-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.rating-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 2px solid #ddd;\n  background: white;\n  color: #666;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.rating-btn:hover {\n  border-color: #2196F3;\n  color: #2196F3;\n}\n\n.rating-btn.active {\n  background: #2196F3;\n  border-color: #2196F3;\n  color: white;\n}\n\n.rating-labels {\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 0.9rem;\n  padding: 0 1rem;\n}\n\n.feedback {\n  text-align: center;\n  margin-top: 2rem;\n}\n\n.result {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n}\n\n.result.correct {\n  color: #4CAF50;\n}\n\n.result.incorrect {\n  color: #F44336;\n}\n\n.correct-answer {\n  color: #666;\n  margin-bottom: 1rem;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}