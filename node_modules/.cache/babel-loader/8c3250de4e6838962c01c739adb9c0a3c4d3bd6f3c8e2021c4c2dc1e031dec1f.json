{"ast":null,"code":"import _objectSpread from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectWithoutProperties from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"email\", \"password\"];\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createClient } from '@supabase/supabase-js';\nvar supabaseUrl = process.env.VUE_APP_SUPABASE_URL;\nvar supabaseAnonKey = process.env.VUE_APP_SUPABASE_ANON_KEY;\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\nconsole.log('Initializing Supabase with URL:', supabaseUrl);\nexport var supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\n\n// Auth helper functions\nexport var auth = {\n  signUp: function signUp(_ref) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var email, password, metadata, _yield$supabase$from$, existingUser, checkError, _yield$supabase$auth$, authData, authError, _authError$message, _yield$supabase$from$2, profileError;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password, metadata = _objectWithoutProperties(_ref, _excluded);\n            console.log('Supabase signUp called with:', {\n              email: email,\n              metadata: metadata\n            });\n            _context.prev = 2;\n            _context.next = 5;\n            return supabase.from('users').select('email').eq('email', email).maybeSingle();\n          case 5:\n            _yield$supabase$from$ = _context.sent;\n            existingUser = _yield$supabase$from$.data;\n            checkError = _yield$supabase$from$.error;\n            if (!checkError) {\n              _context.next = 11;\n              break;\n            }\n            console.error('Error checking for existing user:', checkError);\n            throw new Error('Unable to verify email availability. Please try again.');\n          case 11:\n            if (!existingUser) {\n              _context.next = 13;\n              break;\n            }\n            throw new Error('This email is already registered. Please try logging in instead.');\n          case 13:\n            _context.next = 15;\n            return supabase.auth.signUp({\n              email: email,\n              password: password,\n              options: {\n                data: {\n                  name: metadata.name,\n                  // Store name in auth metadata as backup\n                  email: email\n                },\n                emailRedirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n              }\n            });\n          case 15:\n            _yield$supabase$auth$ = _context.sent;\n            authData = _yield$supabase$auth$.data;\n            authError = _yield$supabase$auth$.error;\n            if (!authError) {\n              _context.next = 23;\n              break;\n            }\n            console.error('Signup auth error:', authError);\n            // Handle specific auth errors\n            if (!((_authError$message = authError.message) !== null && _authError$message !== void 0 && _authError$message.toLowerCase().includes('user already registered'))) {\n              _context.next = 22;\n              break;\n            }\n            throw new Error('This email is already registered. Please try logging in instead.');\n          case 22:\n            throw authError;\n          case 23:\n            if (!(authData !== null && authData !== void 0 && authData.user)) {\n              _context.next = 40;\n              break;\n            }\n            _context.prev = 24;\n            _context.next = 27;\n            return supabase.from('users').insert([{\n              id: authData.user.id,\n              email: email,\n              name: metadata.name,\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString(),\n              last_login: new Date().toISOString()\n            }]);\n          case 27:\n            _yield$supabase$from$2 = _context.sent;\n            profileError = _yield$supabase$from$2.error;\n            if (!profileError) {\n              _context.next = 34;\n              break;\n            }\n            console.error('Error creating user profile:', profileError);\n            // Handle specific profile errors\n            if (!(profileError.code === '23505')) {\n              _context.next = 33;\n              break;\n            }\n            throw new Error('This email is already registered. Please try logging in instead.');\n          case 33:\n            // Log other profile errors but don't throw\n            console.warn('Non-critical error creating user profile:', profileError);\n          case 34:\n            _context.next = 40;\n            break;\n          case 36:\n            _context.prev = 36;\n            _context.t0 = _context[\"catch\"](24);\n            console.error('Failed to create user profile, but auth signup succeeded:', _context.t0);\n            // Log profile creation errors but don't throw\n            console.warn('Non-critical error in profile creation:', _context.t0);\n          case 40:\n            console.log('Signup successful:', authData);\n            return _context.abrupt(\"return\", {\n              data: authData,\n              error: null\n            });\n          case 44:\n            _context.prev = 44;\n            _context.t1 = _context[\"catch\"](2);\n            console.error('Signup error:', _context.t1);\n            throw _context.t1;\n          case 48:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 44], [24, 36]]);\n    }))();\n  },\n  signIn: function signIn(_ref2) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var email, password, _yield$supabase$auth$2, data, error, _yield$supabase$from$3, updateError;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return supabase.auth.signInWithPassword({\n              email: email,\n              password: password\n            });\n          case 4:\n            _yield$supabase$auth$2 = _context2.sent;\n            data = _yield$supabase$auth$2.data;\n            error = _yield$supabase$auth$2.error;\n            if (!error) {\n              _context2.next = 12;\n              break;\n            }\n            console.error('Sign in error:', error);\n            if (!error.message.includes('Email not confirmed')) {\n              _context2.next = 11;\n              break;\n            }\n            throw new Error('Please check your email and confirm your account before signing in.');\n          case 11:\n            throw error;\n          case 12:\n            if (!(data !== null && data !== void 0 && data.user)) {\n              _context2.next = 18;\n              break;\n            }\n            _context2.next = 15;\n            return supabase.from('users').update({\n              last_login: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }).eq('id', data.user.id);\n          case 15:\n            _yield$supabase$from$3 = _context2.sent;\n            updateError = _yield$supabase$from$3.error;\n            if (updateError) {\n              console.error('Error updating last login:', updateError);\n            }\n          case 18:\n            console.log('Sign in successful:', data);\n            return _context2.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('Sign in error:', _context2.t0);\n            throw _context2.t0;\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 22]]);\n    }))();\n  },\n  signOut: function signOut() {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var _yield$supabase$auth$3, error;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return supabase.auth.signOut();\n          case 3:\n            _yield$supabase$auth$3 = _context3.sent;\n            error = _yield$supabase$auth$3.error;\n            if (!error) {\n              _context3.next = 7;\n              break;\n            }\n            throw error;\n          case 7:\n            return _context3.abrupt(\"return\", {\n              error: null\n            });\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Sign out error:', _context3.t0);\n            throw _context3.t0;\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 10]]);\n    }))();\n  },\n  getSession: function getSession() {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var _yield$supabase$auth$4, session, error;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return supabase.auth.getSession();\n          case 3:\n            _yield$supabase$auth$4 = _context4.sent;\n            session = _yield$supabase$auth$4.data.session;\n            error = _yield$supabase$auth$4.error;\n            if (!error) {\n              _context4.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context4.abrupt(\"return\", {\n              session: session,\n              error: null\n            });\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Get session error:', _context4.t0);\n            throw _context4.t0;\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 11]]);\n    }))();\n  },\n  onAuthStateChange: function onAuthStateChange(callback) {\n    return supabase.auth.onAuthStateChange(callback);\n  },\n  // User profile management\n  getUserProfile: function getUserProfile(userId) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _yield$supabase$from$4, data, error;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return supabase.from('users').select('*').eq('id', userId).single();\n          case 3:\n            _yield$supabase$from$4 = _context5.sent;\n            data = _yield$supabase$from$4.data;\n            error = _yield$supabase$from$4.error;\n            if (!error) {\n              _context5.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context5.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error('Get user profile error:', _context5.t0);\n            throw _context5.t0;\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[0, 11]]);\n    }))();\n  },\n  updateUserProfile: function updateUserProfile(userId, updates) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var _yield$supabase$from$5, data, error;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return supabase.from('users').update(_objectSpread(_objectSpread({}, updates), {}, {\n              updated_at: new Date().toISOString()\n            })).eq('id', userId).select().single();\n          case 3:\n            _yield$supabase$from$5 = _context6.sent;\n            data = _yield$supabase$from$5.data;\n            error = _yield$supabase$from$5.error;\n            if (!error) {\n              _context6.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context6.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.error('Update user profile error:', _context6.t0);\n            throw _context6.t0;\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 11]]);\n    }))();\n  }\n};\n\n// Quiz history database operations\nexport var quizHistory = {\n  saveQuiz: function saveQuiz(quizData) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var _yield$supabase$from$6, data, error;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return supabase.from('quiz_history').insert([quizData]).select();\n          case 3:\n            _yield$supabase$from$6 = _context7.sent;\n            data = _yield$supabase$from$6.data;\n            error = _yield$supabase$from$6.error;\n            if (!error) {\n              _context7.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context7.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.error('Save quiz error:', _context7.t0);\n            throw _context7.t0;\n          case 15:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[0, 11]]);\n    }))();\n  },\n  getQuizzes: function getQuizzes() {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var _yield$supabase$from$7, data, error;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return supabase.from('quiz_history').select('*').order('created_at', {\n              ascending: false\n            });\n          case 3:\n            _yield$supabase$from$7 = _context8.sent;\n            data = _yield$supabase$from$7.data;\n            error = _yield$supabase$from$7.error;\n            if (!error) {\n              _context8.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context8.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 11:\n            _context8.prev = 11;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.error('Get quizzes error:', _context8.t0);\n            throw _context8.t0;\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[0, 11]]);\n    }))();\n  },\n  migrateTemporaryHistory: function migrateTemporaryHistory(quizzes) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var _yield$supabase$from$8, data, error;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return supabase.from('quiz_history').insert(quizzes).select();\n          case 3:\n            _yield$supabase$from$8 = _context9.sent;\n            data = _yield$supabase$from$8.data;\n            error = _yield$supabase$from$8.error;\n            if (!error) {\n              _context9.next = 8;\n              break;\n            }\n            throw error;\n          case 8:\n            return _context9.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](0);\n            console.error('Migrate history error:', _context9.t0);\n            throw _context9.t0;\n          case 15:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9, null, [[0, 11]]);\n    }))();\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","VUE_APP_SUPABASE_URL","supabaseAnonKey","VUE_APP_SUPABASE_ANON_KEY","Error","console","log","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","signUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","metadata","_yield$supabase$from$","existingUser","checkError","_yield$supabase$auth$","authData","authError","_authError$message","_yield$supabase$from$2","profileError","wrap","_callee$","_context","prev","next","_objectWithoutProperties","_excluded","from","select","eq","maybeSingle","sent","data","error","options","name","emailRedirectTo","concat","window","location","origin","message","toLowerCase","includes","user","insert","id","created_at","Date","toISOString","updated_at","last_login","code","warn","t0","abrupt","t1","stop","signIn","_ref2","_callee2","_yield$supabase$auth$2","_yield$supabase$from$3","updateError","_callee2$","_context2","signInWithPassword","update","signOut","_callee3","_yield$supabase$auth$3","_callee3$","_context3","getSession","_callee4","_yield$supabase$auth$4","session","_callee4$","_context4","onAuthStateChange","callback","getUserProfile","userId","_callee5","_yield$supabase$from$4","_callee5$","_context5","single","updateUserProfile","updates","_callee6","_yield$supabase$from$5","_callee6$","_context6","_objectSpread","quizHistory","saveQuiz","quizData","_callee7","_yield$supabase$from$6","_callee7$","_context7","getQuizzes","_callee8","_yield$supabase$from$7","_callee8$","_context8","order","ascending","migrateTemporaryHistory","quizzes","_callee9","_yield$supabase$from$8","_callee9$","_context9"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/lib/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.VUE_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.VUE_APP_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Missing Supabase environment variables');\r\n}\r\n\r\nconsole.log('Initializing Supabase with URL:', supabaseUrl);\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\r\n  auth: {\r\n    autoRefreshToken: true,\r\n    persistSession: true,\r\n    detectSessionInUrl: true\r\n  }\r\n});\r\n\r\n// Auth helper functions\r\nexport const auth = {\r\n  async signUp({ email, password, ...metadata }) {\r\n    console.log('Supabase signUp called with:', { email, metadata });\r\n    try {\r\n      // Check if email exists first\r\n      const { data: existingUser, error: checkError } = await supabase\r\n        .from('users')\r\n        .select('email')\r\n        .eq('email', email)\r\n        .maybeSingle(); // Use maybeSingle instead of single to avoid error when no rows found\r\n\r\n      if (checkError) {\r\n        console.error('Error checking for existing user:', checkError);\r\n        throw new Error('Unable to verify email availability. Please try again.');\r\n      }\r\n\r\n      if (existingUser) {\r\n        throw new Error('This email is already registered. Please try logging in instead.');\r\n      }\r\n\r\n      // First, create the auth user\r\n      const { data: authData, error: authError } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            name: metadata.name,  // Store name in auth metadata as backup\r\n            email: email\r\n          },\r\n          emailRedirectTo: `${window.location.origin}/auth/callback`\r\n        }\r\n      });\r\n      \r\n      if (authError) {\r\n        console.error('Signup auth error:', authError);\r\n        // Handle specific auth errors\r\n        if (authError.message?.toLowerCase().includes('user already registered')) {\r\n          throw new Error('This email is already registered. Please try logging in instead.');\r\n        }\r\n        throw authError;\r\n      }\r\n\r\n      // Then, try to create the user profile in the users table\r\n      if (authData?.user) {\r\n        try {\r\n          const { error: profileError } = await supabase\r\n            .from('users')\r\n            .insert([\r\n              {\r\n                id: authData.user.id,\r\n                email: email,\r\n                name: metadata.name,\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                last_login: new Date().toISOString()\r\n              }\r\n            ]);\r\n\r\n          if (profileError) {\r\n            console.error('Error creating user profile:', profileError);\r\n            // Handle specific profile errors\r\n            if (profileError.code === '23505') { // Unique violation\r\n              throw new Error('This email is already registered. Please try logging in instead.');\r\n            }\r\n            // Log other profile errors but don't throw\r\n            console.warn('Non-critical error creating user profile:', profileError);\r\n          }\r\n        } catch (profileError) {\r\n          console.error('Failed to create user profile, but auth signup succeeded:', profileError);\r\n          // Log profile creation errors but don't throw\r\n          console.warn('Non-critical error in profile creation:', profileError);\r\n        }\r\n      }\r\n\r\n      console.log('Signup successful:', authData);\r\n      return { data: authData, error: null };\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async signIn({ email, password }) {\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Sign in error:', error);\r\n        if (error.message.includes('Email not confirmed')) {\r\n          throw new Error('Please check your email and confirm your account before signing in.');\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      // Update last login timestamp\r\n      if (data?.user) {\r\n        const { error: updateError } = await supabase\r\n          .from('users')\r\n          .update({ \r\n            last_login: new Date().toISOString(),\r\n            updated_at: new Date().toISOString()\r\n          })\r\n          .eq('id', data.user.id);\r\n\r\n        if (updateError) {\r\n          console.error('Error updating last login:', updateError);\r\n        }\r\n      }\r\n\r\n      console.log('Sign in successful:', data);\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Sign in error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async signOut() {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n      return { error: null };\r\n    } catch (error) {\r\n      console.error('Sign out error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getSession() {\r\n    try {\r\n      const { data: { session }, error } = await supabase.auth.getSession();\r\n      if (error) throw error;\r\n      return { session, error: null };\r\n    } catch (error) {\r\n      console.error('Get session error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  onAuthStateChange(callback) {\r\n    return supabase.auth.onAuthStateChange(callback);\r\n  },\r\n\r\n  // User profile management\r\n  async getUserProfile(userId) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Get user profile error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async updateUserProfile(userId, updates) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .update({\r\n          ...updates,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', userId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Update user profile error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Quiz history database operations\r\nexport const quizHistory = {\r\n  async saveQuiz(quizData) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('quiz_history')\r\n        .insert([quizData])\r\n        .select();\r\n      \r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Save quiz error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getQuizzes() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('quiz_history')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n      \r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Get quizzes error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async migrateTemporaryHistory(quizzes) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('quiz_history')\r\n        .insert(quizzes)\r\n        .select();\r\n      \r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Migrate history error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}