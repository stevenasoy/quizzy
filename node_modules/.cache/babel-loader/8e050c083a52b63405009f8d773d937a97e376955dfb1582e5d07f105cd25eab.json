{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { computed } from 'vue';\nimport { formatAnswer } from '../algorithms/answer-formatting';\nexport default {\n  __name: 'QuizResults',\n  props: {\n    questions: {\n      type: Array,\n      required: true\n    },\n    userAnswers: {\n      type: Array,\n      required: true\n    },\n    score: {\n      type: Number,\n      required: true\n    },\n    predictedScore: {\n      type: Number,\n      required: false,\n      \"default\": null\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var totalQuestions = computed(function () {\n      return props.questions.length;\n    });\n    var scorePercentage = computed(function () {\n      return Math.round(props.score / totalQuestions.value * 100);\n    });\n    var scoreClass = computed(function () {\n      return scorePercentage.value >= 75 ? 'passing' : 'failing';\n    });\n    function rephraseContent(text, isSupporting, question) {\n      // Clean and normalize the text\n      var cleaned = text.trim().replace(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi, '').replace(/\\+\\d{2}\\s*\\d{3}\\s*\\d{3}\\s*\\d{4}/g, '').replace(/\\d{4}\\s*\\+\\d{2}\\s*\\d{3}\\s*\\d{3}/g, '').replace(/\\d{4}\\s*\\d{4}/g, '').replace(/\\([^)]*\\)/g, '').replace(/\\[[^\\]]*\\]/g, '').trim();\n      if (isSupporting) {\n        return \"Correct! \".concat(cleaned);\n      } else {\n        var correctPart = question.type === 'multiple-choice' ? \"The correct answer is \\\"\".concat(question.options[question.correctAnswer], \"\\\". \") : \"The correct answer is \".concat(question.correctAnswer, \". \");\n        return \"\".concat(correctPart, \"Here's why: \").concat(cleaned);\n      }\n    }\n    function generateExplanation(question, isCorrect) {\n      var explanation = question.explanation || '';\n      if (!explanation) return \"No explanation available.\";\n      if (question.type === 'multiple-choice') {\n        return generateMultipleChoiceExplanation(question, isCorrect);\n      } else {\n        return generateTrueFalseExplanation(question, isCorrect);\n      }\n    }\n    function generateMultipleChoiceExplanation(question, isCorrect) {\n      if (isCorrect) {\n        return rephraseContent(question.explanation, true, question);\n      }\n      var userOption = question.options[question.userAnswer];\n      var correctOption = question.options[question.correctAnswer];\n      return \"While \\\"\".concat(userOption, \"\\\" might seem reasonable, it's not the complete picture. \").concat(rephraseContent(question.explanation, false, question), \" The correct answer, \\\"\").concat(correctOption, \"\\\", better reflects the full scope of the position.\");\n    }\n    function generateTrueFalseExplanation(question, isCorrect) {\n      if (isCorrect) {\n        return rephraseContent(question.explanation, true, question);\n      }\n      var userChoice = question.userAnswer ? 'true' : 'false';\n      var correctChoice = question.correctAnswer === 'true' ? 'true' : 'false';\n\n      // Explain why their understanding needs adjustment\n      return \"Your understanding needs a slight adjustment. While you marked this as \".concat(userChoice, \", \").concat(rephraseContent(question.explanation, false, question), \" This is why the statement is actually \").concat(correctChoice, \".\");\n    }\n    var __returned__ = {\n      props: props,\n      totalQuestions: totalQuestions,\n      scorePercentage: scorePercentage,\n      scoreClass: scoreClass,\n      rephraseContent: rephraseContent,\n      generateExplanation: generateExplanation,\n      generateMultipleChoiceExplanation: generateMultipleChoiceExplanation,\n      generateTrueFalseExplanation: generateTrueFalseExplanation,\n      computed: computed,\n      get formatAnswer() {\n        return formatAnswer;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","formatAnswer","props","__props","totalQuestions","questions","length","scorePercentage","Math","round","score","value","scoreClass","rephraseContent","text","isSupporting","question","cleaned","trim","replace","concat","correctPart","type","options","correctAnswer","generateExplanation","isCorrect","explanation","generateMultipleChoiceExplanation","generateTrueFalseExplanation","userOption","userAnswer","correctOption","userChoice","correctChoice"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Complete!</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <div class=\"score-container\">\r\n        <div class=\"score-main\">\r\n          <span class=\"score-value\">{{ score }}</span>\r\n          <span class=\"score-separator\">/</span>\r\n          <span class=\"score-total\">{{ totalQuestions }}</span>\r\n        </div>\r\n        <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"score-comparison\" v-if=\"predictedScore\">\r\n      <p>You scored {{ scorePercentage }}%. Predicted score was {{ predictedScore }}%.</p>\r\n      <p v-if=\"scorePercentage > predictedScore + 5\" class=\"comparison-text success\">\r\n        Excellent! You surpassed the prediction!\r\n      </p>\r\n      <p v-else-if=\"Math.abs(scorePercentage - predictedScore) <= 5\" class=\"comparison-text neutral\">\r\n        You were close to the prediction!\r\n      </p>\r\n      <p v-else class=\"comparison-text warning\">\r\n        You scored below the prediction. Review the material for improvement.\r\n      </p>\r\n    </div>\r\n    \r\n    <div class=\"detailed-results\">\r\n      <h3>Detailed Results</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"result-item\">\r\n        <div class=\"question-header\">\r\n          <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n          <span :class=\"['result-status', question.isCorrect ? 'correct' : 'wrong']\">\r\n            {{ question.isCorrect ? '✓' : '✗' }}\r\n          </span>\r\n        </div>\r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        <div class=\"answer-details\" :class=\"{ 'incorrect': !question.isCorrect }\">\r\n          <div class=\"answer-row\">\r\n            <div class=\"user-answer\">\r\n              <strong>Your answer:</strong> \r\n              <span :class=\"{ 'incorrect-text': !question.isCorrect }\">\r\n                {{ formatAnswer(question, question.userAnswer) }}\r\n              </span>\r\n            </div>\r\n            <div class=\"correct-answer\">\r\n              <strong>Correct answer:</strong>\r\n              <span class=\"correct-text\">{{ formatAnswer(question, question.correctAnswer) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"explanation-box\" :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n            <p class=\"explanation-label\">Explanation:</p>\r\n            <p class=\"explanation-text\">{{ generateExplanation(question, question.isCorrect) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"return-hint\">\r\n      <p>You can retake this quiz anytime from the history panel</p>\r\n      <p>Click \"Create New Quiz\" to start a new quiz with different material</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\nimport { formatAnswer } from '../algorithms/answer-formatting';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\nfunction rephraseContent(text, isSupporting, question) {\r\n  // Clean and normalize the text\r\n  const cleaned = text.trim()\r\n    .replace(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi, '')\r\n    .replace(/\\+\\d{2}\\s*\\d{3}\\s*\\d{3}\\s*\\d{4}/g, '')\r\n    .replace(/\\d{4}\\s*\\+\\d{2}\\s*\\d{3}\\s*\\d{3}/g, '')\r\n    .replace(/\\d{4}\\s*\\d{4}/g, '')\r\n    .replace(/\\([^)]*\\)/g, '')\r\n    .replace(/\\[[^\\]]*\\]/g, '')\r\n    .trim();\r\n\r\n  if (isSupporting) {\r\n    return `Correct! ${cleaned}`;\r\n  } else {\r\n    const correctPart = question.type === 'multiple-choice'\r\n      ? `The correct answer is \"${question.options[question.correctAnswer]}\". `\r\n      : `The correct answer is ${question.correctAnswer}. `;\r\n    return `${correctPart}Here's why: ${cleaned}`;\r\n  }\r\n}\r\n\r\nfunction generateExplanation(question, isCorrect) {\r\n  const explanation = question.explanation || '';\r\n  if (!explanation) return \"No explanation available.\";\r\n\r\n  if (question.type === 'multiple-choice') {\r\n    return generateMultipleChoiceExplanation(question, isCorrect);\r\n  } else {\r\n    return generateTrueFalseExplanation(question, isCorrect);\r\n  }\r\n}\r\n\r\nfunction generateMultipleChoiceExplanation(question, isCorrect) {\r\n  if (isCorrect) {\r\n    return rephraseContent(question.explanation, true, question);\r\n  }\r\n\r\n  const userOption = question.options[question.userAnswer];\r\n  const correctOption = question.options[question.correctAnswer];\r\n  \r\n  return `While \"${userOption}\" might seem reasonable, it's not the complete picture. ${rephraseContent(question.explanation, false, question)} The correct answer, \"${correctOption}\", better reflects the full scope of the position.`;\r\n}\r\n\r\nfunction generateTrueFalseExplanation(question, isCorrect) {\r\n  if (isCorrect) {\r\n    return rephraseContent(question.explanation, true, question);\r\n  }\r\n\r\n  const userChoice = question.userAnswer ? 'true' : 'false';\r\n  const correctChoice = question.correctAnswer === 'true' ? 'true' : 'false';\r\n  \r\n  // Explain why their understanding needs adjustment\r\n  return `Your understanding needs a slight adjustment. While you marked this as ${userChoice}, ${rephraseContent(question.explanation, false, question)} This is why the statement is actually ${correctChoice}.`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n}\r\n\r\n.score-display {\r\n  margin: 2rem 0;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.score-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-main {\r\n  display: flex;\r\n  align-items: baseline;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-value {\r\n  font-size: 4rem;\r\n  line-height: 1;\r\n  font-weight: 800;\r\n}\r\n\r\n.score-separator {\r\n  font-size: 3rem;\r\n  opacity: 0.5;\r\n}\r\n\r\n.score-total {\r\n  font-size: 2.5rem;\r\n  opacity: 0.7;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  opacity: 0.9;\r\n}\r\n\r\n.score-comparison {\r\n  margin: 1.5rem 0;\r\n  padding: 1.5rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n}\r\n\r\n.comparison-text {\r\n  margin-top: 0.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.comparison-text.success {\r\n  color: #4CAF50;\r\n}\r\n\r\n.comparison-text.neutral {\r\n  color: #666;\r\n}\r\n\r\n.comparison-text.warning {\r\n  color: #f44336;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n}\r\n\r\n.result-item {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.result-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.result-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.result-status.wrong {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.answer-details.incorrect {\r\n  border-color: #ffcdd2;\r\n  background-color: #fff5f5;\r\n}\r\n\r\n.answer-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-answer, .correct-answer {\r\n  padding: 1rem;\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.user-answer strong, .correct-answer strong {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.incorrect-text {\r\n  color: #d32f2f;\r\n}\r\n\r\n.correct-text {\r\n  color: #2e7d32;\r\n}\r\n\r\n.explanation-box {\r\n  margin-top: 1.5rem;\r\n  padding: 1.5rem;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.explanation-box.correct {\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.explanation-box.incorrect {\r\n  border-left: 4px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 600;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.explanation-label.correct {\r\n  color: #4CAF50;\r\n}\r\n\r\n.explanation-label.incorrect {\r\n  color: #f57c00;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.return-hint {\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n}\r\n\r\n.return-hint p {\r\n  margin: 0.5rem 0;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.return-hint p:first-child {\r\n  color: #4CAF50;\r\n  font-weight: 500;\r\n}\r\n\r\n.return-hint p:last-child {\r\n  color: #2196F3;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Remove button styles */\r\n.button-group, .restart-btn, .back-btn {\r\n  display: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}