{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"quiz-content\"\n};\nconst _hoisted_3 = {\n  class: \"quiz-progress\"\n};\nconst _hoisted_4 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_5 = {\n  class: \"progress-text\"\n};\nconst _hoisted_6 = {\n  class: \"question-item\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"options\"\n};\nconst _hoisted_8 = [\"onClick\", \"disabled\"];\nconst _hoisted_9 = {\n  class: \"option-letter\"\n};\nconst _hoisted_10 = {\n  class: \"option-text\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"options true-false\"\n};\nconst _hoisted_12 = [\"onClick\", \"disabled\"];\nconst _hoisted_13 = {\n  key: 2,\n  class: \"feedback\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.getCurrentQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: \"progress-fill\",\n    style: _normalizeStyle({\n      width: `${($setup.currentQuestionIndex + 1) * 100 / $setup.totalQuestions}%`\n    })\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", _hoisted_5, \"Question \" + _toDisplayString($setup.currentQuestionIndex + 1) + \" of \" + _toDisplayString($setup.totalQuestions), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($setup.getCurrentQuestion.text), 1 /* TEXT */), $setup.getCurrentQuestion.type === 'multiple-choice' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCurrentQuestion.options, (option, letter) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: letter,\n      class: _normalizeClass([\"option-btn\", {\n        'selected': $setup.currentAnswer === letter,\n        'correct': $setup.showFeedback && letter === $setup.getCurrentQuestion.correctAnswer,\n        'incorrect': $setup.showFeedback && $setup.currentAnswer === letter && letter !== $setup.getCurrentQuestion.correctAnswer\n      }]),\n      onClick: $event => $setup.submitAnswer(letter),\n      disabled: $setup.showFeedback\n    }, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(letter), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(option), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])) : $setup.getCurrentQuestion.type === 'true-false' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList({\n    true: 'True',\n    false: 'False'\n  }, (text, value) => {\n    return _createElementVNode(\"button\", {\n      key: value,\n      class: _normalizeClass([\"option-btn\", {\n        'selected': $setup.currentAnswer === value,\n        'correct': $setup.showFeedback && value === $setup.getCurrentQuestion.correctAnswer,\n        'incorrect': $setup.showFeedback && $setup.currentAnswer === value && value !== $setup.getCurrentQuestion.correctAnswer\n      }]),\n      onClick: $event => $setup.submitAnswer(value),\n      disabled: $setup.showFeedback\n    }, _toDisplayString(text), 11 /* TEXT, CLASS, PROPS */, _hoisted_12);\n  }), 64 /* STABLE_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.showFeedback ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"p\", {\n    class: _normalizeClass({\n      'correct-text': $setup.isAnswerCorrect,\n      'incorrect-text': !$setup.isAnswerCorrect\n    })\n  }, _toDisplayString($setup.isAnswerCorrect ? 'Correct!' : 'Incorrect!'), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    class: \"next-btn\",\n    onClick: $setup.moveToNext\n  }, _toDisplayString($setup.currentQuestionIndex + 1 >= $setup.totalQuestions ? 'See Results' : 'Next Question'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","getCurrentQuestion","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","style","_normalizeStyle","width","currentQuestionIndex","totalQuestions","_hoisted_5","_toDisplayString","_hoisted_6","text","type","_hoisted_7","_Fragment","_renderList","options","option","letter","_normalizeClass","currentAnswer","showFeedback","correctAnswer","onClick","$event","submitAnswer","disabled","_hoisted_9","_hoisted_10","_hoisted_8","_hoisted_11","true","false","value","_hoisted_12","_createCommentVNode","_hoisted_13","isAnswerCorrect","moveToNext"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\FlashcardQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-container\">\n    <div v-if=\"getCurrentQuestion\" class=\"quiz-content\">\n      <div class=\"quiz-progress\">\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress-fill\"\n            :style=\"{ width: `${(currentQuestionIndex + 1) * 100 / totalQuestions}%` }\"\n          ></div>\n        </div>\n        <span class=\"progress-text\">Question {{ currentQuestionIndex + 1 }} of {{ totalQuestions }}</span>\n      </div>\n      \n      <div class=\"question-item\">\n        <h3>{{ getCurrentQuestion.text }}</h3>\n        <div v-if=\"getCurrentQuestion.type === 'multiple-choice'\" class=\"options\">\n          <button \n            v-for=\"(option, letter) in getCurrentQuestion.options\" \n            :key=\"letter\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === letter,\n              'correct': showFeedback && letter === getCurrentQuestion.correctAnswer,\n              'incorrect': showFeedback && currentAnswer === letter && letter !== getCurrentQuestion.correctAnswer\n            }\"\n            @click=\"submitAnswer(letter)\"\n            :disabled=\"showFeedback\"\n          >\n            <span class=\"option-letter\">{{ letter }}</span>\n            <span class=\"option-text\">{{ option }}</span>\n          </button>\n        </div>\n        <div v-else-if=\"getCurrentQuestion.type === 'true-false'\" class=\"options true-false\">\n          <button \n            v-for=\"(text, value) in { true: 'True', false: 'False' }\" \n            :key=\"value\"\n            class=\"option-btn\"\n            :class=\"{ \n              'selected': currentAnswer === value,\n              'correct': showFeedback && value === getCurrentQuestion.correctAnswer,\n              'incorrect': showFeedback && currentAnswer === value && value !== getCurrentQuestion.correctAnswer\n            }\"\n            @click=\"submitAnswer(value)\"\n            :disabled=\"showFeedback\"\n          >\n            {{ text }}\n          </button>\n        </div>\n\n        <div v-if=\"showFeedback\" class=\"feedback\">\n          <p :class=\"{ 'correct-text': isAnswerCorrect, 'incorrect-text': !isAnswerCorrect }\">\n            {{ isAnswerCorrect ? 'Correct!' : 'Incorrect!' }}\n          </p>\n          <button class=\"next-btn\" @click=\"moveToNext\">\n            {{ currentQuestionIndex + 1 >= totalQuestions ? 'See Results' : 'Next Question' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  questions: {\n    type: Array,\n    required: true\n  },\n  totalQuestions: {\n    type: Number,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['quiz-completed']);\n\nconst currentQuestionIndex = ref(0);\nconst currentAnswer = ref(null);\nconst showFeedback = ref(false);\nconst isAnswerCorrect = ref(false);\nconst userResponses = ref([]);\n\nconst getCurrentQuestion = computed(() => {\n  return props.questions[currentQuestionIndex.value];\n});\n\nconst totalQuestions = computed(() => {\n  return props.totalQuestions;\n});\n\nconst submitAnswer = (answer) => {\n  if (showFeedback.value) return;\n  \n  currentAnswer.value = answer;\n  const question = getCurrentQuestion.value;\n  \n  console.log('Submitting answer:', {\n    givenAnswer: answer,\n    correctAnswer: question.correctAnswer,\n    type: question.type\n  });\n  \n  if (question.type === 'true-false') {\n    isAnswerCorrect.value = String(answer).toLowerCase() === String(question.correctAnswer).toLowerCase();\n  } else {\n    isAnswerCorrect.value = String(answer) === String(question.correctAnswer);\n  }\n  \n  console.log('Answer validation result:', isAnswerCorrect.value);\n  showFeedback.value = true;\n};\n\nconst moveToNext = () => {\n  const question = getCurrentQuestion.value;\n  userResponses.value.push({\n    text: question.text,\n    userAnswer: currentAnswer.value,\n    correct: isAnswerCorrect.value,\n    difficulty: question.difficulty,\n    explanation: question.explanation\n  });\n\n  showFeedback.value = false;\n  isAnswerCorrect.value = false;\n  \n  if (currentQuestionIndex.value + 1 >= totalQuestions.value) {\n    emit('quiz-completed', userResponses.value);\n  } else {\n    currentQuestionIndex.value++;\n    currentAnswer.value = null;\n  }\n};\n</script>\n\n<style scoped>\n.quiz-container {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.quiz-content {\n  background: white;\n  padding: 2rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.quiz-progress {\n  margin-bottom: 2rem;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background-color: #e0e0e0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  display: block;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.question-item {\n  margin-top: 1.5rem;\n}\n\n.question-item h3 {\n  font-size: 1.2rem;\n  color: #333;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n  margin: 1.5rem 0;\n}\n\n.options.true-false {\n  flex-direction: row;\n  justify-content: center;\n  gap: 1.5rem;\n}\n\n.option-btn {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: white;\n  color: #333;\n  cursor: pointer;\n  font-size: 1rem;\n  text-align: left;\n  transition: all 0.2s ease;\n}\n\n.options.true-false .option-btn {\n  width: auto;\n  min-width: 120px;\n  justify-content: center;\n  font-size: 1.1rem;\n  font-weight: 500;\n}\n\n.option-letter {\n  background-color: #f5f5f5;\n  color: #666;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  margin-right: 1rem;\n  font-weight: 600;\n}\n\n.option-text {\n  flex: 1;\n}\n\n.option-btn:hover:not(:disabled) {\n  border-color: #2196F3;\n  background-color: #f8f9fa;\n}\n\n.option-btn.selected {\n  border-color: #2196F3;\n  background-color: #e3f2fd;\n}\n\n.option-btn.correct {\n  border-color: #4CAF50;\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.option-btn.incorrect {\n  border-color: #f44336;\n  background-color: #FFEBEE;\n  color: #c62828;\n}\n\n.feedback {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n\n.correct-text {\n  color: #4CAF50;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.incorrect-text {\n  color: #f44336;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.next-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 0.8rem 2rem;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 1rem;\n  transition: all 0.2s ease;\n}\n\n.next-btn:hover {\n  background-color: #1976D2;\n  transform: translateY(-1px);\n}\n\n.explanation {\n  margin: 1rem 0;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-left: 4px solid #2196F3;\n  border-radius: 4px;\n  color: #333;\n  font-size: 0.95rem;\n  line-height: 1.5;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}