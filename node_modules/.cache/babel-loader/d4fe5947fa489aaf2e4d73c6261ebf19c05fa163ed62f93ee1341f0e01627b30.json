{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flashcard-quiz\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"question-card\"\n};\nconst _hoisted_4 = {\n  class: \"question-text\"\n};\nconst _hoisted_5 = {\n  class: \"options\"\n};\nconst _hoisted_6 = [\"disabled\", \"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"feedback\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"correct\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"wrong\"\n};\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.quizComplete ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, \"Question \" + _toDisplayString($setup.currentIndex + 1) + \" of \" + _toDisplayString($props.questions.length), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString($setup.currentQuestion.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.currentQuestion.options, (option, idx) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: idx,\n      disabled: $setup.answered,\n      class: _normalizeClass({\n        correct: $setup.answered && option.letter === $setup.currentQuestion.answer && $setup.selected === option.letter,\n        wrong: $setup.answered && $setup.selected === option.letter && option.letter !== $setup.currentQuestion.answer\n      }),\n      onClick: $event => $setup.selectOption(option.letter)\n    }, _toDisplayString(option.letter) + \") \" + _toDisplayString(option.text), 11 /* TEXT, CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.answered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [$setup.selected === $setup.currentQuestion.answer ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"Correct!\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"Wrong! Correct answer: \" + _toDisplayString($setup.currentQuestion.answer), 1 /* TEXT */))])) : _createCommentVNode(\"v-if\", true), $setup.answered && $setup.currentIndex < $props.questions.length - 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: $setup.nextQuestion,\n    class: \"next-btn\"\n  }, \"Next\")) : _createCommentVNode(\"v-if\", true), $setup.answered && $setup.currentIndex === $props.questions.length - 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: $setup.finishQuiz,\n    class: \"finish-btn\"\n  }, \"Finish\")) : _createCommentVNode(\"v-if\", true)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Quiz Complete!\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Your score: \" + _toDisplayString($setup.score) + \" / \" + _toDisplayString($props.questions.length), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.restartQuiz\n  }, \"Restart\")]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","quizComplete","_hoisted_2","_createElementVNode","_hoisted_3","_toDisplayString","currentIndex","$props","questions","length","_hoisted_4","currentQuestion","text","_hoisted_5","_Fragment","_renderList","options","option","idx","disabled","answered","_normalizeClass","letter","answer","selected","onClick","$event","selectOption","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createCommentVNode","nextQuestion","finishQuiz","_hoisted_10","score","restartQuiz"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\FlashcardQuiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"flashcard-quiz\">\r\n    <div v-if=\"!quizComplete\">\r\n      <div class=\"question-card\">\r\n        <h2>Question {{ currentIndex + 1 }} of {{ questions.length }}</h2>\r\n        <p class=\"question-text\">{{ currentQuestion.text }}</p>\r\n        <div class=\"options\">\r\n          <button\r\n            v-for=\"(option, idx) in currentQuestion.options\"\r\n            :key=\"idx\"\r\n            :disabled=\"answered\"\r\n            :class=\"{\r\n              correct: answered && option.letter === currentQuestion.answer && selected === option.letter,\r\n              wrong: answered && selected === option.letter && option.letter !== currentQuestion.answer\r\n            }\"\r\n            @click=\"selectOption(option.letter)\"\r\n          >\r\n            {{ option.letter }}) {{ option.text }}\r\n          </button>\r\n        </div>\r\n        <div v-if=\"answered\" class=\"feedback\">\r\n          <span v-if=\"selected === currentQuestion.answer\" class=\"correct\">Correct!</span>\r\n          <span v-else class=\"wrong\">Wrong! Correct answer: {{ currentQuestion.answer }}</span>\r\n        </div>\r\n        <button v-if=\"answered && currentIndex < questions.length - 1\" @click=\"nextQuestion\" class=\"next-btn\">Next</button>\r\n        <button v-if=\"answered && currentIndex === questions.length - 1\" @click=\"finishQuiz\" class=\"finish-btn\">Finish</button>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h2>Quiz Complete!</h2>\r\n      <p>Your score: {{ score }} / {{ questions.length }}</p>\r\n      <button @click=\"restartQuiz\">Restart</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst currentIndex = ref(0);\r\nconst selected = ref(null);\r\nconst answered = ref(false);\r\nconst score = ref(0);\r\nconst quizComplete = ref(false);\r\n\r\nconst currentQuestion = computed(() => props.questions[currentIndex.value]);\r\n\r\nfunction selectOption(letter) {\r\n  if (answered.value) return;\r\n  selected.value = letter;\r\n  answered.value = true;\r\n  if (letter === currentQuestion.value.answer) {\r\n    score.value++;\r\n  }\r\n}\r\n\r\nfunction nextQuestion() {\r\n  currentIndex.value++;\r\n  selected.value = null;\r\n  answered.value = false;\r\n}\r\n\r\nfunction finishQuiz() {\r\n  quizComplete.value = true;\r\n}\r\n\r\nfunction restartQuiz() {\r\n  currentIndex.value = 0;\r\n  selected.value = null;\r\n  answered.value = false;\r\n  score.value = 0;\r\n  quizComplete.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.flashcard-quiz {\r\n  max-width: 500px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n  text-align: center;\r\n}\r\n.question-card {\r\n  margin-bottom: 1rem;\r\n}\r\n.question-text {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n.options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n.options button {\r\n  padding: 0.7rem 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background: #f8f8f8;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background 0.2s;\r\n}\r\n.options button.correct {\r\n  background: #c8f7c5;\r\n  border-color: #27ae60;\r\n}\r\n.options button.wrong {\r\n  background: #f7c5c5;\r\n  border-color: #e74c3c;\r\n}\r\n.feedback {\r\n  margin-bottom: 1rem;\r\n  font-weight: bold;\r\n}\r\n.correct {\r\n  color: #27ae60;\r\n}\r\n.wrong {\r\n  color: #e74c3c;\r\n}\r\n.next-btn, .finish-btn {\r\n  padding: 0.7rem 2rem;\r\n  background: #4CAF50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n.next-btn:hover, .finish-btn:hover {\r\n  background: #388e3c;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}