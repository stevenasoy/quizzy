{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'CalendarHeatmap',\n  props: {\n    activities: {\n      type: Object,\n      required: true,\n      \"default\": function _default() {}\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var monthsData = computed(function () {\n      var currentYear = new Date().getFullYear();\n      return monthNames.map(function (name, monthIndex) {\n        var firstDay = new Date(currentYear, monthIndex, 1);\n        var lastDay = new Date(currentYear, monthIndex + 1, 0);\n        var daysInMonth = lastDay.getDate();\n        var startingDayIndex = firstDay.getDay();\n\n        // Create array for all days in the month\n        var days = [];\n\n        // Add days from previous month\n        var prevMonth = new Date(currentYear, monthIndex, 0);\n        var prevMonthDays = prevMonth.getDate();\n        for (var i = 0; i < startingDayIndex; i++) {\n          var date = new Date(currentYear, monthIndex - 1, prevMonthDays - startingDayIndex + i + 1);\n          date.setUTCHours(12, 0, 0, 0);\n          var dateStr = date.toISOString().split('T')[0];\n          var count = props.activities[dateStr] || 0;\n          days.push({\n            date: date,\n            count: count,\n            isCurrentMonth: false\n          });\n        }\n\n        // Add all days of the current month\n        for (var _date = 1; _date <= daysInMonth; _date++) {\n          var currentDate = new Date(currentYear, monthIndex, _date);\n          currentDate.setUTCHours(12, 0, 0, 0);\n          var _dateStr = currentDate.toISOString().split('T')[0];\n          var _count = props.activities[_dateStr] || 0;\n          days.push({\n            date: currentDate,\n            count: _count,\n            isCurrentMonth: true\n          });\n        }\n\n        // Add days from next month\n        var remainingCells = (7 - days.length % 7) % 7;\n        for (var _i = 0; _i < remainingCells; _i++) {\n          var _date2 = new Date(currentYear, monthIndex + 1, _i + 1);\n          _date2.setUTCHours(12, 0, 0, 0);\n          var _dateStr2 = _date2.toISOString().split('T')[0];\n          var _count2 = props.activities[_dateStr2] || 0;\n          days.push({\n            date: _date2,\n            count: _count2,\n            isCurrentMonth: false\n          });\n        }\n        return {\n          name: name,\n          days: days\n        };\n      });\n    });\n    var getDayClass = function getDayClass(day) {\n      if (!day.date) return 'empty-day';\n      var classes = ['has-date'];\n      if (!day.isCurrentMonth) {\n        classes.push('other-month');\n      }\n      if (day.count > 0) {\n        classes.push('has-activity');\n        if (day.count <= 2) classes.push('activity-low');else if (day.count <= 5) classes.push('activity-medium');else classes.push('activity-high');\n      }\n\n      // Compare dates using UTC noon to avoid timezone issues\n      var today = new Date();\n      today.setUTCHours(12, 0, 0, 0);\n      var dayDate = new Date(day.date);\n      dayDate.setUTCHours(12, 0, 0, 0);\n      if (dayDate.toISOString().split('T')[0] === today.toISOString().split('T')[0]) {\n        classes.push('today');\n      }\n      return classes;\n    };\n    var getDayTooltip = function getDayTooltip(day) {\n      if (!day.date) return '';\n      var dateStr = day.date.toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n      return day.count > 0 ? \"\".concat(dateStr, \": \").concat(day.count, \" activities\") : dateStr;\n    };\n    var __returned__ = {\n      props: props,\n      weekdays: weekdays,\n      monthNames: monthNames,\n      monthsData: monthsData,\n      getDayClass: getDayClass,\n      getDayTooltip: getDayTooltip,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","weekdays","monthNames","monthsData","currentYear","Date","getFullYear","map","name","monthIndex","firstDay","lastDay","daysInMonth","getDate","startingDayIndex","getDay","days","prevMonth","prevMonthDays","i","date","setUTCHours","dateStr","toISOString","split","count","activities","push","isCurrentMonth","currentDate","remainingCells","length","getDayClass","day","classes","today","dayDate","getDayTooltip","toLocaleDateString","undefined","year","month","concat"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/CalendarHeatmap.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-container\">\r\n    <div class=\"months-grid\">\r\n      <div v-for=\"month in monthsData\" :key=\"month.name\" class=\"month-card\">\r\n        <div class=\"month-title\">{{ month.name }}</div>\r\n        <div class=\"calendar-grid\">\r\n          <div class=\"weekday-header\">\r\n            <div v-for=\"day in weekdays\" :key=\"day\" class=\"weekday\">\r\n              {{ day.charAt(0) }}\r\n            </div>\r\n          </div>\r\n          <div class=\"days-grid\">\r\n            <div v-for=\"(day, index) in month.days\" \r\n              :key=\"index\"\r\n              class=\"day-cell\"\r\n              :class=\"getDayClass(day)\"\r\n              :title=\"getDayTooltip(day)\"\r\n            >\r\n              <span class=\"date-number\">{{ day.date ? day.date.getDate() : '' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"legend\">\r\n      <span>Less</span>\r\n      <div class=\"legend-item empty\"></div>\r\n      <div class=\"legend-item activity-low\"></div>\r\n      <div class=\"legend-item activity-medium\"></div>\r\n      <div class=\"legend-item activity-high\"></div>\r\n      <span>More</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  activities: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => {}\r\n  }\r\n});\r\n\r\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthNames = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst monthsData = computed(() => {\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  return monthNames.map((name, monthIndex) => {\r\n    const firstDay = new Date(currentYear, monthIndex, 1);\r\n    const lastDay = new Date(currentYear, monthIndex + 1, 0);\r\n    const daysInMonth = lastDay.getDate();\r\n    const startingDayIndex = firstDay.getDay();\r\n    \r\n    // Create array for all days in the month\r\n    const days = [];\r\n    \r\n    // Add days from previous month\r\n    const prevMonth = new Date(currentYear, monthIndex, 0);\r\n    const prevMonthDays = prevMonth.getDate();\r\n    for (let i = 0; i < startingDayIndex; i++) {\r\n      const date = new Date(currentYear, monthIndex - 1, prevMonthDays - startingDayIndex + i + 1);\r\n      date.setUTCHours(12, 0, 0, 0);\r\n      const dateStr = date.toISOString().split('T')[0];\r\n      const count = props.activities[dateStr] || 0;\r\n      days.push({\r\n        date,\r\n        count,\r\n        isCurrentMonth: false\r\n      });\r\n    }\r\n    \r\n    // Add all days of the current month\r\n    for (let date = 1; date <= daysInMonth; date++) {\r\n      const currentDate = new Date(currentYear, monthIndex, date);\r\n      currentDate.setUTCHours(12, 0, 0, 0);\r\n      const dateStr = currentDate.toISOString().split('T')[0];\r\n      const count = props.activities[dateStr] || 0;\r\n      \r\n      days.push({\r\n        date: currentDate,\r\n        count: count,\r\n        isCurrentMonth: true\r\n      });\r\n    }\r\n    \r\n    // Add days from next month\r\n    const remainingCells = (7 - (days.length % 7)) % 7;\r\n    for (let i = 0; i < remainingCells; i++) {\r\n      const date = new Date(currentYear, monthIndex + 1, i + 1);\r\n      date.setUTCHours(12, 0, 0, 0);\r\n      const dateStr = date.toISOString().split('T')[0];\r\n      const count = props.activities[dateStr] || 0;\r\n      days.push({\r\n        date,\r\n        count,\r\n        isCurrentMonth: false\r\n      });\r\n    }\r\n    \r\n    return {\r\n      name,\r\n      days\r\n    };\r\n  });\r\n});\r\n\r\nconst getDayClass = (day) => {\r\n  if (!day.date) return 'empty-day';\r\n  \r\n  const classes = ['has-date'];\r\n  \r\n  if (!day.isCurrentMonth) {\r\n    classes.push('other-month');\r\n  }\r\n  \r\n  if (day.count > 0) {\r\n    classes.push('has-activity');\r\n    if (day.count <= 2) classes.push('activity-low');\r\n    else if (day.count <= 5) classes.push('activity-medium');\r\n    else classes.push('activity-high');\r\n  }\r\n  \r\n  // Compare dates using UTC noon to avoid timezone issues\r\n  const today = new Date();\r\n  today.setUTCHours(12, 0, 0, 0);\r\n  const dayDate = new Date(day.date);\r\n  dayDate.setUTCHours(12, 0, 0, 0);\r\n  if (dayDate.toISOString().split('T')[0] === today.toISOString().split('T')[0]) {\r\n    classes.push('today');\r\n  }\r\n  \r\n  return classes;\r\n};\r\n\r\nconst getDayTooltip = (day) => {\r\n  if (!day.date) return '';\r\n  const dateStr = day.date.toLocaleDateString(undefined, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n  return day.count > 0\r\n    ? `${dateStr}: ${day.count} activities`\r\n    : dateStr;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-container {\r\n  padding: 0.5rem;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.months-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.month-card {\r\n  background: #ffffff;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.month-title {\r\n  margin: 0 0 0.25rem;\r\n  font-size: 0.8rem;\r\n  color: #57606a;\r\n  text-align: center;\r\n  font-weight: 500;\r\n}\r\n\r\n.calendar-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.15rem;\r\n}\r\n\r\n.weekday-header {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  text-align: center;\r\n  font-size: 0.65rem;\r\n  color: #57606a;\r\n  margin-bottom: 0.15rem;\r\n}\r\n\r\n.weekday {\r\n  padding: 0.1rem;\r\n}\r\n\r\n.days-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 0;\r\n  border: 1px solid #e1e4e8;\r\n  border-radius: 2px;\r\n}\r\n\r\n.day-cell {\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  background: #ffffff;\r\n  border-right: 1px solid #e1e4e8;\r\n  border-bottom: 1px solid #e1e4e8;\r\n}\r\n\r\n.day-cell:nth-child(7n) {\r\n  border-right: none;\r\n}\r\n\r\n.day-cell:nth-last-child(-n+7) {\r\n  border-bottom: none;\r\n}\r\n\r\n.day-cell.empty-day {\r\n  background: transparent;\r\n  border: none;\r\n}\r\n\r\n.date-number {\r\n  font-size: 0.65rem;\r\n  color: #57606a;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.day-cell.has-activity {\r\n  color: #57606a;\r\n}\r\n\r\n.day-cell.activity-low {\r\n  background-color: #e6ffec;\r\n}\r\n\r\n.day-cell.activity-medium {\r\n  background-color: #9be9a8;\r\n}\r\n\r\n.day-cell.activity-high {\r\n  background-color: #40c463;\r\n}\r\n\r\n.day-cell.today {\r\n  position: relative;\r\n}\r\n\r\n.day-cell.today::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -1px;\r\n  left: -1px;\r\n  right: -1px;\r\n  bottom: -1px;\r\n  border: 1px solid #0969da;\r\n  border-radius: 1px;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n}\r\n\r\n.legend {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  justify-content: center;\r\n  font-size: 0.7rem;\r\n  color: #57606a;\r\n  padding: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.legend-item {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 2px;\r\n}\r\n\r\n.legend-item.empty {\r\n  background-color: #ffffff;\r\n  border: 1px solid #e1e4e8;\r\n}\r\n\r\n.legend-item.activity-low {\r\n  background-color: #e6ffec;\r\n}\r\n\r\n.legend-item.activity-medium {\r\n  background-color: #9be9a8;\r\n}\r\n\r\n.legend-item.activity-high {\r\n  background-color: #40c463;\r\n}\r\n\r\n.day-cell.other-month {\r\n  opacity: 0.3;\r\n}\r\n\r\n.day-cell.other-month .date-number {\r\n  color: #999;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .months-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .months-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  \r\n  .month-title {\r\n    font-size: 0.7rem;\r\n  }\r\n  \r\n  .date-number {\r\n    font-size: 0.6rem;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}