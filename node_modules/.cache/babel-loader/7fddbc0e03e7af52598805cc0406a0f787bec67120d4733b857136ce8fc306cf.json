{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"spaced-review-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"review-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"progress-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"progress-bar\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"question-card\"\n};\nvar _hoisted_6 = {\n  \"class\": \"question-content\"\n};\nvar _hoisted_7 = {\n  \"class\": \"question-text\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"options\"\n};\nvar _hoisted_9 = [\"onClick\", \"disabled\"];\nvar _hoisted_10 = {\n  key: 1,\n  \"class\": \"true-false-options\"\n};\nvar _hoisted_11 = [\"onClick\", \"disabled\"];\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"answer-feedback\"\n};\nvar _hoisted_13 = {\n  \"class\": \"next-review-info\"\n};\nvar _hoisted_14 = {\n  key: 0,\n  \"class\": \"explanation\"\n};\nvar _hoisted_15 = {\n  key: 1,\n  \"class\": \"session-complete\"\n};\nvar _hoisted_16 = {\n  \"class\": \"session-stats\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Review Session\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString($setup.completedReviews) + \" / \" + _toDisplayString($setup.totalReviews) + \" Questions\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    \"class\": \"progress-fill\",\n    style: _normalizeStyle({\n      width: \"\".concat($setup.completedReviews / $setup.totalReviews * 100, \"%\")\n    })\n  }, null, 4 /* STYLE */)])])]), $setup.currentQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString($setup.currentQuestion.text), 1 /* TEXT */), $setup.currentQuestion.type === 'multiple-choice' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.currentQuestion.options, function (text, key) {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: key,\n      \"class\": _normalizeClass(['option-btn', {\n        'selected': $setup.showAnswer && key === $setup.currentQuestion.correctAnswer,\n        'incorrect': $setup.showAnswer && key === $setup.selectedAnswer && key !== $setup.currentQuestion.correctAnswer\n      }]),\n      onClick: function onClick($event) {\n        return $setup.submitAnswer(key);\n      },\n      disabled: $setup.showAnswer\n    }, _toDisplayString(key) + \") \" + _toDisplayString(text), 11 /* TEXT, CLASS, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(['true', 'false'], function (option) {\n    return _createElementVNode(\"button\", {\n      key: option,\n      \"class\": _normalizeClass(['tf-btn', {\n        'selected': $setup.showAnswer && option === $setup.currentQuestion.correctAnswer,\n        'incorrect': $setup.showAnswer && option === $setup.selectedAnswer && option !== $setup.currentQuestion.correctAnswer\n      }]),\n      onClick: function onClick($event) {\n        return $setup.submitAnswer(option);\n      },\n      disabled: $setup.showAnswer\n    }, _toDisplayString(option.charAt(0).toUpperCase() + option.slice(1)), 11 /* TEXT, CLASS, PROPS */, _hoisted_11);\n  }), 64 /* STABLE_FRAGMENT */))]))]), $setup.showAnswer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"feedback-header\", {\n      'correct': $setup.isCorrect,\n      'incorrect': !$setup.isCorrect\n    }])\n  }, _toDisplayString($setup.isCorrect ? 'Correct!' : 'Incorrect'), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_13, \" Next review in: \" + _toDisplayString($setup.formatNextReview($setup.currentQuestion.spacedRepetition.nextReviewDate)), 1 /* TEXT */), $setup.currentQuestion.explanation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_cache[2] || (_cache[2] = _createElementVNode(\"h4\", null, \"Explanation:\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.currentQuestion.explanation), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    \"class\": \"next-btn\",\n    onClick: $setup.moveToNext\n  }, _toDisplayString($setup.isLastQuestion ? 'Finish Review' : 'Next Question'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])) : $setup.completedReviews === $setup.totalReviews ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Review Session Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", null, \"Correct: \" + _toDisplayString($setup.correctAnswers), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Total Questions: \" + _toDisplayString($setup.totalReviews), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Accuracy: \" + _toDisplayString(Math.round($setup.correctAnswers / $setup.totalReviews * 100)) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    \"class\": \"finish-btn\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('session-complete', $setup.reviewResults);\n    })\n  }, \" Return to Dashboard \")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$setup","completedReviews","totalReviews","_hoisted_4","style","_normalizeStyle","width","concat","currentQuestion","_hoisted_5","_hoisted_6","_hoisted_7","text","type","_hoisted_8","_Fragment","_renderList","options","key","_normalizeClass","showAnswer","correctAnswer","selectedAnswer","onClick","$event","submitAnswer","disabled","_hoisted_9","_hoisted_10","option","charAt","toUpperCase","slice","_hoisted_11","_hoisted_12","isCorrect","_hoisted_13","formatNextReview","spacedRepetition","nextReviewDate","explanation","_hoisted_14","moveToNext","isLastQuestion","_hoisted_15","_hoisted_16","correctAnswers","Math","round","_cache","_ctx","$emit","reviewResults"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\SpacedReviewSession.vue"],"sourcesContent":["<template>\r\n  <div class=\"spaced-review-container\">\r\n    <div class=\"review-header\">\r\n      <h2>Review Session</h2>\r\n      <div class=\"progress-info\">\r\n        <span>{{ completedReviews }} / {{ totalReviews }} Questions</span>\r\n        <div class=\"progress-bar\">\r\n          <div \r\n            class=\"progress-fill\" \r\n            :style=\"{ width: `${(completedReviews / totalReviews) * 100}%` }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"currentQuestion\" class=\"question-card\">\r\n      <div class=\"question-content\">\r\n        <p class=\"question-text\">{{ currentQuestion.text }}</p>\r\n        \r\n        <div v-if=\"currentQuestion.type === 'multiple-choice'\" class=\"options\">\r\n          <button\r\n            v-for=\"(text, key) in currentQuestion.options\"\r\n            :key=\"key\"\r\n            :class=\"['option-btn', {\r\n              'selected': showAnswer && key === currentQuestion.correctAnswer,\r\n              'incorrect': showAnswer && key === selectedAnswer && key !== currentQuestion.correctAnswer\r\n            }]\"\r\n            @click=\"submitAnswer(key)\"\r\n            :disabled=\"showAnswer\"\r\n          >\r\n            {{ key }}) {{ text }}\r\n          </button>\r\n        </div>\r\n        \r\n        <div v-else class=\"true-false-options\">\r\n          <button\r\n            v-for=\"option in ['true', 'false']\"\r\n            :key=\"option\"\r\n            :class=\"['tf-btn', {\r\n              'selected': showAnswer && option === currentQuestion.correctAnswer,\r\n              'incorrect': showAnswer && option === selectedAnswer && option !== currentQuestion.correctAnswer\r\n            }]\"\r\n            @click=\"submitAnswer(option)\"\r\n            :disabled=\"showAnswer\"\r\n          >\r\n            {{ option.charAt(0).toUpperCase() + option.slice(1) }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"showAnswer\" class=\"answer-feedback\">\r\n        <div class=\"feedback-header\" :class=\"{ 'correct': isCorrect, 'incorrect': !isCorrect }\">\r\n          {{ isCorrect ? 'Correct!' : 'Incorrect' }}\r\n        </div>\r\n        \r\n        <div class=\"next-review-info\">\r\n          Next review in: {{ formatNextReview(currentQuestion.spacedRepetition.nextReviewDate) }}\r\n        </div>\r\n\r\n        <div class=\"explanation\" v-if=\"currentQuestion.explanation\">\r\n          <h4>Explanation:</h4>\r\n          <p>{{ currentQuestion.explanation }}</p>\r\n        </div>\r\n\r\n        <button class=\"next-btn\" @click=\"moveToNext\">\r\n          {{ isLastQuestion ? 'Finish Review' : 'Next Question' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"completedReviews === totalReviews\" class=\"session-complete\">\r\n      <h3>Review Session Complete!</h3>\r\n      <div class=\"session-stats\">\r\n        <p>Correct: {{ correctAnswers }}</p>\r\n        <p>Total Questions: {{ totalReviews }}</p>\r\n        <p>Accuracy: {{ Math.round((correctAnswers / totalReviews) * 100) }}%</p>\r\n      </div>\r\n      <button class=\"finish-btn\" @click=\"$emit('session-complete', reviewResults)\">\r\n        Return to Dashboard\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { updateQuestionAfterReview } from '../algorithms/spaced-repetition';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['session-complete']);\r\n\r\n// State\r\nconst currentIndex = ref(0);\r\nconst showAnswer = ref(false);\r\nconst selectedAnswer = ref(null);\r\nconst reviewResults = ref([]);\r\nconst correctAnswers = ref(0);\r\n\r\n// Computed\r\nconst totalReviews = computed(() => props.questions.length);\r\nconst completedReviews = computed(() => reviewResults.value.length);\r\nconst currentQuestion = computed(() => props.questions[currentIndex.value]);\r\nconst isLastQuestion = computed(() => currentIndex.value === props.questions.length - 1);\r\nconst isCorrect = computed(() => selectedAnswer.value === currentQuestion.value?.correctAnswer);\r\n\r\n// Methods\r\nfunction submitAnswer(answer) {\r\n  if (showAnswer.value) return;\r\n  \r\n  selectedAnswer.value = answer;\r\n  showAnswer.value = true;\r\n  \r\n  const performance = answer === currentQuestion.value.correctAnswer ? 1 : 0;\r\n  if (performance === 1) correctAnswers.value++;\r\n  \r\n  const updatedQuestion = updateQuestionAfterReview(currentQuestion.value, performance);\r\n  \r\n  reviewResults.value.push({\r\n    questionId: currentQuestion.value.id,\r\n    question: currentQuestion.value.text,\r\n    userAnswer: answer,\r\n    correct: performance === 1,\r\n    nextReview: updatedQuestion.spacedRepetition.nextReviewDate,\r\n    spacedRepetition: updatedQuestion.spacedRepetition\r\n  });\r\n}\r\n\r\nfunction moveToNext() {\r\n  if (isLastQuestion.value) {\r\n    emit('session-complete', reviewResults.value);\r\n  } else {\r\n    currentIndex.value++;\r\n    showAnswer.value = false;\r\n    selectedAnswer.value = null;\r\n  }\r\n}\r\n\r\nfunction formatNextReview(date) {\r\n  const days = Math.round((new Date(date) - new Date()) / (1000 * 60 * 60 * 24));\r\n  return days === 1 ? 'tomorrow' : `${days} days`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.spaced-review-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.review-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.progress-info {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.progress-bar {\r\n  height: 8px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 4px;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background-color: #4CAF50;\r\n  border-radius: 4px;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.options, .true-false-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.option-btn, .tf-btn {\r\n  padding: 1rem;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background: white;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  text-align: left;\r\n}\r\n\r\n.option-btn:hover, .tf-btn:hover {\r\n  border-color: #2196F3;\r\n}\r\n\r\n.selected {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border-color: #4CAF50;\r\n}\r\n\r\n.incorrect {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border-color: #f44336;\r\n}\r\n\r\n.answer-feedback {\r\n  margin-top: 2rem;\r\n  padding-top: 2rem;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.feedback-header {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.feedback-header.correct {\r\n  color: #4CAF50;\r\n}\r\n\r\n.feedback-header.incorrect {\r\n  color: #f44336;\r\n}\r\n\r\n.next-review-info {\r\n  margin: 1rem 0;\r\n  color: #666;\r\n}\r\n\r\n.explanation {\r\n  background: #f5f5f5;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.next-btn, .finish-btn {\r\n  background: #2196F3;\r\n  color: white;\r\n  padding: 1rem 2rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.next-btn:hover, .finish-btn:hover {\r\n  background: #1976D2;\r\n}\r\n\r\n.session-complete {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.session-stats {\r\n  margin: 2rem 0;\r\n  font-size: 1.2rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}