{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"quiz-results\"\n};\nvar _hoisted_2 = {\n  \"class\": \"score-display\"\n};\nvar _hoisted_3 = {\n  \"class\": \"score-value\"\n};\nvar _hoisted_4 = {\n  \"class\": \"score-number\"\n};\nvar _hoisted_5 = {\n  \"class\": \"total-questions\"\n};\nvar _hoisted_6 = {\n  \"class\": \"score-percentage\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"prediction-message\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"prediction-comparison\"\n};\nvar _hoisted_9 = {\n  \"class\": \"questions-review\"\n};\nvar _hoisted_10 = {\n  \"class\": \"question-header\"\n};\nvar _hoisted_11 = {\n  \"class\": \"question-text\"\n};\nvar _hoisted_12 = {\n  \"class\": \"answers-container\"\n};\nvar _hoisted_13 = {\n  \"class\": \"answer-box\"\n};\nvar _hoisted_14 = {\n  \"class\": \"answer-box\"\n};\nvar _hoisted_15 = {\n  \"class\": \"answer-content correct\"\n};\nvar _hoisted_16 = {\n  key: 0,\n  \"class\": \"explanation\"\n};\nvar _hoisted_17 = {\n  \"class\": \"explanation-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Quiz Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.score), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    \"class\": \"score-separator\"\n  }, \"/\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.totalQuestions), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, \"(\" + _toDisplayString($setup.scorePercentage) + \"%)\", 1 /* TEXT */)]), $props.predictedScore !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"You scored \" + _toDisplayString($setup.scorePercentage) + \"%. Predicted score was \" + _toDisplayString($props.predictedScore) + \"%.\", 1 /* TEXT */), $setup.scorePercentage > $props.predictedScore ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Excellent! You surpassed the prediction! \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, function (question, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"question-item\"\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"h3\", null, \"Question \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"status-indicator\", question.isCorrect ? 'correct' : 'incorrect'])\n    }, _toDisplayString(question.isCorrect ? '✓' : 'X'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"p\", _hoisted_11, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n      \"class\": \"answer-label\"\n    }, \"YOUR ANSWER:\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"answer-content\", {\n        'incorrect': !question.isCorrect\n      }])\n    }, _toDisplayString($setup.formatAnswer(question.userAnswer, question)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_14, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n      \"class\": \"answer-label\"\n    }, \"CORRECT ANSWER:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($setup.formatAnswer(question.correctAnswer, question)), 1 /* TEXT */)])]), question.explanation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      \"class\": \"explanation-label\"\n    }, \"EXPLANATION:\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_17, _toDisplayString(question.explanation), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$props","score","_hoisted_5","$setup","totalQuestions","_hoisted_6","scorePercentage","predictedScore","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","questions","question","index","key","_hoisted_10","_normalizeClass","isCorrect","_hoisted_11","text","_hoisted_12","_hoisted_13","formatAnswer","userAnswer","_hoisted_14","_hoisted_15","correctAnswer","explanation","_hoisted_16","_hoisted_17"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h1>Quiz Complete!</h1>\r\n    \r\n    <div class=\"score-display\">\r\n      <div class=\"score-value\">\r\n        <span class=\"score-number\">{{ score }}</span>\r\n        <span class=\"score-separator\">/</span>\r\n        <span class=\"total-questions\">{{ totalQuestions }}</span>\r\n      </div>\r\n      <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\r\n    </div>\r\n\r\n    <div class=\"prediction-message\" v-if=\"predictedScore !== null\">\r\n      <p>You scored {{ scorePercentage }}%. Predicted score was {{ predictedScore }}%.</p>\r\n      <p class=\"prediction-comparison\" v-if=\"scorePercentage > predictedScore\">\r\n        Excellent! You surpassed the prediction!\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"questions-review\">\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"question-item\">\r\n        <div class=\"question-header\">\r\n          <h3>Question {{ index + 1 }}</h3>\r\n          <div class=\"status-indicator\" :class=\"question.isCorrect ? 'correct' : 'incorrect'\">\r\n            {{ question.isCorrect ? '✓' : 'X' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        \r\n        <div class=\"answers-container\">\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">YOUR ANSWER:</div>\r\n            <div class=\"answer-content\" :class=\"{ 'incorrect': !question.isCorrect }\">\r\n              {{ formatAnswer(question.userAnswer, question) }}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"answer-box\">\r\n            <div class=\"answer-label\">CORRECT ANSWER:</div>\r\n            <div class=\"answer-content correct\">\r\n              {{ formatAnswer(question.correctAnswer, question) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"explanation\" v-if=\"question.explanation\">\r\n          <div class=\"explanation-label\">EXPLANATION:</div>\r\n          <p class=\"explanation-text\">{{ question.explanation }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\n\r\nfunction formatAnswer(answer, question) {\r\n  if (question.type === 'multiple-choice') {\r\n    return `${answer}) ${question.options[answer]}`;\r\n  }\r\n  return answer;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 600px;\r\n  margin: 2rem auto;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\nh1 {\r\n  font-size: 1.75rem;\r\n  margin-bottom: 1.5rem;\r\n  color: #000;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-display {\r\n  background-color: #ffebee;\r\n  border: 1px solid #ef9a9a;\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-value {\r\n  font-size: 2.5rem;\r\n  font-weight: 600;\r\n  color: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.score-separator {\r\n  color: #757575;\r\n  margin: 0 0.1rem;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.5rem;\r\n  color: #757575;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.prediction-message {\r\n  background-color: #f5f5f5;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin-bottom: 1.5rem;\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.prediction-comparison {\r\n  color: #4caf50;\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.question-item {\r\n  background: white;\r\n  border-radius: 8px;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-header h3 {\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\n.status-indicator {\r\n  width: 1.75rem;\r\n  height: 1.75rem;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.status-indicator.correct {\r\n  background-color: #e8f5e9;\r\n  color: #4caf50;\r\n}\r\n\r\n.status-indicator.incorrect {\r\n  background-color: #ffebee;\r\n  color: #ef5350;\r\n}\r\n\r\n.question-text {\r\n  padding: 1rem;\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 0.95rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.answers-container {\r\n  padding: 0.75rem 1rem;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1rem;\r\n}\r\n\r\n.answer-box {\r\n  background: #fafafa;\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.answer-label {\r\n  font-size: 0.75rem;\r\n  color: #757575;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.answer-content {\r\n  color: #333;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-content.incorrect {\r\n  color: #ef5350;\r\n}\r\n\r\n.answer-content.correct {\r\n  color: #4caf50;\r\n}\r\n\r\n.explanation {\r\n  padding: 0.75rem 1rem;\r\n  background-color: #fff;\r\n  margin: 0.5rem 1rem 1rem;\r\n  border-radius: 4px;\r\n  border-left: 3px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 500;\r\n  color: #757575;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.explanation-text {\r\n  margin: 0;\r\n  color: #333;\r\n  line-height: 1.5;\r\n  font-size: 0.9rem;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAc;;EAGlB,SAAM;AAAe;;EACnB,SAAM;AAAa;;EAChB,SAAM;AAAc;;EAEpB,SAAM;AAAiB;;EAE1B,SAAM;AAAkB;;;EAG1B,SAAM;;;;EAEN,SAAM;;;EAKN,SAAM;AAAkB;;EAEpB,SAAM;AAAiB;;EAOzB,SAAM;AAAe;;EAEnB,SAAM;AAAmB;;EACvB,SAAM;AAAY;;EAOlB,SAAM;AAAY;;EAEhB,SAAM;AAAwB;;;EAMlC,SAAM;;;EAEN,SAAM;AAAkB;;uBAhDnCA,mBAAA,CAoDM,OApDNC,UAoDM,G,0BAnDJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAElBA,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAIM,OAJNE,UAIM,GAHJF,mBAAA,CAA6C,QAA7CG,UAA6C,EAAAC,gBAAA,CAAfC,MAAA,CAAAC,KAAK,kB,0BACnCN,mBAAA,CAAsC;IAAhC,SAAM;EAAiB,GAAC,GAAC,sBAC/BA,mBAAA,CAAyD,QAAzDO,UAAyD,EAAAH,gBAAA,CAAxBI,MAAA,CAAAC,cAAc,iB,GAEjDT,mBAAA,CAA4D,OAA5DU,UAA4D,EAA9B,GAAC,GAAAN,gBAAA,CAAGI,MAAA,CAAAG,eAAe,IAAG,IAAE,gB,GAGlBN,MAAA,CAAAO,cAAc,a,cAApDd,mBAAA,CAKM,OALNe,UAKM,GAJJb,mBAAA,CAAoF,WAAjF,aAAW,GAAAI,gBAAA,CAAGI,MAAA,CAAAG,eAAe,IAAG,yBAAuB,GAAAP,gBAAA,CAAGC,MAAA,CAAAO,cAAc,IAAG,IAAE,iBACzCJ,MAAA,CAAAG,eAAe,GAAGN,MAAA,CAAAO,cAAc,I,cAAvEd,mBAAA,CAEI,KAFJgB,UAEI,EAFqE,4CAEzE,K,0EAGFd,mBAAA,CAgCM,OAhCNe,UAgCM,I,kBA/BJjB,mBAAA,CA8BMkB,SAAA,QAAAC,WAAA,CA9B2BZ,MAAA,CAAAa,SAAS,YAA7BC,QAAQ,EAAEC,KAAK;yBAA5BtB,mBAAA,CA8BM;MA9BuCuB,GAAG,EAAED,KAAK;MAAE,SAAM;QAC7DpB,mBAAA,CAKM,OALNsB,WAKM,GAJJtB,mBAAA,CAAiC,YAA7B,WAAS,GAAAI,gBAAA,CAAGgB,KAAK,sBACrBpB,mBAAA,CAEM;MAFD,SAAKuB,eAAA,EAAC,kBAAkB,EAASJ,QAAQ,CAACK,SAAS;wBACnDL,QAAQ,CAACK,SAAS,oC,GAIzBxB,mBAAA,CAAgD,KAAhDyB,WAAgD,EAAArB,gBAAA,CAApBe,QAAQ,CAACO,IAAI,kBAEzC1B,mBAAA,CAcM,OAdN2B,WAcM,GAbJ3B,mBAAA,CAKM,OALN4B,WAKM,G,0BAJJ5B,mBAAA,CAA4C;MAAvC,SAAM;IAAc,GAAC,cAAY,sBACtCA,mBAAA,CAEM;MAFD,SAAKuB,eAAA,EAAC,gBAAgB;QAAA,cAAyBJ,QAAQ,CAACK;MAAS;wBACjEhB,MAAA,CAAAqB,YAAY,CAACV,QAAQ,CAACW,UAAU,EAAEX,QAAQ,yB,GAIjDnB,mBAAA,CAKM,OALN+B,WAKM,G,0BAJJ/B,mBAAA,CAA+C;MAA1C,SAAM;IAAc,GAAC,iBAAe,sBACzCA,mBAAA,CAEM,OAFNgC,WAEM,EAAA5B,gBAAA,CADDI,MAAA,CAAAqB,YAAY,CAACV,QAAQ,CAACc,aAAa,EAAEd,QAAQ,kB,KAKvBA,QAAQ,CAACe,WAAW,I,cAAnDpC,mBAAA,CAGM,OAHNqC,WAGM,G,0BAFJnC,mBAAA,CAAiD;MAA5C,SAAM;IAAmB,GAAC,cAAY,sBAC3CA,mBAAA,CAA0D,KAA1DoC,WAA0D,EAAAhC,gBAAA,CAA3Be,QAAQ,CAACe,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}