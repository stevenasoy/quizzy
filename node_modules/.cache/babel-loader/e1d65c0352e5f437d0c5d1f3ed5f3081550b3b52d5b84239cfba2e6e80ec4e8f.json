{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'CalendarHeatmap',\n  props: {\n    activities: {\n      type: Array,\n      required: true,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var monthsData = computed(function () {\n      var today = new Date();\n      var currentYear = today.getFullYear();\n      return monthNames.map(function (monthName, monthIndex) {\n        var firstDay = new Date(currentYear, monthIndex, 1);\n        var lastDay = new Date(currentYear, monthIndex + 1, 0);\n        var daysInMonth = lastDay.getDate();\n        var startingDay = firstDay.getDay();\n\n        // Create array for all days in the month\n        var days = [];\n\n        // Add empty cells for days before the first of the month\n        for (var i = 0; i < startingDay; i++) {\n          days.push({\n            date: null\n          });\n        }\n\n        // Add all days of the month\n        var _loop = function _loop() {\n          var currentDate = new Date(currentYear, monthIndex, date);\n          var dateStr = currentDate.toISOString().split('T')[0];\n          var activity = props.activities.find(function (a) {\n            return a.date === dateStr;\n          });\n          days.push({\n            date: currentDate,\n            count: activity ? activity.count : 0\n          });\n        };\n        for (var date = 1; date <= daysInMonth; date++) {\n          _loop();\n        }\n\n        // Add empty cells to complete the last week if needed\n        var remainingCells = (7 - days.length % 7) % 7;\n        for (var _i = 0; _i < remainingCells; _i++) {\n          days.push({\n            date: null\n          });\n        }\n        return {\n          name: monthName,\n          days: days\n        };\n      });\n    });\n    var getDayClass = function getDayClass(day) {\n      if (!day.date) return '';\n      var classes = ['has-activity'];\n      if (day.count > 0) {\n        if (day.count <= 2) classes.push('activity-low');else if (day.count <= 5) classes.push('activity-medium');else classes.push('activity-high');\n      }\n\n      // Add today class if it's today\n      var today = new Date();\n      if (day.date.toDateString() === today.toDateString()) {\n        classes.push('today');\n      }\n      return classes;\n    };\n    var getDayTooltip = function getDayTooltip(day) {\n      if (!day.date) return '';\n      var dateStr = day.date.toLocaleDateString();\n      return day.count > 0 ? \"\".concat(dateStr, \": \").concat(day.count, \" activities\") : dateStr;\n    };\n    var __returned__ = {\n      props: props,\n      weekdays: weekdays,\n      monthNames: monthNames,\n      monthsData: monthsData,\n      getDayClass: getDayClass,\n      getDayTooltip: getDayTooltip,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","weekdays","monthNames","monthsData","today","Date","currentYear","getFullYear","map","monthName","monthIndex","firstDay","lastDay","daysInMonth","getDate","startingDay","getDay","days","i","push","date","_loop","currentDate","dateStr","toISOString","split","activity","activities","find","a","count","remainingCells","length","name","getDayClass","day","classes","toDateString","getDayTooltip","toLocaleDateString","concat"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/CalendarHeatmap.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-container\">\r\n    <div class=\"year-view\">\r\n      <div v-for=\"(month, index) in monthsData\" :key=\"index\" class=\"month-card\">\r\n        <h3 class=\"month-title\">{{ month.name }}</h3>\r\n        <div class=\"month-grid\">\r\n          <div class=\"weekday-labels\">\r\n            <span v-for=\"day in weekdays\" :key=\"day\" class=\"weekday\">{{ day }}</span>\r\n          </div>\r\n          <div class=\"days-grid\">\r\n            <div v-for=\"(day, dayIndex) in month.days\" \r\n              :key=\"dayIndex\" \r\n              class=\"day-cell\"\r\n              :class=\"[\r\n                getDayClass(day),\r\n                { 'empty': !day.date }\r\n              ]\"\r\n              :title=\"getDayTooltip(day)\"\r\n            >\r\n              {{ day.date ? day.date.getDate() : '' }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  activities: {\r\n    type: Array,\r\n    required: true,\r\n    default: () => []\r\n  }\r\n});\r\n\r\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthNames = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst monthsData = computed(() => {\r\n  const today = new Date();\r\n  const currentYear = today.getFullYear();\r\n  \r\n  return monthNames.map((monthName, monthIndex) => {\r\n    const firstDay = new Date(currentYear, monthIndex, 1);\r\n    const lastDay = new Date(currentYear, monthIndex + 1, 0);\r\n    const daysInMonth = lastDay.getDate();\r\n    const startingDay = firstDay.getDay();\r\n    \r\n    // Create array for all days in the month\r\n    const days = [];\r\n    \r\n    // Add empty cells for days before the first of the month\r\n    for (let i = 0; i < startingDay; i++) {\r\n      days.push({ date: null });\r\n    }\r\n    \r\n    // Add all days of the month\r\n    for (let date = 1; date <= daysInMonth; date++) {\r\n      const currentDate = new Date(currentYear, monthIndex, date);\r\n      const dateStr = currentDate.toISOString().split('T')[0];\r\n      const activity = props.activities.find(a => a.date === dateStr);\r\n      \r\n      days.push({\r\n        date: currentDate,\r\n        count: activity ? activity.count : 0\r\n      });\r\n    }\r\n    \r\n    // Add empty cells to complete the last week if needed\r\n    const remainingCells = (7 - ((days.length) % 7)) % 7;\r\n    for (let i = 0; i < remainingCells; i++) {\r\n      days.push({ date: null });\r\n    }\r\n    \r\n    return {\r\n      name: monthName,\r\n      days\r\n    };\r\n  });\r\n});\r\n\r\nconst getDayClass = (day) => {\r\n  if (!day.date) return '';\r\n  \r\n  const classes = ['has-activity'];\r\n  if (day.count > 0) {\r\n    if (day.count <= 2) classes.push('activity-low');\r\n    else if (day.count <= 5) classes.push('activity-medium');\r\n    else classes.push('activity-high');\r\n  }\r\n  \r\n  // Add today class if it's today\r\n  const today = new Date();\r\n  if (day.date.toDateString() === today.toDateString()) {\r\n    classes.push('today');\r\n  }\r\n  \r\n  return classes;\r\n};\r\n\r\nconst getDayTooltip = (day) => {\r\n  if (!day.date) return '';\r\n  const dateStr = day.date.toLocaleDateString();\r\n  return day.count > 0\r\n    ? `${dateStr}: ${day.count} activities`\r\n    : dateStr;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-container {\r\n  padding: 1rem;\r\n}\r\n\r\n.year-view {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.month-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.month-title {\r\n  margin: 0 0 1rem;\r\n  color: #333;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n}\r\n\r\n.month-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.weekday-labels {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.weekday {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  text-align: center;\r\n}\r\n\r\n.days-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 2px;\r\n}\r\n\r\n.day-cell {\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  background: #f5f5f5;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.day-cell:hover {\r\n  transform: scale(1.1);\r\n  z-index: 1;\r\n}\r\n\r\n.day-cell.empty {\r\n  background: transparent;\r\n  cursor: default;\r\n}\r\n\r\n.day-cell.empty:hover {\r\n  transform: none;\r\n}\r\n\r\n.day-cell.has-activity {\r\n  color: white;\r\n}\r\n\r\n.day-cell.activity-low {\r\n  background-color: #7ec98d;\r\n}\r\n\r\n.day-cell.activity-medium {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.day-cell.activity-high {\r\n  background-color: #2E7D32;\r\n}\r\n\r\n.day-cell.today {\r\n  border: 2px solid #2196F3;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .year-view {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}