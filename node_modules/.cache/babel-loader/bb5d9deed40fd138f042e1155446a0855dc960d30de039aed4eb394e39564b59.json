{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref } from 'vue';\nimport { useAuth } from './useAuth';\nimport { supabase } from '../lib/supabase';\nexport function useQuizHistory() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var temporaryHistory = ref([]);\n  var saveQuiz = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(quizData) {\n      var _yield$supabase$from$, data, error, newQuiz;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (!user.value) {\n              _context.next = 12;\n              break;\n            }\n            _context.next = 4;\n            return supabase.from('quiz_history').insert([_objectSpread(_objectSpread({}, quizData), {}, {\n              user_id: user.value.id,\n              created_at: new Date().toISOString()\n            })]).select();\n          case 4:\n            _yield$supabase$from$ = _context.sent;\n            data = _yield$supabase$from$.data;\n            error = _yield$supabase$from$.error;\n            if (!error) {\n              _context.next = 9;\n              break;\n            }\n            throw error;\n          case 9:\n            return _context.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 12:\n            // Save to temporary storage if not logged in\n            newQuiz = _objectSpread(_objectSpread({}, quizData), {}, {\n              id: Date.now(),\n              // temporary ID\n              created_at: new Date().toISOString()\n            });\n            temporaryHistory.value.push(newQuiz);\n            return _context.abrupt(\"return\", {\n              data: [newQuiz],\n              error: null\n            });\n          case 15:\n            _context.next = 21;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error saving quiz:', _context.t0);\n            return _context.abrupt(\"return\", {\n              data: null,\n              error: _context.t0\n            });\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n    return function saveQuiz(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchQuizzes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _yield$supabase$from$2, data, error;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            if (user.value) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\", {\n              data: temporaryHistory.value,\n              error: null\n            });\n          case 3:\n            _context2.next = 5;\n            return supabase.from('quiz_history').select('*').eq('user_id', user.value.id).order('created_at', {\n              ascending: false\n            });\n          case 5:\n            _yield$supabase$from$2 = _context2.sent;\n            data = _yield$supabase$from$2.data;\n            error = _yield$supabase$from$2.error;\n            if (!error) {\n              _context2.next = 10;\n              break;\n            }\n            throw error;\n          case 10:\n            return _context2.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error fetching quizzes:', _context2.t0);\n            return _context2.abrupt(\"return\", {\n              data: null,\n              error: _context2.t0\n            });\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 13]]);\n    }));\n    return function fetchQuizzes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var migrateTemporaryHistory = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var quizzesToMigrate, _yield$supabase$from$3, error;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(!user.value || temporaryHistory.value.length === 0)) {\n              _context3.next = 2;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 2:\n            _context3.prev = 2;\n            quizzesToMigrate = temporaryHistory.value.map(function (quiz) {\n              return _objectSpread(_objectSpread({}, quiz), {}, {\n                user_id: user.value.id\n              });\n            });\n            _context3.next = 6;\n            return supabase.from('quiz_history').insert(quizzesToMigrate);\n          case 6:\n            _yield$supabase$from$3 = _context3.sent;\n            error = _yield$supabase$from$3.error;\n            if (!error) {\n              _context3.next = 10;\n              break;\n            }\n            throw error;\n          case 10:\n            // Clear temporary history after successful migration\n            temporaryHistory.value = [];\n            return _context3.abrupt(\"return\", {\n              success: true,\n              error: null\n            });\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.error('Error migrating quiz history:', _context3.t0);\n            return _context3.abrupt(\"return\", {\n              success: false,\n              error: _context3.t0\n            });\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2, 14]]);\n    }));\n    return function migrateTemporaryHistory() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var clearHistory = function clearHistory() {\n    temporaryHistory.value = [];\n  };\n  return {\n    temporaryHistory: temporaryHistory,\n    saveQuiz: saveQuiz,\n    fetchQuizzes: fetchQuizzes,\n    migrateTemporaryHistory: migrateTemporaryHistory,\n    clearHistory: clearHistory\n  };\n}","map":{"version":3,"names":["ref","useAuth","supabase","useQuizHistory","_useAuth","user","temporaryHistory","saveQuiz","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","quizData","_yield$supabase$from$","data","error","newQuiz","wrap","_callee$","_context","prev","next","value","from","insert","_objectSpread","user_id","id","created_at","Date","toISOString","select","sent","abrupt","now","push","t0","console","stop","_x","apply","arguments","fetchQuizzes","_ref2","_callee2","_yield$supabase$from$2","_callee2$","_context2","eq","order","ascending","migrateTemporaryHistory","_ref3","_callee3","quizzesToMigrate","_yield$supabase$from$3","_callee3$","_context3","length","map","quiz","success","clearHistory"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/composables/useQuizHistory.js"],"sourcesContent":["import { ref } from 'vue';\r\nimport { useAuth } from './useAuth';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport function useQuizHistory() {\r\n  const { user } = useAuth();\r\n  const temporaryHistory = ref([]);\r\n\r\n  const saveQuiz = async (quizData) => {\r\n    try {\r\n      if (user.value) {\r\n        // Save to Supabase if user is logged in\r\n        const { data, error } = await supabase\r\n          .from('quiz_history')\r\n          .insert([{\r\n            ...quizData,\r\n            user_id: user.value.id,\r\n            created_at: new Date().toISOString()\r\n          }])\r\n          .select();\r\n\r\n        if (error) throw error;\r\n        return { data, error: null };\r\n      } else {\r\n        // Save to temporary storage if not logged in\r\n        const newQuiz = {\r\n          ...quizData,\r\n          id: Date.now(), // temporary ID\r\n          created_at: new Date().toISOString()\r\n        };\r\n        temporaryHistory.value.push(newQuiz);\r\n        return { data: [newQuiz], error: null };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving quiz:', error);\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const fetchQuizzes = async () => {\r\n    try {\r\n      if (!user.value) {\r\n        return { data: temporaryHistory.value, error: null };\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('quiz_history')\r\n        .select('*')\r\n        .eq('user_id', user.value.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Error fetching quizzes:', error);\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const migrateTemporaryHistory = async () => {\r\n    if (!user.value || temporaryHistory.value.length === 0) return;\r\n\r\n    try {\r\n      const quizzesToMigrate = temporaryHistory.value.map(quiz => ({\r\n        ...quiz,\r\n        user_id: user.value.id\r\n      }));\r\n\r\n      const { error } = await supabase\r\n        .from('quiz_history')\r\n        .insert(quizzesToMigrate);\r\n\r\n      if (error) throw error;\r\n\r\n      // Clear temporary history after successful migration\r\n      temporaryHistory.value = [];\r\n      return { success: true, error: null };\r\n    } catch (error) {\r\n      console.error('Error migrating quiz history:', error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    temporaryHistory.value = [];\r\n  };\r\n\r\n  return {\r\n    temporaryHistory,\r\n    saveQuiz,\r\n    fetchQuizzes,\r\n    migrateTemporaryHistory,\r\n    clearHistory\r\n  };\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}