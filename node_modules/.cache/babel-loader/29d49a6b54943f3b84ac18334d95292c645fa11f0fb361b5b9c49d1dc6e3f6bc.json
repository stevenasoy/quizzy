{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'StudyStats',\n  props: {\n    quizHistory: {\n      type: Array,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var timeRanges = ['Week', 'Month', 'Year'];\n    var selectedRange = ref('Month');\n\n    // Calculate calendar days\n    var calendarDays = computed(function () {\n      var days = [];\n      var endDate = new Date();\n      var startDate = new Date();\n\n      // Set start date based on selected range\n      switch (selectedRange.value) {\n        case 'Week':\n          startDate.setDate(endDate.getDate() - 7);\n          break;\n        case 'Year':\n          startDate.setDate(endDate.getDate() - 365);\n          break;\n        default:\n          // Month\n          startDate.setDate(endDate.getDate() - 30);\n      }\n\n      // Create array of days with review counts\n      var currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        var dayReviews = props.quizHistory.filter(function (quiz) {\n          var quizDate = new Date(quiz.date);\n          return quizDate.toDateString() === currentDate.toDateString();\n        });\n        days.push({\n          date: new Date(currentDate),\n          reviewCount: dayReviews.reduce(function (total, quiz) {\n            return total + quiz.questions.length;\n          }, 0),\n          accuracy: dayReviews.length ? dayReviews.reduce(function (total, quiz) {\n            return total + quiz.actualScore;\n          }, 0) / dayReviews.length : 0\n        });\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      return days;\n    });\n\n    // Calculate stats\n    var totalReviews = computed(function () {\n      return props.quizHistory.reduce(function (total, quiz) {\n        return total + quiz.questions.length;\n      }, 0);\n    });\n    var currentStreak = computed(function () {\n      var streak = 0;\n      for (var i = calendarDays.value.length - 1; i >= 0; i--) {\n        var day = calendarDays.value[i];\n        if (day.reviewCount === 0) break;\n        streak++;\n      }\n      return streak;\n    });\n    var averageAccuracy = computed(function () {\n      if (!props.quizHistory.length) return 0;\n      var accuracy = props.quizHistory.reduce(function (total, quiz) {\n        return total + quiz.actualScore;\n      }, 0);\n      return Math.round(accuracy / props.quizHistory.length);\n    });\n    var cardsToReview = computed(function () {\n      return props.quizHistory.reduce(function (total, quiz) {\n        var dueCards = quiz.questions.filter(function (q) {\n          var _q$spacedRepetition;\n          if (!((_q$spacedRepetition = q.spacedRepetition) !== null && _q$spacedRepetition !== void 0 && _q$spacedRepetition.nextReviewDate)) return false;\n          return new Date(q.spacedRepetition.nextReviewDate) <= new Date();\n        });\n        return total + dueCards.length;\n      }, 0);\n    });\n\n    // Calculate next week's review forecast\n    var nextWeekForecast = computed(function () {\n      var forecast = [];\n      var today = new Date();\n      var _loop = function _loop() {\n        var forecastDate = new Date(today);\n        forecastDate.setDate(today.getDate() + i);\n        var dueCards = props.quizHistory.reduce(function (total, quiz) {\n          var dueThatDay = quiz.questions.filter(function (q) {\n            var _q$spacedRepetition2;\n            if (!((_q$spacedRepetition2 = q.spacedRepetition) !== null && _q$spacedRepetition2 !== void 0 && _q$spacedRepetition2.nextReviewDate)) return false;\n            var reviewDate = new Date(q.spacedRepetition.nextReviewDate);\n            return reviewDate.toDateString() === forecastDate.toDateString();\n          });\n          return total + dueThatDay.length;\n        }, 0);\n        forecast.push({\n          date: forecastDate.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric'\n          }),\n          count: dueCards\n        });\n      };\n      for (var i = 0; i < 7; i++) {\n        _loop();\n      }\n      return forecast;\n    });\n\n    // Helper functions\n    function getDayClass(day) {\n      if (day.reviewCount === 0) return 'level-0';\n      if (day.reviewCount <= 5) return 'level-1';\n      if (day.reviewCount <= 10) return 'level-2';\n      return 'level-3';\n    }\n    function getDayTooltip(day) {\n      var date = day.date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      });\n      return \"\".concat(date, \"\\nReviews: \").concat(day.reviewCount, \"\\nAccuracy: \").concat(Math.round(day.accuracy), \"%\");\n    }\n    var __returned__ = {\n      props: props,\n      timeRanges: timeRanges,\n      selectedRange: selectedRange,\n      calendarDays: calendarDays,\n      totalReviews: totalReviews,\n      currentStreak: currentStreak,\n      averageAccuracy: averageAccuracy,\n      cardsToReview: cardsToReview,\n      nextWeekForecast: nextWeekForecast,\n      getDayClass: getDayClass,\n      getDayTooltip: getDayTooltip,\n      ref: ref,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","timeRanges","selectedRange","calendarDays","days","endDate","Date","startDate","value","setDate","getDate","currentDate","dayReviews","quizHistory","filter","quiz","quizDate","date","toDateString","push","reviewCount","reduce","total","questions","length","accuracy","actualScore","totalReviews","currentStreak","streak","i","day","averageAccuracy","Math","round","cardsToReview","dueCards","q","_q$spacedRepetition","spacedRepetition","nextReviewDate","nextWeekForecast","forecast","today","_loop","forecastDate","dueThatDay","_q$spacedRepetition2","reviewDate","toLocaleDateString","weekday","month","count","getDayClass","getDayTooltip","concat"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/StudyStats.vue"],"sourcesContent":["<template>\r\n  <div class=\"study-stats-container\">\r\n    <div class=\"stats-header\">\r\n      <h2>Study Progress</h2>\r\n      <div class=\"time-range-selector\">\r\n        <button \r\n          v-for=\"range in timeRanges\" \r\n          :key=\"range\"\r\n          :class=\"['range-btn', { active: selectedRange === range }]\"\r\n          @click=\"selectedRange = range\"\r\n        >\r\n          {{ range }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"stats-grid\">\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ totalReviews }}</div>\r\n        <div class=\"stat-label\">Total Reviews</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ currentStreak }}</div>\r\n        <div class=\"stat-label\">Day Streak</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ averageAccuracy }}%</div>\r\n        <div class=\"stat-label\">Average Accuracy</div>\r\n      </div>\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-value\">{{ cardsToReview }}</div>\r\n        <div class=\"stat-label\">Due Today</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"calendar-section\">\r\n      <h3>Study Calendar</h3>\r\n      <div class=\"calendar-grid\">\r\n        <div \r\n          v-for=\"(day, index) in calendarDays\" \r\n          :key=\"index\"\r\n          class=\"calendar-day\"\r\n          :class=\"[\r\n            getDayClass(day),\r\n            { 'has-reviews': day.reviewCount > 0 }\r\n          ]\"\r\n          :title=\"getDayTooltip(day)\"\r\n        >\r\n        </div>\r\n      </div>\r\n      <div class=\"calendar-legend\">\r\n        <div class=\"legend-item\">\r\n          <div class=\"legend-color level-0\"></div>\r\n          <span>No activity</span>\r\n        </div>\r\n        <div class=\"legend-item\">\r\n          <div class=\"legend-color level-1\"></div>\r\n          <span>1-5 reviews</span>\r\n        </div>\r\n        <div class=\"legend-item\">\r\n          <div class=\"legend-color level-2\"></div>\r\n          <span>6-10 reviews</span>\r\n        </div>\r\n        <div class=\"legend-item\">\r\n          <div class=\"legend-color level-3\"></div>\r\n          <span>>10 reviews</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"review-forecast\">\r\n      <h3>Review Forecast</h3>\r\n      <div class=\"forecast-grid\">\r\n        <div \r\n          v-for=\"(forecast, index) in nextWeekForecast\" \r\n          :key=\"index\"\r\n          class=\"forecast-day\"\r\n        >\r\n          <div class=\"forecast-date\">{{ forecast.date }}</div>\r\n          <div class=\"forecast-count\">{{ forecast.count }} cards</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  quizHistory: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst timeRanges = ['Week', 'Month', 'Year'];\r\nconst selectedRange = ref('Month');\r\n\r\n// Calculate calendar days\r\nconst calendarDays = computed(() => {\r\n  const days = [];\r\n  const endDate = new Date();\r\n  const startDate = new Date();\r\n  \r\n  // Set start date based on selected range\r\n  switch (selectedRange.value) {\r\n    case 'Week':\r\n      startDate.setDate(endDate.getDate() - 7);\r\n      break;\r\n    case 'Year':\r\n      startDate.setDate(endDate.getDate() - 365);\r\n      break;\r\n    default: // Month\r\n      startDate.setDate(endDate.getDate() - 30);\r\n  }\r\n\r\n  // Create array of days with review counts\r\n  let currentDate = new Date(startDate);\r\n  while (currentDate <= endDate) {\r\n    const dayReviews = props.quizHistory.filter(quiz => {\r\n      const quizDate = new Date(quiz.date);\r\n      return quizDate.toDateString() === currentDate.toDateString();\r\n    });\r\n\r\n    days.push({\r\n      date: new Date(currentDate),\r\n      reviewCount: dayReviews.reduce((total, quiz) => total + quiz.questions.length, 0),\r\n      accuracy: dayReviews.length ? \r\n        dayReviews.reduce((total, quiz) => total + quiz.actualScore, 0) / dayReviews.length : \r\n        0\r\n    });\r\n\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n\r\n  return days;\r\n});\r\n\r\n// Calculate stats\r\nconst totalReviews = computed(() => {\r\n  return props.quizHistory.reduce((total, quiz) => total + quiz.questions.length, 0);\r\n});\r\n\r\nconst currentStreak = computed(() => {\r\n  let streak = 0;\r\n  for (let i = calendarDays.value.length - 1; i >= 0; i--) {\r\n    const day = calendarDays.value[i];\r\n    if (day.reviewCount === 0) break;\r\n    streak++;\r\n  }\r\n  \r\n  return streak;\r\n});\r\n\r\nconst averageAccuracy = computed(() => {\r\n  if (!props.quizHistory.length) return 0;\r\n  const accuracy = props.quizHistory.reduce((total, quiz) => total + quiz.actualScore, 0);\r\n  return Math.round(accuracy / props.quizHistory.length);\r\n});\r\n\r\nconst cardsToReview = computed(() => {\r\n  return props.quizHistory.reduce((total, quiz) => {\r\n    const dueCards = quiz.questions.filter(q => {\r\n      if (!q.spacedRepetition?.nextReviewDate) return false;\r\n      return new Date(q.spacedRepetition.nextReviewDate) <= new Date();\r\n    });\r\n    return total + dueCards.length;\r\n  }, 0);\r\n});\r\n\r\n// Calculate next week's review forecast\r\nconst nextWeekForecast = computed(() => {\r\n  const forecast = [];\r\n  const today = new Date();\r\n  \r\n  for (let i = 0; i < 7; i++) {\r\n    const forecastDate = new Date(today);\r\n    forecastDate.setDate(today.getDate() + i);\r\n    \r\n    const dueCards = props.quizHistory.reduce((total, quiz) => {\r\n      const dueThatDay = quiz.questions.filter(q => {\r\n        if (!q.spacedRepetition?.nextReviewDate) return false;\r\n        const reviewDate = new Date(q.spacedRepetition.nextReviewDate);\r\n        return reviewDate.toDateString() === forecastDate.toDateString();\r\n      });\r\n      return total + dueThatDay.length;\r\n    }, 0);\r\n\r\n    forecast.push({\r\n      date: forecastDate.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' }),\r\n      count: dueCards\r\n    });\r\n  }\r\n\r\n  return forecast;\r\n});\r\n\r\n// Helper functions\r\nfunction getDayClass(day) {\r\n  if (day.reviewCount === 0) return 'level-0';\r\n  if (day.reviewCount <= 5) return 'level-1';\r\n  if (day.reviewCount <= 10) return 'level-2';\r\n  return 'level-3';\r\n}\r\n\r\nfunction getDayTooltip(day) {\r\n  const date = day.date.toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });\r\n  return `${date}\\nReviews: ${day.reviewCount}\\nAccuracy: ${Math.round(day.accuracy)}%`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.study-stats-container {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.stats-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.time-range-selector {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.range-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 20px;\r\n  background: white;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.range-btn.active {\r\n  background: #2196F3;\r\n  color: white;\r\n  border-color: #2196F3;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n}\r\n\r\n.calendar-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.calendar-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n  gap: 4px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.calendar-day {\r\n  aspect-ratio: 1;\r\n  border-radius: 4px;\r\n  background: #f0f0f0;\r\n}\r\n\r\n.calendar-day.level-0 { background: #ebedf0; }\r\n.calendar-day.level-1 { background: #9be9a8; }\r\n.calendar-day.level-2 { background: #40c463; }\r\n.calendar-day.level-3 { background: #2ea44f; }\r\n\r\n.calendar-legend {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.legend-color {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.legend-color.level-0 { background: #ebedf0; }\r\n.legend-color.level-1 { background: #9be9a8; }\r\n.legend-color.level-2 { background: #40c463; }\r\n.legend-color.level-3 { background: #2ea44f; }\r\n\r\n.review-forecast {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.forecast-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.forecast-day {\r\n  background: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.forecast-date {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.forecast-count {\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}