{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-results\"\n};\nconst _hoisted_2 = {\n  class: \"score-container\"\n};\nconst _hoisted_3 = {\n  class: \"score-main\"\n};\nconst _hoisted_4 = {\n  class: \"score-value\"\n};\nconst _hoisted_5 = {\n  class: \"score-total\"\n};\nconst _hoisted_6 = {\n  class: \"score-percentage\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"score-comparison\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"comparison-text success\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"comparison-text neutral\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"comparison-text warning\"\n};\nconst _hoisted_11 = {\n  class: \"detailed-results\"\n};\nconst _hoisted_12 = {\n  class: \"question-header\"\n};\nconst _hoisted_13 = {\n  class: \"question-number\"\n};\nconst _hoisted_14 = {\n  class: \"question-text\"\n};\nconst _hoisted_15 = {\n  class: \"answer-row\"\n};\nconst _hoisted_16 = {\n  class: \"user-answer\"\n};\nconst _hoisted_17 = {\n  class: \"correct-answer\"\n};\nconst _hoisted_18 = {\n  class: \"correct-text\"\n};\nconst _hoisted_19 = {\n  class: \"explanation-text\"\n};\nconst _hoisted_20 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Quiz Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"score-display\", $setup.scoreClass])\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.score), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"score-separator\"\n  }, \"/\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.totalQuestions), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, \"(\" + _toDisplayString($setup.scorePercentage) + \"%)\", 1 /* TEXT */)])], 2 /* CLASS */), $props.predictedScore ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"You scored \" + _toDisplayString($setup.scorePercentage) + \"%. Predicted score was \" + _toDisplayString($props.predictedScore) + \"%.\", 1 /* TEXT */), $setup.scorePercentage >= $props.predictedScore + 10 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" You outperformed the prediction! Great job! \")) : $setup.scorePercentage >= $props.predictedScore - 10 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \" You were close to the prediction! \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \" You scored below the prediction. Review the material for improvement. \"))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Detailed Results\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"result-item\"\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, \"Question \" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass(['result-status', question.isCorrect ? 'correct' : 'wrong'])\n    }, _toDisplayString(question.isCorrect ? '✓' : '✗'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"p\", _hoisted_14, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"answer-details\", {\n        'incorrect': !question.isCorrect\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Your answer:\", -1 /* HOISTED */)), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'incorrect-text': !question.isCorrect\n      })\n    }, _toDisplayString($setup.formatAnswer(question, question.userAnswer)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_17, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Correct answer:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_18, _toDisplayString($setup.formatAnswer(question, question.correctAnswer)), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"explanation-box\", {\n        'correct': question.isCorrect,\n        'incorrect': !question.isCorrect\n      }])\n    }, [_cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n      class: \"explanation-label\"\n    }, \"Explanation:\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_19, _toDisplayString($setup.generateExplanation(question, question.isCorrect)), 1 /* TEXT */)], 2 /* CLASS */)], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('restart')),\n    class: \"restart-btn\"\n  }, \"Redo Quiz\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('go-back')),\n    class: \"back-btn\"\n  }, \"Back to Main\")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","scoreClass","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$props","score","_hoisted_5","totalQuestions","_hoisted_6","scorePercentage","predictedScore","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createCommentVNode","_hoisted_11","_Fragment","_renderList","questions","question","index","_hoisted_12","_hoisted_13","isCorrect","_hoisted_14","text","_hoisted_15","_hoisted_16","formatAnswer","userAnswer","_hoisted_17","_hoisted_18","correctAnswer","_hoisted_19","generateExplanation","_hoisted_20","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Complete!</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <div class=\"score-container\">\r\n        <div class=\"score-main\">\r\n          <span class=\"score-value\">{{ score }}</span>\r\n          <span class=\"score-separator\">/</span>\r\n          <span class=\"score-total\">{{ totalQuestions }}</span>\r\n        </div>\r\n        <div class=\"score-percentage\">({{ scorePercentage }}%)</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"score-comparison\" v-if=\"predictedScore\">\r\n      <p>You scored {{ scorePercentage }}%. Predicted score was {{ predictedScore }}%.</p>\r\n      <p v-if=\"scorePercentage >= predictedScore + 10\" class=\"comparison-text success\">\r\n        You outperformed the prediction! Great job!\r\n      </p>\r\n      <p v-else-if=\"scorePercentage >= predictedScore - 10\" class=\"comparison-text neutral\">\r\n        You were close to the prediction!\r\n      </p>\r\n      <p v-else class=\"comparison-text warning\">\r\n        You scored below the prediction. Review the material for improvement.\r\n      </p>\r\n    </div>\r\n    \r\n    <div class=\"detailed-results\">\r\n      <h3>Detailed Results</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"result-item\">\r\n        <div class=\"question-header\">\r\n          <span class=\"question-number\">Question {{ index + 1 }}</span>\r\n          <span :class=\"['result-status', question.isCorrect ? 'correct' : 'wrong']\">\r\n            {{ question.isCorrect ? '✓' : '✗' }}\r\n          </span>\r\n        </div>\r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        <div class=\"answer-details\" :class=\"{ 'incorrect': !question.isCorrect }\">\r\n          <div class=\"answer-row\">\r\n            <div class=\"user-answer\">\r\n              <strong>Your answer:</strong> \r\n              <span :class=\"{ 'incorrect-text': !question.isCorrect }\">\r\n                {{ formatAnswer(question, question.userAnswer) }}\r\n              </span>\r\n            </div>\r\n            <div class=\"correct-answer\">\r\n              <strong>Correct answer:</strong>\r\n              <span class=\"correct-text\">{{ formatAnswer(question, question.correctAnswer) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"explanation-box\" :class=\"{ 'correct': question.isCorrect, 'incorrect': !question.isCorrect }\">\r\n            <p class=\"explanation-label\">Explanation:</p>\r\n            <p class=\"explanation-text\">{{ generateExplanation(question, question.isCorrect) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-group\">\r\n      <button @click=\"$emit('restart')\" class=\"restart-btn\">Redo Quiz</button>\r\n      <button @click=\"$emit('go-back')\" class=\"back-btn\">Back to Main</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  predictedScore: {\r\n    type: Number,\r\n    required: false,\r\n    default: null\r\n  }\r\n});\r\n\r\ndefineEmits(['restart', 'go-back']);\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\nfunction formatAnswer(question, answer) {\r\n  if (!answer && answer !== false) return 'Not answered';\r\n  \r\n  if (question.type === 'multiple-choice') {\r\n    const optionText = question.options[answer];\r\n    return optionText ? `${answer}) ${optionText}` : answer;\r\n  } else if (question.type === 'true-false') {\r\n    // Handle both string and boolean values\r\n    const value = String(answer).toLowerCase();\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n  }\r\n  return answer;\r\n}\r\n\r\nfunction rephraseContent(text, isSupporting, question) {\r\n  // Clean the text of personal info and formatting\r\n  let cleaned = text.trim()\r\n    .replace(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi, '')\r\n    .replace(/\\+\\d{2}\\s*\\d{3}\\s*\\d{3}\\s*\\d{4}/g, '')\r\n    .replace(/\\d{4}\\s*\\+\\d{2}\\s*\\d{3}\\s*\\d{3}/g, '')\r\n    .replace(/\\d{4}\\s*\\d{4}/g, '')\r\n    .replace(/\\([^)]*\\)/g, '')\r\n    .replace(/\\[[^\\]]*\\]/g, '')\r\n    .trim();\r\n\r\n  // Analyze the question content and context\r\n  const questionLower = question.text.toLowerCase();\r\n  const correctAnswer = question.type === 'multiple-choice' \r\n    ? question.options[question.correctAnswer].toLowerCase()\r\n    : String(question.correctAnswer).toLowerCase();\r\n  const userAnswer = question.type === 'multiple-choice'\r\n    ? question.options[question.userAnswer]?.toLowerCase()\r\n    : String(question.userAnswer).toLowerCase();\r\n\r\n  // Identify key themes and concepts\r\n  const themes = {\r\n    academic: /\\b(academic|education|study|learning|course|curriculum|program)\\b/i,\r\n    administrative: /\\b(manage|administration|organize|coordinate|supervise|oversee)\\b/i,\r\n    policy: /\\b(policy|regulation|rule|guideline|requirement|standard)\\b/i,\r\n    student: /\\b(student|learner|participant|enrollment|attendance)\\b/i,\r\n    faculty: /\\b(faculty|teacher|instructor|staff|professor)\\b/i,\r\n    resource: /\\b(resource|facility|equipment|material|tool)\\b/i\r\n  };\r\n\r\n  // Determine the primary and secondary themes\r\n  const matchedThemes = Object.entries(themes)\r\n    .filter(([_, pattern]) => pattern.test(questionLower) || pattern.test(cleaned))\r\n    .map(([theme]) => theme);\r\n\r\n  // Generate theme-specific explanations\r\n  function getThemeExplanation() {\r\n    if (matchedThemes.includes('academic')) {\r\n      return isSupporting\r\n        ? \"This directly relates to academic program management and educational quality assurance.\"\r\n        : \"While this answer touches on academics, it doesn't fully address the educational oversight requirements.\";\r\n    }\r\n    if (matchedThemes.includes('administrative')) {\r\n      return isSupporting\r\n        ? \"This reflects the administrative responsibilities and organizational oversight needed.\"\r\n        : \"The administrative aspects mentioned don't fully capture the scope of management required.\";\r\n    }\r\n    if (matchedThemes.includes('policy')) {\r\n      return isSupporting\r\n        ? \"This aligns with institutional policies and regulatory requirements.\"\r\n        : \"The policy implications need to be considered more comprehensively.\";\r\n    }\r\n    if (matchedThemes.includes('student')) {\r\n      return isSupporting\r\n        ? \"This focuses on student development and support services.\"\r\n        : \"The impact on student experience and outcomes needs more consideration.\";\r\n    }\r\n    if (matchedThemes.includes('faculty')) {\r\n      return isSupporting\r\n        ? \"This involves faculty coordination and professional development aspects.\"\r\n        : \"The faculty management component requires more attention.\";\r\n    }\r\n    if (matchedThemes.includes('resource')) {\r\n      return isSupporting\r\n        ? \"This addresses resource allocation and facility management needs.\"\r\n        : \"The resource management aspects need to be more thoroughly considered.\";\r\n    }\r\n    return isSupporting\r\n      ? \"This answer correctly addresses the core requirements of the role.\"\r\n      : \"The answer needs to better align with the position's responsibilities.\";\r\n  }\r\n\r\n  // Generate context-aware explanation\r\n  let explanation = getThemeExplanation();\r\n\r\n  // Add specific details based on question type\r\n  if (question.type === 'multiple-choice') {\r\n    explanation += ` ${isSupporting \r\n      ? `The choice \"${correctAnswer}\" demonstrates understanding of ${matchedThemes.join(' and ')} aspects.`\r\n      : `The selected answer \"${userAnswer}\" overlooks key aspects of ${matchedThemes.join(' and ')}.`}`;\r\n  } else {\r\n    explanation += ` ${isSupporting\r\n      ? `This true/false assessment correctly evaluates the ${matchedThemes.join(' and ')} implications.`\r\n      : `A deeper understanding of ${matchedThemes.join(' and ')} would lead to the correct true/false evaluation.`}`;\r\n  }\r\n\r\n  // Add specific guidance from the original explanation\r\n  if (cleaned && !isSupporting) {\r\n    explanation += ` ${cleaned}`;\r\n  }\r\n\r\n  return explanation;\r\n}\r\n\r\nfunction generateExplanation(question, isCorrect) {\r\n  const explanation = question.explanation || '';\r\n  if (!explanation) return \"No explanation available.\";\r\n\r\n  if (question.type === 'multiple-choice') {\r\n    return generateMultipleChoiceExplanation(question, isCorrect);\r\n  } else {\r\n    return generateTrueFalseExplanation(question, isCorrect);\r\n  }\r\n}\r\n\r\nfunction generateMultipleChoiceExplanation(question, isCorrect) {\r\n  if (isCorrect) {\r\n    return rephraseContent(question.explanation, true, question);\r\n  }\r\n\r\n  const userOption = question.options[question.userAnswer];\r\n  const correctOption = question.options[question.correctAnswer];\r\n  \r\n  // Compare the chosen answer with the correct one to explain the difference\r\n  const explanation = `While \"${userOption}\" might seem reasonable, it's not the complete picture. ${rephraseContent(question.explanation, false, question)} The correct answer, \"${correctOption}\", better reflects the full scope of the position.`;\r\n  \r\n  return explanation;\r\n}\r\n\r\nfunction generateTrueFalseExplanation(question, isCorrect) {\r\n  if (isCorrect) {\r\n    return rephraseContent(question.explanation, true, question);\r\n  }\r\n\r\n  const userChoice = question.userAnswer ? 'true' : 'false';\r\n  const correctChoice = question.correctAnswer === 'true' ? 'true' : 'false';\r\n  \r\n  // Explain why their understanding needs adjustment\r\n  return `Your understanding needs a slight adjustment. While you marked this as ${userChoice}, ${rephraseContent(question.explanation, false, question)} This is why the statement is actually ${correctChoice}.`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n}\r\n\r\n.score-display {\r\n  margin: 2rem 0;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  font-weight: bold;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n}\r\n\r\n.score-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-main {\r\n  display: flex;\r\n  align-items: baseline;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-value {\r\n  font-size: 4rem;\r\n  line-height: 1;\r\n  font-weight: 800;\r\n}\r\n\r\n.score-separator {\r\n  font-size: 3rem;\r\n  opacity: 0.5;\r\n}\r\n\r\n.score-total {\r\n  font-size: 2.5rem;\r\n  opacity: 0.7;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  opacity: 0.9;\r\n}\r\n\r\n.score-comparison {\r\n  margin: 1.5rem 0;\r\n  padding: 1.5rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n}\r\n\r\n.comparison-text {\r\n  margin-top: 0.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.comparison-text.success {\r\n  color: #4CAF50;\r\n}\r\n\r\n.comparison-text.neutral {\r\n  color: #666;\r\n}\r\n\r\n.comparison-text.warning {\r\n  color: #f44336;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n}\r\n\r\n.result-item {\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.question-number {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.result-status {\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n.result-status.correct {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.result-status.wrong {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.question-text {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.answer-details {\r\n  background-color: #fff;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.answer-details.incorrect {\r\n  border-color: #ffcdd2;\r\n  background-color: #fff5f5;\r\n}\r\n\r\n.answer-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-answer, .correct-answer {\r\n  padding: 1rem;\r\n  background: white;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.user-answer strong, .correct-answer strong {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.incorrect-text {\r\n  color: #d32f2f;\r\n}\r\n\r\n.correct-text {\r\n  color: #2e7d32;\r\n}\r\n\r\n.explanation-box {\r\n  margin-top: 1.5rem;\r\n  padding: 1.5rem;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.explanation-box.correct {\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.explanation-box.incorrect {\r\n  border-left: 4px solid #ff9800;\r\n}\r\n\r\n.explanation-label {\r\n  font-weight: 600;\r\n  margin-bottom: 0.75rem;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.explanation-label.correct {\r\n  color: #4CAF50;\r\n}\r\n\r\n.explanation-label.incorrect {\r\n  color: #f57c00;\r\n}\r\n\r\n.explanation-text {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.button-group button {\r\n  padding: 0.8rem 2rem;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.restart-btn {\r\n  background: #4CAF50;\r\n}\r\n\r\n.restart-btn:hover {\r\n  background: #388e3c;\r\n}\r\n\r\n.back-btn {\r\n  background: #666;\r\n}\r\n\r\n.back-btn:hover {\r\n  background: #555;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}