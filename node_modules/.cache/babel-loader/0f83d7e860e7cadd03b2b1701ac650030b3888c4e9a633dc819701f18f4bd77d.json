{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-results\"\n};\nconst _hoisted_2 = {\n  class: \"score-value\"\n};\nconst _hoisted_3 = {\n  class: \"score-percentage\"\n};\nconst _hoisted_4 = {\n  class: \"detailed-results\"\n};\nconst _hoisted_5 = {\n  class: \"question-header\"\n};\nconst _hoisted_6 = {\n  class: \"question-number\"\n};\nconst _hoisted_7 = {\n  class: \"question-text\"\n};\nconst _hoisted_8 = {\n  class: \"answer-details\"\n};\nconst _hoisted_9 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Quiz Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"score-display\", $setup.scoreClass])\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"score-label\"\n  }, \"Your Score:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($props.score) + \" / \" + _toDisplayString($setup.totalQuestions), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, \"(\" + _toDisplayString($setup.scorePercentage) + \"%)\", 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Detailed Results\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.questions, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"result-item\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, \"Q\" + _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass(['result-status', $setup.normalizeLetter($props.userAnswers[index]) === $setup.normalizeLetter(question.answer) ? 'correct' : 'wrong'])\n    }, _toDisplayString($setup.normalizeLetter($props.userAnswers[index]) === $setup.normalizeLetter(question.answer) ? '✓' : '✗'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, \"Your answer: \" + _toDisplayString($props.userAnswers[index] || 'Not answered'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Correct answer: \" + _toDisplayString(question.answer), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('restart'))\n  }, \"Redo Quiz\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('go-back'))\n  }, \"Go Back to Main Screen\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","scoreClass","_hoisted_2","_toDisplayString","$props","score","totalQuestions","_hoisted_3","scorePercentage","_hoisted_4","_Fragment","_renderList","questions","question","index","key","_hoisted_5","_hoisted_6","normalizeLetter","userAnswers","answer","_hoisted_7","text","_hoisted_8","_hoisted_9","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizResults.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-results\">\r\n    <h2>Quiz Complete!</h2>\r\n    <div class=\"score-display\" :class=\"scoreClass\">\r\n      <span class=\"score-label\">Your Score:</span>\r\n      <span class=\"score-value\">{{ score }} / {{ totalQuestions }}</span>\r\n      <span class=\"score-percentage\">({{ scorePercentage }}%)</span>\r\n    </div>\r\n    \r\n    <div class=\"detailed-results\">\r\n      <h3>Detailed Results</h3>\r\n      <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"result-item\">\r\n        <div class=\"question-header\">\r\n          <span class=\"question-number\">Q{{ index + 1 }}</span>\r\n          <span :class=\"['result-status', \r\n            normalizeLetter(userAnswers[index]) === normalizeLetter(question.answer) ? 'correct' : 'wrong']\">\r\n            {{ normalizeLetter(userAnswers[index]) === normalizeLetter(question.answer) ? '✓' : '✗' }}\r\n          </span>\r\n        </div>\r\n        <p class=\"question-text\">{{ question.text }}</p>\r\n        <div class=\"answer-details\">\r\n          <p>Your answer: {{ userAnswers[index] || 'Not answered' }}</p>\r\n          <p>Correct answer: {{ question.answer }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-group\">\r\n      <button @click=\"$emit('restart')\">Redo Quiz</button>\r\n      <button @click=\"$emit('go-back')\">Go Back to Main Screen</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  userAnswers: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  score: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\ndefineEmits(['restart', 'go-back']);\r\n\r\nconst totalQuestions = computed(() => props.questions.length);\r\nconst scorePercentage = computed(() => {\r\n  return Math.round((props.score / totalQuestions.value) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'passing' : 'failing';\r\n});\r\n\r\nfunction normalizeLetter(letter) {\r\n  return String(letter).replace(/[)\\s]/g, '').toUpperCase();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-results {\r\n  max-width: 500px;\r\n  margin: 2rem auto;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  padding: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.score-display {\r\n  margin: 1.5rem 0;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.score-display.passing {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n}\r\n\r\n.score-display.failing {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n}\r\n\r\n.score-label {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.score-value {\r\n  font-size: 2rem;\r\n  margin: 0 0.5rem;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.2rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.result-item {\r\n  background: #f8f8f8;\r\n  border-radius: 8px;\r\n  padding: 0.8rem;\r\n  margin-bottom: 0.8rem;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.4rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: bold;\r\n  color: #333;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.result-status {\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.result-status.correct {\r\n  color: #27ae60;\r\n}\r\n\r\n.result-status.wrong {\r\n  color: #e74c3c;\r\n}\r\n\r\n.question-text {\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.answer-details {\r\n  margin-top: 0.4rem;\r\n  padding-top: 0.4rem;\r\n  border-top: 1px solid #ddd;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.answer-details p {\r\n  margin: 0.2rem 0;\r\n  color: #666;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n}\r\n\r\n.button-group button {\r\n  padding: 0.7rem 2rem;\r\n  background: #4CAF50;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.button-group button:hover {\r\n  background: #388e3c;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAIfA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAkB;;EAG3BA,KAAK,EAAC;AAAkB;;EAGpBA,KAAK,EAAC;AAAiB;;EACpBA,KAAK,EAAC;AAAiB;;EAM5BA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAgB;;EAO1BA,KAAK,EAAC;AAAc;;uBA1B3BC,mBAAA,CA8BM,OA9BNC,UA8BM,G,0BA7BJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAIM;IAJDH,KAAK,EAHdI,eAAA,EAGe,eAAe,EAASC,MAAA,CAAAC,UAAU;gCAC3CH,mBAAA,CAA4C;IAAtCH,KAAK,EAAC;EAAa,GAAC,aAAW,sBACrCG,mBAAA,CAAmE,QAAnEI,UAAmE,EAAAC,gBAAA,CAAtCC,MAAA,CAAAC,KAAK,IAAG,KAAG,GAAAF,gBAAA,CAAGH,MAAA,CAAAM,cAAc,kBACzDR,mBAAA,CAA8D,QAA9DS,UAA8D,EAA/B,GAAC,GAAAJ,gBAAA,CAAGH,MAAA,CAAAQ,eAAe,IAAG,IAAE,gB,kBAGzDV,mBAAA,CAgBM,OAhBNW,UAgBM,G,0BAfJX,mBAAA,CAAyB,YAArB,kBAAgB,uB,kBACpBF,mBAAA,CAaMc,SAAA,QAxBZC,WAAA,CAWuCP,MAAA,CAAAQ,SAAS,EAXhD,CAWmBC,QAAQ,EAAEC,KAAK;yBAA5BlB,mBAAA,CAaM;MAbuCmB,GAAG,EAAED,KAAK;MAAEnB,KAAK,EAAC;QAC7DG,mBAAA,CAMM,OANNkB,UAMM,GALJlB,mBAAA,CAAqD,QAArDmB,UAAqD,EAAvB,GAAC,GAAAd,gBAAA,CAAGW,KAAK,sBACvChB,mBAAA,CAGO;MAHAH,KAAK,EAdtBI,eAAA,mBAcwDC,MAAA,CAAAkB,eAAe,CAACd,MAAA,CAAAe,WAAW,CAACL,KAAK,OAAOd,MAAA,CAAAkB,eAAe,CAACL,QAAQ,CAACO,MAAM;wBAEhHpB,MAAA,CAAAkB,eAAe,CAACd,MAAA,CAAAe,WAAW,CAACL,KAAK,OAAOd,MAAA,CAAAkB,eAAe,CAACL,QAAQ,CAACO,MAAM,qC,GAG9EtB,mBAAA,CAAgD,KAAhDuB,UAAgD,EAAAlB,gBAAA,CAApBU,QAAQ,CAACS,IAAI,kBACzCxB,mBAAA,CAGM,OAHNyB,UAGM,GAFJzB,mBAAA,CAA8D,WAA3D,eAAa,GAAAK,gBAAA,CAAGC,MAAA,CAAAe,WAAW,CAACL,KAAK,qCACpChB,mBAAA,CAA4C,WAAzC,kBAAgB,GAAAK,gBAAA,CAAGU,QAAQ,CAACO,MAAM,iB;oCAK3CtB,mBAAA,CAGM,OAHN0B,UAGM,GAFJ1B,mBAAA,CAAoD;IAA3C2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAa,WAAS,GAC3C/B,mBAAA,CAAiE;IAAxD2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAa,wBAAsB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}