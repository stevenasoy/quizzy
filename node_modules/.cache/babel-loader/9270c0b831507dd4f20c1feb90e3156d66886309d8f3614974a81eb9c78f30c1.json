{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"spaced-review-session\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"session-intro\"\n};\nvar _hoisted_3 = {\n  \"class\": \"stats\"\n};\nvar _hoisted_4 = {\n  \"class\": \"stat\"\n};\nvar _hoisted_5 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_6 = {\n  \"class\": \"stat\"\n};\nvar _hoisted_7 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_8 = {\n  key: 2,\n  \"class\": \"session-complete\"\n};\nvar _hoisted_9 = {\n  \"class\": \"completion-stats\"\n};\nvar _hoisted_10 = {\n  \"class\": \"stat\"\n};\nvar _hoisted_11 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat\"\n};\nvar _hoisted_15 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_16 = {\n  \"class\": \"next-review-info\"\n};\nvar _hoisted_17 = {\n  \"class\": \"next-review-grid\"\n};\nvar _hoisted_18 = {\n  \"class\": \"day\"\n};\nvar _hoisted_19 = {\n  \"class\": \"count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.started ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Review Session\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.dueQuestions.length), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Questions Due\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.estimatedTime), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Est. Time\", -1 /* HOISTED */))])]), _createElementVNode(\"button\", {\n    onClick: $setup.startSession,\n    \"class\": \"start-btn\"\n  }, \"Start Review\")])) : (_openBlock(), _createBlock($setup[\"FlashcardQuiz\"], {\n    key: 1,\n    questions: $setup.dueQuestions,\n    onComplete: $setup.handleComplete,\n    onUpdateQuestion: $setup.handleQuestionUpdate\n  }, null, 8 /* PROPS */, [\"questions\"])), $setup.completed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Session Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.sessionStats.accuracy) + \"%\", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Accuracy\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.sessionStats.timeSpent), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Time Spent\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString($setup.sessionStats.cardsReviewed), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"Cards Reviewed\", -1 /* HOISTED */))])]), _createElementVNode(\"div\", _hoisted_16, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Next Reviews\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.nextReviews, function (count, day) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day,\n      \"class\": \"next-review-day\"\n    }, [_createElementVNode(\"div\", _hoisted_18, _toDisplayString(day), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_19, _toDisplayString(count) + \" cards\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('close');\n    }),\n    \"class\": \"close-btn\"\n  }, \"Close\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","$setup","started","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","dueQuestions","length","_hoisted_6","_hoisted_7","estimatedTime","onClick","startSession","_createBlock","questions","onComplete","handleComplete","onUpdateQuestion","handleQuestionUpdate","completed","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","sessionStats","accuracy","_hoisted_12","_hoisted_13","timeSpent","_hoisted_14","_hoisted_15","cardsReviewed","_hoisted_16","_hoisted_17","_Fragment","_renderList","nextReviews","count","day","key","_hoisted_18","_hoisted_19","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\SpacedReviewSession.vue"],"sourcesContent":["<template>\r\n  <div class=\"spaced-review-session\">\r\n    <div v-if=\"!started\" class=\"session-intro\">\r\n      <h2>Review Session</h2>\r\n      <div class=\"stats\">\r\n        <div class=\"stat\">\r\n          <div class=\"stat-value\">{{ dueQuestions.length }}</div>\r\n          <div class=\"stat-label\">Questions Due</div>\r\n        </div>\r\n        <div class=\"stat\">\r\n          <div class=\"stat-value\">{{ estimatedTime }}</div>\r\n          <div class=\"stat-label\">Est. Time</div>\r\n        </div>\r\n      </div>\r\n      <button @click=\"startSession\" class=\"start-btn\">Start Review</button>\r\n    </div>\r\n\r\n    <FlashcardQuiz\r\n      v-else\r\n      :questions=\"dueQuestions\"\r\n      @complete=\"handleComplete\"\r\n      @update-question=\"handleQuestionUpdate\"\r\n    />\r\n\r\n    <div v-if=\"completed\" class=\"session-complete\">\r\n      <h2>Session Complete!</h2>\r\n      <div class=\"completion-stats\">\r\n        <div class=\"stat\">\r\n          <div class=\"stat-value\">{{ sessionStats.accuracy }}%</div>\r\n          <div class=\"stat-label\">Accuracy</div>\r\n        </div>\r\n        <div class=\"stat\">\r\n          <div class=\"stat-value\">{{ sessionStats.timeSpent }}</div>\r\n          <div class=\"stat-label\">Time Spent</div>\r\n        </div>\r\n        <div class=\"stat\">\r\n          <div class=\"stat-value\">{{ sessionStats.cardsReviewed }}</div>\r\n          <div class=\"stat-label\">Cards Reviewed</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"next-review-info\">\r\n        <h3>Next Reviews</h3>\r\n        <div class=\"next-review-grid\">\r\n          <div v-for=\"(count, day) in nextReviews\" :key=\"day\" class=\"next-review-day\">\r\n            <div class=\"day\">{{ day }}</div>\r\n            <div class=\"count\">{{ count }} cards</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button @click=\"$emit('close')\" class=\"close-btn\">Close</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport FlashcardQuiz from './FlashcardQuiz.vue';\r\nimport { getDueQuestions, getReviewForecast } from '../algorithms/spaced-repetition';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['close', 'update-questions']);\r\n\r\n// Session state\r\nconst started = ref(false);\r\nconst completed = ref(false);\r\nconst startTime = ref(null);\r\nconst sessionStats = ref({\r\n  accuracy: 0,\r\n  timeSpent: '0:00',\r\n  cardsReviewed: 0\r\n});\r\n\r\n// Get due questions\r\nconst dueQuestions = computed(() => getDueQuestions(props.questions));\r\n\r\n// Estimate review time (30 seconds per question)\r\nconst estimatedTime = computed(() => {\r\n  const minutes = Math.ceil((dueQuestions.value.length * 30) / 60);\r\n  return `${minutes} min${minutes !== 1 ? 's' : ''}`;\r\n});\r\n\r\n// Start the review session\r\nconst startSession = () => {\r\n  started.value = true;\r\n  startTime.value = new Date();\r\n};\r\n\r\n// Handle question updates during the quiz\r\nconst handleQuestionUpdate = (updatedQuestion) => {\r\n  const questions = [...props.questions];\r\n  const index = questions.findIndex(q => q.id === updatedQuestion.id);\r\n  if (index !== -1) {\r\n    questions[index] = updatedQuestion;\r\n    emit('update-questions', questions);\r\n  }\r\n};\r\n\r\n// Calculate next review dates\r\nconst nextReviews = computed(() => {\r\n  const forecast = getReviewForecast(props.questions);\r\n  const days = ['Today', 'Tomorrow', ...Array(5).fill().map((_, i) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + i + 2);\r\n    return date.toLocaleDateString('en-US', { weekday: 'short' });\r\n  })];\r\n  \r\n  return days.reduce((acc, day, index) => {\r\n    if (forecast[index] > 0) {\r\n      acc[day] = forecast[index];\r\n    }\r\n    return acc;\r\n  }, {});\r\n});\r\n\r\n// Handle session completion\r\nconst handleComplete = (results) => {\r\n  completed.value = true;\r\n  \r\n  // Calculate time spent\r\n  const endTime = new Date();\r\n  const timeSpent = Math.floor((endTime - startTime.value) / 1000); // in seconds\r\n  const minutes = Math.floor(timeSpent / 60);\r\n  const seconds = timeSpent % 60;\r\n  \r\n  sessionStats.value = {\r\n    accuracy: Math.round((results.score / results.total) * 100),\r\n    timeSpent: `${minutes}:${seconds.toString().padStart(2, '0')}`,\r\n    cardsReviewed: results.total\r\n  };\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.spaced-review-session {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.session-intro {\r\n  text-align: center;\r\n}\r\n\r\n.stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 3rem;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.stat {\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-label {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.start-btn, .close-btn {\r\n  background: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem 2rem;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.start-btn:hover, .close-btn:hover {\r\n  background: #1976D2;\r\n}\r\n\r\n.session-complete {\r\n  text-align: center;\r\n}\r\n\r\n.completion-stats {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 3rem;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.next-review-info {\r\n  margin: 2rem 0;\r\n}\r\n\r\n.next-review-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.next-review-day {\r\n  background: #f5f5f5;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n}\r\n\r\n.next-review-day .day {\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.next-review-day .count {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.close-btn {\r\n  margin-top: 2rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}