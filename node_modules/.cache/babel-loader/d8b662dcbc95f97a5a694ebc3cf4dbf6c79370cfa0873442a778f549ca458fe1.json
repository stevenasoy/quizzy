{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"quiz-history-details\"\n};\nvar _hoisted_2 = {\n  \"class\": \"header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"file-info\"\n};\nvar _hoisted_4 = {\n  \"class\": \"file-name\"\n};\nvar _hoisted_5 = {\n  \"class\": \"date\"\n};\nvar _hoisted_6 = {\n  \"class\": \"scores-container\"\n};\nvar _hoisted_7 = {\n  \"class\": \"score-card actual\"\n};\nvar _hoisted_8 = {\n  \"class\": \"score-value\"\n};\nvar _hoisted_9 = {\n  \"class\": \"score-card predicted\"\n};\nvar _hoisted_10 = {\n  \"class\": \"score-value\"\n};\nvar _hoisted_11 = {\n  \"class\": \"quiz-stats\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Quiz Results\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.quiz.fileName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.formatDate($props.quiz.date)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"score-circle\", $setup.getScoreClass($props.quiz.actualScore)])\n  }, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString($props.quiz.actualScore) + \"%\", 1 /* TEXT */)], 2 /* CLASS */), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    \"class\": \"score-label\"\n  }, \"Your Score\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"score-circle\", $setup.getPredictedScoreClass($props.quiz.predictedScore)])\n  }, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString($props.quiz.predictedScore) + \"%\", 1 /* TEXT */)], 2 /* CLASS */), _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    \"class\": \"score-label\"\n  }, \"Predicted Score\", -1 /* HOISTED */))])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    \"class\": \"stat-label\"\n  }, \"Questions\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($props.quiz.questionCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_14, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    \"class\": \"stat-label\"\n  }, \"Performance\", -1 /* HOISTED */)), _createElementVNode(\"span\", {\n    \"class\": _normalizeClass([\"stat-value\", $setup.getPerformanceClass($props.quiz.actualScore, $props.quiz.predictedScore)])\n  }, _toDisplayString($setup.getPerformanceText($props.quiz.actualScore, $props.quiz.predictedScore)), 3 /* TEXT, CLASS */)])]), _createElementVNode(\"button\", {\n    \"class\": \"retake-btn\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit('retake-quiz', $props.quiz);\n    })\n  }, \" Retake Quiz \"), _createElementVNode(\"button\", {\n    \"class\": \"back-btn\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.$emit('close');\n    })\n  }, \" Back to History \")]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$props","quiz","fileName","_hoisted_5","$setup","formatDate","date","_hoisted_6","_hoisted_7","_normalizeClass","getScoreClass","actualScore","_hoisted_8","_hoisted_9","getPredictedScoreClass","predictedScore","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","questionCount","_hoisted_14","getPerformanceClass","getPerformanceText","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\StevenJakeASOY\\Documents\\cursor-projects\\src\\components\\QuizHistoryDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-history-details\">\r\n    <div class=\"header\">\r\n      <h2>Quiz Results</h2>\r\n      <div class=\"file-info\">\r\n        <span class=\"file-name\">{{ quiz.fileName }}</span>\r\n        <span class=\"date\">{{ formatDate(quiz.date) }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"scores-container\">\r\n      <div class=\"score-card actual\">\r\n        <div class=\"score-circle\" :class=\"getScoreClass(quiz.actualScore)\">\r\n          <span class=\"score-value\">{{ quiz.actualScore }}%</span>\r\n        </div>\r\n        <span class=\"score-label\">Your Score</span>\r\n      </div>\r\n      \r\n      <div class=\"score-card predicted\">\r\n        <div class=\"score-circle\" :class=\"getPredictedScoreClass(quiz.predictedScore)\">\r\n          <span class=\"score-value\">{{ quiz.predictedScore }}%</span>\r\n        </div>\r\n        <span class=\"score-label\">Predicted Score</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"quiz-stats\">\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">Questions</span>\r\n        <span class=\"stat-value\">{{ quiz.questionCount }}</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-label\">Performance</span>\r\n        <span class=\"stat-value\" :class=\"getPerformanceClass(quiz.actualScore, quiz.predictedScore)\">\r\n          {{ getPerformanceText(quiz.actualScore, quiz.predictedScore) }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <button class=\"retake-btn\" @click=\"$emit('retake-quiz', quiz)\">\r\n      Retake Quiz\r\n    </button>\r\n\r\n    <button class=\"back-btn\" @click=\"$emit('close')\">\r\n      Back to History\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from 'vue';\r\n\r\ndefineProps({\r\n  quiz: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n});\r\n\r\ndefineEmits(['retake-quiz', 'close']);\r\n\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleString();\r\n};\r\n\r\nconst getScoreClass = (score) => {\r\n  if (score >= 90) return 'excellent';\r\n  if (score >= 80) return 'good';\r\n  if (score >= 70) return 'average';\r\n  return 'needs-improvement';\r\n};\r\n\r\nconst getPredictedScoreClass = (score) => {\r\n  if (score >= 80) return 'high';\r\n  if (score >= 60) return 'medium';\r\n  return 'low';\r\n};\r\n\r\nconst getPerformanceClass = (actual, predicted) => {\r\n  if (actual > predicted + 5) return 'exceeded';\r\n  if (actual < predicted - 5) return 'below';\r\n  return 'met';\r\n};\r\n\r\nconst getPerformanceText = (actual, predicted) => {\r\n  if (actual > predicted + 5) return 'Exceeded Expectations';\r\n  if (actual < predicted - 5) return 'Below Expectations';\r\n  return 'Met Expectations';\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.quiz-history-details {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.header h2 {\r\n  margin-bottom: 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.file-info {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 500;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.scores-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.score-card {\r\n  text-align: center;\r\n}\r\n\r\n.score-circle {\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.score-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.score-label {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n/* Score classes */\r\n.excellent {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n  color: #2E7D32;\r\n}\r\n\r\n.good {\r\n  background-color: #e3f2fd;\r\n  border: 3px solid #2196F3;\r\n  color: #1565C0;\r\n}\r\n\r\n.average {\r\n  background-color: #fff3e0;\r\n  border: 3px solid #FF9800;\r\n  color: #EF6C00;\r\n}\r\n\r\n.needs-improvement {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n  color: #c62828;\r\n}\r\n\r\n.high {\r\n  background-color: #e8f5e9;\r\n  border: 3px solid #4CAF50;\r\n  color: #2E7D32;\r\n}\r\n\r\n.medium {\r\n  background-color: #fff3e0;\r\n  border: 3px solid #FF9800;\r\n  color: #EF6C00;\r\n}\r\n\r\n.low {\r\n  background-color: #ffebee;\r\n  border: 3px solid #f44336;\r\n  color: #c62828;\r\n}\r\n\r\n.quiz-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n}\r\n\r\n.stat-label {\r\n  display: block;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.exceeded {\r\n  color: #4CAF50;\r\n}\r\n\r\n.met {\r\n  color: #2196F3;\r\n}\r\n\r\n.below {\r\n  color: #f44336;\r\n}\r\n\r\n.retake-btn, .back-btn {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.retake-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.retake-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.back-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.back-btn:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAsB;;EAC1B,SAAM;AAAQ;;EAEZ,SAAM;AAAW;;EACd,SAAM;AAAW;;EACjB,SAAM;AAAM;;EAIjB,SAAM;AAAkB;;EACtB,SAAM;AAAmB;;EAEpB,SAAM;AAAa;;EAKxB,SAAM;AAAsB;;EAEvB,SAAM;AAAa;;EAM1B,SAAM;AAAY;;EAChB,SAAM;AAAW;;EAEd,SAAM;AAAY;;EAErB,SAAM;AAAW;;uBA9B1BA,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,mBAAA,CAMM,OANNC,UAMM,G,0BALJD,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAGM,OAHNE,UAGM,GAFJF,mBAAA,CAAkD,QAAlDG,UAAkD,EAAAC,gBAAA,CAAvBC,MAAA,CAAAC,IAAI,CAACC,QAAQ,kBACxCP,mBAAA,CAAqD,QAArDQ,UAAqD,EAAAJ,gBAAA,CAA/BK,MAAA,CAAAC,UAAU,CAACL,MAAA,CAAAC,IAAI,CAACK,IAAI,kB,KAI9CX,mBAAA,CAcM,OAdNY,UAcM,GAbJZ,mBAAA,CAKM,OALNa,UAKM,GAJJb,mBAAA,CAEM;IAFD,SAAKc,eAAA,EAAC,cAAc,EAASL,MAAA,CAAAM,aAAa,CAACV,MAAA,CAAAC,IAAI,CAACU,WAAW;MAC9DhB,mBAAA,CAAwD,QAAxDiB,UAAwD,EAAAb,gBAAA,CAA3BC,MAAA,CAAAC,IAAI,CAACU,WAAW,IAAG,GAAC,gB,4CAEnDhB,mBAAA,CAA2C;IAArC,SAAM;EAAa,GAAC,YAAU,qB,GAGtCA,mBAAA,CAKM,OALNkB,UAKM,GAJJlB,mBAAA,CAEM;IAFD,SAAKc,eAAA,EAAC,cAAc,EAASL,MAAA,CAAAU,sBAAsB,CAACd,MAAA,CAAAC,IAAI,CAACc,cAAc;MAC1EpB,mBAAA,CAA2D,QAA3DqB,WAA2D,EAAAjB,gBAAA,CAA9BC,MAAA,CAAAC,IAAI,CAACc,cAAc,IAAG,GAAC,gB,4CAEtDpB,mBAAA,CAAgD;IAA1C,SAAM;EAAa,GAAC,iBAAe,qB,KAI7CA,mBAAA,CAWM,OAXNsB,WAWM,GAVJtB,mBAAA,CAGM,OAHNuB,WAGM,G,0BAFJvB,mBAAA,CAAyC;IAAnC,SAAM;EAAY,GAAC,WAAS,sBAClCA,mBAAA,CAAwD,QAAxDwB,WAAwD,EAAApB,gBAAA,CAA5BC,MAAA,CAAAC,IAAI,CAACmB,aAAa,iB,GAEhDzB,mBAAA,CAKM,OALN0B,WAKM,G,0BAJJ1B,mBAAA,CAA2C;IAArC,SAAM;EAAY,GAAC,aAAW,sBACpCA,mBAAA,CAEO;IAFD,SAAKc,eAAA,EAAC,YAAY,EAASL,MAAA,CAAAkB,mBAAmB,CAACtB,MAAA,CAAAC,IAAI,CAACU,WAAW,EAAEX,MAAA,CAAAC,IAAI,CAACc,cAAc;sBACrFX,MAAA,CAAAmB,kBAAkB,CAACvB,MAAA,CAAAC,IAAI,CAACU,WAAW,EAAEX,MAAA,CAAAC,IAAI,CAACc,cAAc,yB,KAKjEpB,mBAAA,CAES;IAFD,SAAM,YAAY;IAAE6B,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK,gBAAgB5B,MAAA,CAAAC,IAAI;IAAA;KAAG,eAE/D,GAEAN,mBAAA,CAES;IAFD,SAAM,UAAU;IAAE6B,OAAK,EAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAEC,IAAA,CAAAC,KAAK;IAAA;KAAW,mBAEjD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}