{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref } from 'vue';\nimport { useAuth } from './useAuth';\nimport { supabase } from '../lib/supabase';\nexport function useQuizHistory() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var temporaryHistory = ref([]);\n  var TEMP_STORAGE_KEY = 'quizzy_temporary_history';\n\n  // Load temporary history from localStorage on initialization\n  var loadTemporaryHistory = function loadTemporaryHistory() {\n    try {\n      var stored = localStorage.getItem(TEMP_STORAGE_KEY);\n      if (stored) {\n        temporaryHistory.value = JSON.parse(stored);\n      }\n    } catch (error) {\n      console.error('Error loading temporary history:', error);\n      temporaryHistory.value = [];\n    }\n  };\n\n  // Save temporary history to localStorage\n  var saveTemporaryHistory = function saveTemporaryHistory() {\n    try {\n      localStorage.setItem(TEMP_STORAGE_KEY, JSON.stringify(temporaryHistory.value));\n    } catch (error) {\n      console.error('Error saving temporary history:', error);\n    }\n  };\n\n  // Initialize temporary history\n  loadTemporaryHistory();\n  var saveQuiz = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(quizData) {\n      var _yield$supabase$from$, data, error, newQuiz;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (!user.value) {\n              _context.next = 12;\n              break;\n            }\n            _context.next = 4;\n            return supabase.from('quiz_history').insert([_objectSpread(_objectSpread({}, quizData), {}, {\n              user_id: user.value.id,\n              created_at: new Date().toISOString()\n            })]).select();\n          case 4:\n            _yield$supabase$from$ = _context.sent;\n            data = _yield$supabase$from$.data;\n            error = _yield$supabase$from$.error;\n            if (!error) {\n              _context.next = 9;\n              break;\n            }\n            throw error;\n          case 9:\n            return _context.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 12:\n            // Save to temporary storage if not logged in\n            newQuiz = _objectSpread(_objectSpread({}, quizData), {}, {\n              id: Date.now(),\n              // temporary ID\n              created_at: new Date().toISOString()\n            });\n            temporaryHistory.value.push(newQuiz);\n            saveTemporaryHistory(); // Save to localStorage\n            return _context.abrupt(\"return\", {\n              data: [newQuiz],\n              error: null\n            });\n          case 16:\n            _context.next = 22;\n            break;\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error saving quiz:', _context.t0);\n            return _context.abrupt(\"return\", {\n              data: null,\n              error: _context.t0\n            });\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 18]]);\n    }));\n    return function saveQuiz(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchQuizzes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _yield$supabase$from$2, data, error;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            if (user.value) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\", {\n              data: temporaryHistory.value,\n              error: null\n            });\n          case 3:\n            _context2.next = 5;\n            return supabase.from('quiz_history').select('*').eq('user_id', user.value.id).order('created_at', {\n              ascending: false\n            });\n          case 5:\n            _yield$supabase$from$2 = _context2.sent;\n            data = _yield$supabase$from$2.data;\n            error = _yield$supabase$from$2.error;\n            if (!error) {\n              _context2.next = 10;\n              break;\n            }\n            throw error;\n          case 10:\n            return _context2.abrupt(\"return\", {\n              data: data,\n              error: null\n            });\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error fetching quizzes:', _context2.t0);\n            return _context2.abrupt(\"return\", {\n              data: null,\n              error: _context2.t0\n            });\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 13]]);\n    }));\n    return function fetchQuizzes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var migrateTemporaryHistory = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var quizzesToMigrate, _yield$supabase$from$3, error;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(!user.value || temporaryHistory.value.length === 0)) {\n              _context3.next = 2;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 2:\n            _context3.prev = 2;\n            quizzesToMigrate = temporaryHistory.value.map(function (quiz) {\n              return _objectSpread(_objectSpread({}, quiz), {}, {\n                user_id: user.value.id\n              });\n            });\n            _context3.next = 6;\n            return supabase.from('quiz_history').insert(quizzesToMigrate);\n          case 6:\n            _yield$supabase$from$3 = _context3.sent;\n            error = _yield$supabase$from$3.error;\n            if (!error) {\n              _context3.next = 10;\n              break;\n            }\n            throw error;\n          case 10:\n            // Clear temporary history after successful migration\n            temporaryHistory.value = [];\n            saveTemporaryHistory(); // Clear localStorage as well\n            return _context3.abrupt(\"return\", {\n              success: true,\n              error: null\n            });\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.error('Error migrating quiz history:', _context3.t0);\n            return _context3.abrupt(\"return\", {\n              success: false,\n              error: _context3.t0\n            });\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2, 15]]);\n    }));\n    return function migrateTemporaryHistory() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var clearHistory = function clearHistory() {\n    if (user.value) {\n      // Clear database history for logged-in users\n      return supabase.from('quiz_history')[\"delete\"]().eq('user_id', user.value.id);\n    } else {\n      // Clear temporary history for logged-out users\n      temporaryHistory.value = [];\n      saveTemporaryHistory();\n      return Promise.resolve({\n        error: null\n      });\n    }\n  };\n  return {\n    temporaryHistory: temporaryHistory,\n    saveQuiz: saveQuiz,\n    fetchQuizzes: fetchQuizzes,\n    migrateTemporaryHistory: migrateTemporaryHistory,\n    clearHistory: clearHistory\n  };\n}","map":{"version":3,"names":["ref","useAuth","supabase","useQuizHistory","_useAuth","user","temporaryHistory","TEMP_STORAGE_KEY","loadTemporaryHistory","stored","localStorage","getItem","value","JSON","parse","error","console","saveTemporaryHistory","setItem","stringify","saveQuiz","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","quizData","_yield$supabase$from$","data","newQuiz","wrap","_callee$","_context","prev","next","from","insert","_objectSpread","user_id","id","created_at","Date","toISOString","select","sent","abrupt","now","push","t0","stop","_x","apply","arguments","fetchQuizzes","_ref2","_callee2","_yield$supabase$from$2","_callee2$","_context2","eq","order","ascending","migrateTemporaryHistory","_ref3","_callee3","quizzesToMigrate","_yield$supabase$from$3","_callee3$","_context3","length","map","quiz","success","clearHistory","Promise","resolve"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/composables/useQuizHistory.js"],"sourcesContent":["import { ref } from 'vue';\r\nimport { useAuth } from './useAuth';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport function useQuizHistory() {\r\n  const { user } = useAuth();\r\n  const temporaryHistory = ref([]);\r\n  const TEMP_STORAGE_KEY = 'quizzy_temporary_history';\r\n\r\n  // Load temporary history from localStorage on initialization\r\n  const loadTemporaryHistory = () => {\r\n    try {\r\n      const stored = localStorage.getItem(TEMP_STORAGE_KEY);\r\n      if (stored) {\r\n        temporaryHistory.value = JSON.parse(stored);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading temporary history:', error);\r\n      temporaryHistory.value = [];\r\n    }\r\n  };\r\n\r\n  // Save temporary history to localStorage\r\n  const saveTemporaryHistory = () => {\r\n    try {\r\n      localStorage.setItem(TEMP_STORAGE_KEY, JSON.stringify(temporaryHistory.value));\r\n    } catch (error) {\r\n      console.error('Error saving temporary history:', error);\r\n    }\r\n  };\r\n\r\n  // Initialize temporary history\r\n  loadTemporaryHistory();\r\n\r\n  const saveQuiz = async (quizData) => {\r\n    try {\r\n      if (user.value) {\r\n        // Save to Supabase if user is logged in\r\n        const { data, error } = await supabase\r\n          .from('quiz_history')\r\n          .insert([{\r\n            ...quizData,\r\n            user_id: user.value.id,\r\n            created_at: new Date().toISOString()\r\n          }])\r\n          .select();\r\n\r\n        if (error) throw error;\r\n        return { data, error: null };\r\n      } else {\r\n        // Save to temporary storage if not logged in\r\n        const newQuiz = {\r\n          ...quizData,\r\n          id: Date.now(), // temporary ID\r\n          created_at: new Date().toISOString()\r\n        };\r\n        temporaryHistory.value.push(newQuiz);\r\n        saveTemporaryHistory(); // Save to localStorage\r\n        return { data: [newQuiz], error: null };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving quiz:', error);\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const fetchQuizzes = async () => {\r\n    try {\r\n      if (!user.value) {\r\n        // Return temporary history for logged-out users\r\n        return { data: temporaryHistory.value, error: null };\r\n      }\r\n\r\n      // Fetch from Supabase for logged-in users\r\n      const { data, error } = await supabase\r\n        .from('quiz_history')\r\n        .select('*')\r\n        .eq('user_id', user.value.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      return { data, error: null };\r\n    } catch (error) {\r\n      console.error('Error fetching quizzes:', error);\r\n      return { data: null, error };\r\n    }\r\n  };\r\n\r\n  const migrateTemporaryHistory = async () => {\r\n    if (!user.value || temporaryHistory.value.length === 0) return;\r\n\r\n    try {\r\n      const quizzesToMigrate = temporaryHistory.value.map(quiz => ({\r\n        ...quiz,\r\n        user_id: user.value.id\r\n      }));\r\n\r\n      const { error } = await supabase\r\n        .from('quiz_history')\r\n        .insert(quizzesToMigrate);\r\n\r\n      if (error) throw error;\r\n\r\n      // Clear temporary history after successful migration\r\n      temporaryHistory.value = [];\r\n      saveTemporaryHistory(); // Clear localStorage as well\r\n      return { success: true, error: null };\r\n    } catch (error) {\r\n      console.error('Error migrating quiz history:', error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    if (user.value) {\r\n      // Clear database history for logged-in users\r\n      return supabase\r\n        .from('quiz_history')\r\n        .delete()\r\n        .eq('user_id', user.value.id);\r\n    } else {\r\n      // Clear temporary history for logged-out users\r\n      temporaryHistory.value = [];\r\n      saveTemporaryHistory();\r\n      return Promise.resolve({ error: null });\r\n    }\r\n  };\r\n\r\n  return {\r\n    temporaryHistory,\r\n    saveQuiz,\r\n    fetchQuizzes,\r\n    migrateTemporaryHistory,\r\n    clearHistory\r\n  };\r\n} "],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,IAAAC,QAAA,GAAiBH,OAAO,CAAC,CAAC;IAAlBI,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,IAAMC,gBAAgB,GAAGN,GAAG,CAAC,EAAE,CAAC;EAChC,IAAMO,gBAAgB,GAAG,0BAA0B;;EAEnD;EACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAI;MACF,IAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAACJ,gBAAgB,CAAC;MACrD,IAAIE,MAAM,EAAE;QACVH,gBAAgB,CAACM,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDT,gBAAgB,CAACM,KAAK,GAAG,EAAE;IAC7B;EACF,CAAC;;EAED;EACA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAI;MACFP,YAAY,CAACQ,OAAO,CAACX,gBAAgB,EAAEM,IAAI,CAACM,SAAS,CAACb,gBAAgB,CAACM,KAAK,CAAC,CAAC;IAChF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;EACAP,oBAAoB,CAAC,CAAC;EAEtB,IAAMY,QAAQ;IAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,QAAQ;MAAA,IAAAC,qBAAA,EAAAC,IAAA,EAAAb,KAAA,EAAAc,OAAA;MAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAA,KAExB5B,IAAI,CAACO,KAAK;cAAAoB,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAEkBhC,QAAQ,CACnCiC,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,CAAAC,aAAA,CAAAA,aAAA,KACHX,QAAQ;cACXY,OAAO,EAAEjC,IAAI,CAACO,KAAK,CAAC2B,EAAE;cACtBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;YAAC,GACpC,CAAC,CACFC,MAAM,CAAC,CAAC;UAAA;YAAAhB,qBAAA,GAAAK,QAAA,CAAAY,IAAA;YAPHhB,IAAI,GAAAD,qBAAA,CAAJC,IAAI;YAAEb,KAAK,GAAAY,qBAAA,CAALZ,KAAK;YAAA,KASfA,KAAK;cAAAiB,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,MAAQnB,KAAK;UAAA;YAAA,OAAAiB,QAAA,CAAAa,MAAA,WACf;cAAEjB,IAAI,EAAJA,IAAI;cAAEb,KAAK,EAAE;YAAK,CAAC;UAAA;YAE5B;YACMc,OAAO,GAAAQ,aAAA,CAAAA,aAAA,KACRX,QAAQ;cACXa,EAAE,EAAEE,IAAI,CAACK,GAAG,CAAC,CAAC;cAAE;cAChBN,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;YAAC;YAEtCpC,gBAAgB,CAACM,KAAK,CAACmC,IAAI,CAAClB,OAAO,CAAC;YACpCZ,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAAA,OAAAe,QAAA,CAAAa,MAAA,WACjB;cAAEjB,IAAI,EAAE,CAACC,OAAO,CAAC;cAAEd,KAAK,EAAE;YAAK,CAAC;UAAA;YAAAiB,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;YAGzChB,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAAiB,QAAA,CAAAgB,EAAO,CAAC;YAAC,OAAAhB,QAAA,CAAAa,MAAA,WACpC;cAAEjB,IAAI,EAAE,IAAI;cAAEb,KAAK,EAAAiB,QAAA,CAAAgB;YAAC,CAAC;UAAA;UAAA;YAAA,OAAAhB,QAAA,CAAAiB,IAAA;QAAA;MAAA,GAAAxB,OAAA;IAAA,CAE/B;IAAA,gBA9BKL,QAAQA,CAAA8B,EAAA;MAAA,OAAA7B,IAAA,CAAA8B,KAAA,OAAAC,SAAA;IAAA;EAAA,GA8Bb;EAED,IAAMC,YAAY;IAAA,IAAAC,KAAA,GAAAhC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA+B,SAAA;MAAA,IAAAC,sBAAA,EAAA5B,IAAA,EAAAb,KAAA;MAAA,OAAAQ,mBAAA,GAAAO,IAAA,UAAA2B,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;UAAA;YAAAwB,SAAA,CAAAzB,IAAA;YAAA,IAEZ5B,IAAI,CAACO,KAAK;cAAA8C,SAAA,CAAAxB,IAAA;cAAA;YAAA;YAAA,OAAAwB,SAAA,CAAAb,MAAA,WAEN;cAAEjB,IAAI,EAAEtB,gBAAgB,CAACM,KAAK;cAAEG,KAAK,EAAE;YAAK,CAAC;UAAA;YAAA2C,SAAA,CAAAxB,IAAA;YAAA,OAIxBhC,QAAQ,CACnCiC,IAAI,CAAC,cAAc,CAAC,CACpBQ,MAAM,CAAC,GAAG,CAAC,CACXgB,EAAE,CAAC,SAAS,EAAEtD,IAAI,CAACO,KAAK,CAAC2B,EAAE,CAAC,CAC5BqB,KAAK,CAAC,YAAY,EAAE;cAAEC,SAAS,EAAE;YAAM,CAAC,CAAC;UAAA;YAAAL,sBAAA,GAAAE,SAAA,CAAAd,IAAA;YAJpChB,IAAI,GAAA4B,sBAAA,CAAJ5B,IAAI;YAAEb,KAAK,GAAAyC,sBAAA,CAALzC,KAAK;YAAA,KAMfA,KAAK;cAAA2C,SAAA,CAAAxB,IAAA;cAAA;YAAA;YAAA,MAAQnB,KAAK;UAAA;YAAA,OAAA2C,SAAA,CAAAb,MAAA,WACf;cAAEjB,IAAI,EAAJA,IAAI;cAAEb,KAAK,EAAE;YAAK,CAAC;UAAA;YAAA2C,SAAA,CAAAzB,IAAA;YAAAyB,SAAA,CAAAV,EAAA,GAAAU,SAAA;YAE5B1C,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAA2C,SAAA,CAAAV,EAAO,CAAC;YAAC,OAAAU,SAAA,CAAAb,MAAA,WACzC;cAAEjB,IAAI,EAAE,IAAI;cAAEb,KAAK,EAAA2C,SAAA,CAAAV;YAAC,CAAC;UAAA;UAAA;YAAA,OAAAU,SAAA,CAAAT,IAAA;QAAA;MAAA,GAAAM,QAAA;IAAA,CAE/B;IAAA,gBApBKF,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoBjB;EAED,IAAMU,uBAAuB;IAAA,IAAAC,KAAA,GAAAzC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAwC,SAAA;MAAA,IAAAC,gBAAA,EAAAC,sBAAA,EAAAnD,KAAA;MAAA,OAAAQ,mBAAA,GAAAO,IAAA,UAAAqC,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;UAAA;YAAA,MAC1B,CAAC7B,IAAI,CAACO,KAAK,IAAIN,gBAAgB,CAACM,KAAK,CAACyD,MAAM,KAAK,CAAC;cAAAD,SAAA,CAAAlC,IAAA;cAAA;YAAA;YAAA,OAAAkC,SAAA,CAAAvB,MAAA;UAAA;YAAAuB,SAAA,CAAAnC,IAAA;YAG9CgC,gBAAgB,GAAG3D,gBAAgB,CAACM,KAAK,CAAC0D,GAAG,CAAC,UAAAC,IAAI;cAAA,OAAAlC,aAAA,CAAAA,aAAA,KACnDkC,IAAI;gBACPjC,OAAO,EAAEjC,IAAI,CAACO,KAAK,CAAC2B;cAAE;YAAA,CACtB,CAAC;YAAA6B,SAAA,CAAAlC,IAAA;YAAA,OAEqBhC,QAAQ,CAC7BiC,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC6B,gBAAgB,CAAC;UAAA;YAAAC,sBAAA,GAAAE,SAAA,CAAAxB,IAAA;YAFnB7B,KAAK,GAAAmD,sBAAA,CAALnD,KAAK;YAAA,KAITA,KAAK;cAAAqD,SAAA,CAAAlC,IAAA;cAAA;YAAA;YAAA,MAAQnB,KAAK;UAAA;YAEtB;YACAT,gBAAgB,CAACM,KAAK,GAAG,EAAE;YAC3BK,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAAA,OAAAmD,SAAA,CAAAvB,MAAA,WACjB;cAAE2B,OAAO,EAAE,IAAI;cAAEzD,KAAK,EAAE;YAAK,CAAC;UAAA;YAAAqD,SAAA,CAAAnC,IAAA;YAAAmC,SAAA,CAAApB,EAAA,GAAAoB,SAAA;YAErCpD,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAAqD,SAAA,CAAApB,EAAO,CAAC;YAAC,OAAAoB,SAAA,CAAAvB,MAAA,WAC/C;cAAE2B,OAAO,EAAE,KAAK;cAAEzD,KAAK,EAAAqD,SAAA,CAAApB;YAAC,CAAC;UAAA;UAAA;YAAA,OAAAoB,SAAA,CAAAnB,IAAA;QAAA;MAAA,GAAAe,QAAA;IAAA,CAEnC;IAAA,gBAvBKF,uBAAuBA,CAAA;MAAA,OAAAC,KAAA,CAAAZ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAuB5B;EAED,IAAMqB,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIpE,IAAI,CAACO,KAAK,EAAE;MACd;MACA,OAAOV,QAAQ,CACZiC,IAAI,CAAC,cAAc,CAAC,UACd,CAAC,CAAC,CACRwB,EAAE,CAAC,SAAS,EAAEtD,IAAI,CAACO,KAAK,CAAC2B,EAAE,CAAC;IACjC,CAAC,MAAM;MACL;MACAjC,gBAAgB,CAACM,KAAK,GAAG,EAAE;MAC3BK,oBAAoB,CAAC,CAAC;MACtB,OAAOyD,OAAO,CAACC,OAAO,CAAC;QAAE5D,KAAK,EAAE;MAAK,CAAC,CAAC;IACzC;EACF,CAAC;EAED,OAAO;IACLT,gBAAgB,EAAhBA,gBAAgB;IAChBc,QAAQ,EAARA,QAAQ;IACRiC,YAAY,EAAZA,YAAY;IACZS,uBAAuB,EAAvBA,uBAAuB;IACvBW,YAAY,EAAZA;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}