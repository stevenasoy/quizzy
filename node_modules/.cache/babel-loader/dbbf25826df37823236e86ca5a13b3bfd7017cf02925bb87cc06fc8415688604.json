{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, computed, onMounted } from 'vue';\nexport default {\n  __name: 'CalendarHeatmap',\n  props: {\n    activities: {\n      type: Array,\n      required: true\n      // Expected format: [{ date: '2024-03-15', count: 5 }]\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var props = __props;\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var days = ref([]);\n\n    // Generate days for the last year\n    onMounted(function () {\n      var today = new Date();\n      var oneYearAgo = new Date();\n      oneYearAgo.setFullYear(today.getFullYear() - 1);\n      oneYearAgo.setDate(oneYearAgo.getDate() + 1);\n      var tempDays = [];\n      var currentDate = oneYearAgo;\n      while (currentDate <= today) {\n        tempDays.push({\n          date: new Date(currentDate),\n          count: getActivityCount(currentDate)\n        });\n        currentDate = new Date(currentDate.setDate(currentDate.getDate() + 1));\n      }\n      days.value = tempDays;\n    });\n\n    // Get activity count for a specific date\n    var getActivityCount = function getActivityCount(date) {\n      var dateStr = date.toISOString().split('T')[0];\n      var activity = props.activities.find(function (a) {\n        return a.date === dateStr;\n      });\n      return activity ? activity.count : 0;\n    };\n\n    // Get CSS class based on activity count\n    var getDayClass = function getDayClass(day) {\n      var count = day.count;\n      if (count === 0) return 'activity-0';\n      if (count <= 2) return 'activity-1';\n      if (count <= 4) return 'activity-2';\n      if (count <= 6) return 'activity-3';\n      return 'activity-4';\n    };\n\n    // Get tooltip text for a day\n    var getDayTooltip = function getDayTooltip(day) {\n      var date = day.date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      var count = day.count;\n      return \"\".concat(count, \" activities on \").concat(date);\n    };\n    var __returned__ = {\n      props: props,\n      months: months,\n      days: days,\n      getActivityCount: getActivityCount,\n      getDayClass: getDayClass,\n      getDayTooltip: getDayTooltip,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","props","__props","months","days","today","Date","oneYearAgo","setFullYear","getFullYear","setDate","getDate","tempDays","currentDate","push","date","count","getActivityCount","value","dateStr","toISOString","split","activity","activities","find","a","getDayClass","day","getDayTooltip","toLocaleDateString","weekday","year","month","concat"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/CalendarHeatmap.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-heatmap\">\r\n    <div class=\"calendar-header\">\r\n      <div class=\"month-labels\">\r\n        <span v-for=\"month in months\" :key=\"month\" class=\"month-label\">{{ month }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"calendar-grid\">\r\n      <div class=\"weekday-labels\">\r\n        <span class=\"weekday-label\">Mon</span>\r\n        <span class=\"weekday-label\">Wed</span>\r\n        <span class=\"weekday-label\">Fri</span>\r\n      </div>\r\n      <div class=\"days-grid\">\r\n        <div\r\n          v-for=\"(day, index) in days\"\r\n          :key=\"index\"\r\n          class=\"day-cell\"\r\n          :class=\"getDayClass(day)\"\r\n          :title=\"getDayTooltip(day)\"\r\n        >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"legend\">\r\n      <span class=\"legend-label\">Less</span>\r\n      <div class=\"legend-cells\">\r\n        <div class=\"day-cell activity-0\"></div>\r\n        <div class=\"day-cell activity-1\"></div>\r\n        <div class=\"day-cell activity-2\"></div>\r\n        <div class=\"day-cell activity-3\"></div>\r\n        <div class=\"day-cell activity-4\"></div>\r\n      </div>\r\n      <span class=\"legend-label\">More</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\n\r\nconst props = defineProps({\r\n  activities: {\r\n    type: Array,\r\n    required: true,\r\n    // Expected format: [{ date: '2024-03-15', count: 5 }]\r\n  }\r\n});\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst days = ref([]);\r\n\r\n// Generate days for the last year\r\nonMounted(() => {\r\n  const today = new Date();\r\n  const oneYearAgo = new Date();\r\n  oneYearAgo.setFullYear(today.getFullYear() - 1);\r\n  oneYearAgo.setDate(oneYearAgo.getDate() + 1);\r\n\r\n  const tempDays = [];\r\n  let currentDate = oneYearAgo;\r\n\r\n  while (currentDate <= today) {\r\n    tempDays.push({\r\n      date: new Date(currentDate),\r\n      count: getActivityCount(currentDate)\r\n    });\r\n    currentDate = new Date(currentDate.setDate(currentDate.getDate() + 1));\r\n  }\r\n\r\n  days.value = tempDays;\r\n});\r\n\r\n// Get activity count for a specific date\r\nconst getActivityCount = (date) => {\r\n  const dateStr = date.toISOString().split('T')[0];\r\n  const activity = props.activities.find(a => a.date === dateStr);\r\n  return activity ? activity.count : 0;\r\n};\r\n\r\n// Get CSS class based on activity count\r\nconst getDayClass = (day) => {\r\n  const count = day.count;\r\n  if (count === 0) return 'activity-0';\r\n  if (count <= 2) return 'activity-1';\r\n  if (count <= 4) return 'activity-2';\r\n  if (count <= 6) return 'activity-3';\r\n  return 'activity-4';\r\n};\r\n\r\n// Get tooltip text for a day\r\nconst getDayTooltip = (day) => {\r\n  const date = day.date.toLocaleDateString('en-US', {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  const count = day.count;\r\n  return `${count} activities on ${date}`;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-heatmap {\r\n  background-color: #1a1a1a;\r\n  border-radius: 6px;\r\n  padding: 1rem;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.calendar-header {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.month-labels {\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  text-align: start;\r\n  padding-left: 2rem;\r\n}\r\n\r\n.month-label {\r\n  color: #7a7a7a;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.calendar-grid {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.weekday-labels {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.weekday-label {\r\n  color: #7a7a7a;\r\n  font-size: 0.8rem;\r\n  height: 10px;\r\n  line-height: 10px;\r\n}\r\n\r\n.days-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(52, 1fr);\r\n  gap: 3px;\r\n  flex: 1;\r\n}\r\n\r\n.day-cell {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n}\r\n\r\n.activity-0 {\r\n  background-color: #1a1a1a;\r\n  border: 1px solid #2d2d2d;\r\n}\r\n\r\n.activity-1 {\r\n  background-color: #0e4429;\r\n}\r\n\r\n.activity-2 {\r\n  background-color: #006d32;\r\n}\r\n\r\n.activity-3 {\r\n  background-color: #26a641;\r\n}\r\n\r\n.activity-4 {\r\n  background-color: #39d353;\r\n}\r\n\r\n.legend {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  gap: 0.5rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.legend-cells {\r\n  display: flex;\r\n  gap: 3px;\r\n}\r\n\r\n.legend-label {\r\n  color: #7a7a7a;\r\n  font-size: 0.8rem;\r\n}\r\n</style> "],"mappings":";;;;;;;;;AAuCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;;;;;IAE9C,IAAMC,KAAK,GAAGC,OAMZ;IAEF,IAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACnG,IAAMC,IAAI,GAAGN,GAAG,CAAC,EAAE,CAAC;;IAEpB;IACAE,SAAS,CAAC,YAAM;MACd,IAAMK,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;MACxB,IAAMC,UAAU,GAAG,IAAID,IAAI,CAAC,CAAC;MAC7BC,UAAU,CAACC,WAAW,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;MAC/CF,UAAU,CAACG,OAAO,CAACH,UAAU,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAE5C,IAAMC,QAAQ,GAAG,EAAE;MACnB,IAAIC,WAAW,GAAGN,UAAU;MAE5B,OAAOM,WAAW,IAAIR,KAAK,EAAE;QAC3BO,QAAQ,CAACE,IAAI,CAAC;UACZC,IAAI,EAAE,IAAIT,IAAI,CAACO,WAAW,CAAC;UAC3BG,KAAK,EAAEC,gBAAgB,CAACJ,WAAW;QACrC,CAAC,CAAC;QACFA,WAAW,GAAG,IAAIP,IAAI,CAACO,WAAW,CAACH,OAAO,CAACG,WAAW,CAACF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACxE;MAEAP,IAAI,CAACc,KAAK,GAAGN,QAAQ;IACvB,CAAC,CAAC;;IAEF;IACA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIF,IAAI,EAAK;MACjC,IAAMI,OAAO,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChD,IAAMC,QAAQ,GAAGrB,KAAK,CAACsB,UAAU,CAACC,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACV,IAAI,KAAKI,OAAO;MAAA,EAAC;MAC/D,OAAOG,QAAQ,GAAGA,QAAQ,CAACN,KAAK,GAAG,CAAC;IACtC,CAAC;;IAED;IACA,IAAMU,WAAW,GAAG,SAAdA,WAAWA,CAAIC,GAAG,EAAK;MAC3B,IAAMX,KAAK,GAAGW,GAAG,CAACX,KAAK;MACvB,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,YAAY;MACpC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,YAAY;MACnC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,YAAY;MACnC,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,YAAY;MACnC,OAAO,YAAY;IACrB,CAAC;;IAED;IACA,IAAMY,aAAa,GAAG,SAAhBA,aAAaA,CAAID,GAAG,EAAK;MAC7B,IAAMZ,IAAI,GAAGY,GAAG,CAACZ,IAAI,CAACc,kBAAkB,CAAC,OAAO,EAAE;QAChDC,OAAO,EAAE,MAAM;QACfC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbL,GAAG,EAAE;MACP,CAAC,CAAC;MACF,IAAMX,KAAK,GAAGW,GAAG,CAACX,KAAK;MACvB,UAAAiB,MAAA,CAAUjB,KAAK,qBAAAiB,MAAA,CAAkBlB,IAAI;IACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}