{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'FlashcardQuiz',\n  props: {\n    questions: {\n      type: Object,\n      required: true\n    },\n    minPoolSize: {\n      type: Number,\n      default: 3\n    }\n  },\n  emits: ['go-back', 'fetch-more-questions'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const difficulties = ['easy', 'medium', 'hard'];\n    const getClosestDifficulty = (from, available) => {\n      const idx = difficulties.indexOf(from);\n      for (let offset = 1; offset < difficulties.length; offset++) {\n        if (available.includes(difficulties[idx + offset])) return difficulties[idx + offset];\n        if (available.includes(difficulties[idx - offset])) return difficulties[idx - offset];\n      }\n      return available[0];\n    };\n    const questionPools = ref({\n      easy: [...(props.questions.easy || [])],\n      medium: [...(props.questions.medium || [])],\n      hard: [...(props.questions.hard || [])]\n    });\n    const currentDifficulty = ref('medium');\n    const currentQuestion = ref(null);\n    const showAnswer = ref(false);\n    const selectedAnswer = ref(null);\n    const showResults = ref(false);\n    const score = ref(0);\n    const userAnswers = ref([]);\n    const questionHistory = ref([]);\n    function pickNextQuestion() {\n      let pool = questionPools.value[currentDifficulty.value];\n      if (!pool || pool.length === 0) {\n        const available = difficulties.filter(d => questionPools.value[d] && questionPools.value[d].length > 0);\n        if (available.length === 0) {\n          currentQuestion.value = null;\n          return;\n        }\n        currentDifficulty.value = getClosestDifficulty(currentDifficulty.value, available);\n        pool = questionPools.value[currentDifficulty.value];\n      }\n      currentQuestion.value = pool.shift();\n      selectedAnswer.value = null;\n      showAnswer.value = false;\n      if (pool.length < props.minPoolSize) {\n        emit('fetch-more-questions', currentDifficulty.value);\n      }\n    }\n    pickNextQuestion();\n    const isLastQuestion = computed(() => {\n      return !Object.values(questionPools.value).some(pool => pool.length > 0) && !currentQuestion.value;\n    });\n    const isCorrect = computed(() => selectedAnswer.value === (currentQuestion.value ? currentQuestion.value.answer : null));\n    const selectAnswer = answer => {\n      if (showAnswer.value || !currentQuestion.value) return;\n      selectedAnswer.value = answer;\n      showAnswer.value = true;\n      const correct = isCorrect.value;\n      if (correct) score.value++;\n      userAnswers.value.push({\n        question: currentQuestion.value.text,\n        userAnswer: answer,\n        correctAnswer: currentQuestion.value.answer,\n        isCorrect: correct,\n        difficulty: currentDifficulty.value\n      });\n      questionHistory.value.push({\n        question: currentQuestion.value,\n        difficulty: currentDifficulty.value,\n        isCorrect: correct\n      });\n    };\n    const nextQuestion = () => {\n      if (isLastQuestion.value) {\n        showResults.value = true;\n        return;\n      }\n      const last = questionHistory.value[questionHistory.value.length - 1];\n      if (last) {\n        if (last.isCorrect) {\n          if (currentDifficulty.value === 'easy') currentDifficulty.value = 'medium';else if (currentDifficulty.value === 'medium') currentDifficulty.value = 'hard';\n        } else {\n          if (currentDifficulty.value === 'hard') currentDifficulty.value = 'medium';else if (currentDifficulty.value === 'medium') currentDifficulty.value = 'easy';\n        }\n      }\n      pickNextQuestion();\n    };\n    const restartQuiz = () => {\n      questionPools.value = {\n        easy: [...(props.questions.easy || [])],\n        medium: [...(props.questions.medium || [])],\n        hard: [...(props.questions.hard || [])]\n      };\n      currentDifficulty.value = 'medium';\n      currentQuestion.value = null;\n      showAnswer.value = false;\n      selectedAnswer.value = null;\n      showResults.value = false;\n      score.value = 0;\n      userAnswers.value = [];\n      questionHistory.value = [];\n      pickNextQuestion();\n    };\n    const goBack = () => {\n      emit('go-back');\n    };\n    const scorePercentage = computed(() => {\n      return userAnswers.value.length === 0 ? 0 : Math.round(score.value / userAnswers.value.length * 100);\n    });\n    const scoreClass = computed(() => {\n      return scorePercentage.value >= 75 ? 'score-green' : 'score-red';\n    });\n    const __returned__ = {\n      props,\n      emit,\n      difficulties,\n      getClosestDifficulty,\n      questionPools,\n      currentDifficulty,\n      currentQuestion,\n      showAnswer,\n      selectedAnswer,\n      showResults,\n      score,\n      userAnswers,\n      questionHistory,\n      pickNextQuestion,\n      isLastQuestion,\n      isCorrect,\n      selectAnswer,\n      nextQuestion,\n      restartQuiz,\n      goBack,\n      scorePercentage,\n      scoreClass,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","difficulties","getClosestDifficulty","from","available","idx","indexOf","offset","length","includes","questionPools","easy","questions","medium","hard","currentDifficulty","currentQuestion","showAnswer","selectedAnswer","showResults","score","userAnswers","questionHistory","pickNextQuestion","pool","value","filter","d","shift","minPoolSize","isLastQuestion","Object","values","some","isCorrect","answer","selectAnswer","correct","push","question","text","userAnswer","correctAnswer","difficulty","nextQuestion","last","restartQuiz","goBack","scorePercentage","Math","round","scoreClass"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/components/FlashcardQuiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"flashcard-quiz\">\r\n    <div v-if=\"!showResults\" class=\"quiz-content\">\r\n      <div class=\"progress-bar\">\r\n        <div class=\"progress\" :style=\"{ width: `${userAnswers.length + 1} / ${(userAnswers.length + 1 + Object.values(questionPools).reduce((a, b) => a + b.length, 0)) * 100}%` }\"></div>\r\n      </div>\r\n      \r\n      <div class=\"question-counter\">\r\n        Question {{ userAnswers.length + 1 }} (Difficulty: <b>{{ currentDifficulty }}</b>)\r\n      </div>\r\n\r\n      <div class=\"flashcard\">\r\n        <div class=\"question\">\r\n          {{ currentQuestion.text }}\r\n        </div>\r\n\r\n        <div class=\"options\">\r\n          <button\r\n            v-for=\"option in currentQuestion.options\"\r\n            :key=\"option.letter\"\r\n            class=\"option-btn\"\r\n            :class=\"{\r\n              'selected': selectedAnswer === option.letter,\r\n              'correct': showAnswer && option.letter === currentQuestion.answer,\r\n              'incorrect': showAnswer && selectedAnswer === option.letter && option.letter !== currentQuestion.answer\r\n            }\"\r\n            @click=\"selectAnswer(option.letter)\"\r\n            :disabled=\"showAnswer\"\r\n          >\r\n            {{ option.letter }}) {{ option.text }}\r\n          </button>\r\n        </div>\r\n\r\n        <div v-if=\"showAnswer\" class=\"feedback\">\r\n          <p :class=\"{ 'correct': isCorrect, 'incorrect': !isCorrect }\">\r\n            {{ isCorrect ? 'Correct!' : 'Incorrect!' }}\r\n          </p>\r\n        </div>\r\n\r\n        <button \r\n          v-if=\"showAnswer\"\r\n          class=\"next-btn\"\r\n          @click=\"nextQuestion\"\r\n        >\r\n          {{ isLastQuestion ? 'Finish Quiz' : 'Next Question' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"quiz-results\">\r\n      <h2>Quiz Results</h2>\r\n      <div class=\"score\" :class=\"scoreClass\">\r\n        <p class=\"score-value\">{{ score }} / {{ userAnswers.length }}</p>\r\n        <p class=\"score-percentage\">{{ scorePercentage }}%</p>\r\n      </div>\r\n      \r\n      <div class=\"detailed-results\">\r\n        <h3>Question Review</h3>\r\n        <div v-for=\"(answer, index) in userAnswers\" :key=\"index\" class=\"result-item\">\r\n          <div class=\"question-header\">\r\n            <span class=\"question-number\">Question {{ index + 1 }} ({{ answer.difficulty }})</span>\r\n            <span :class=\"['result-status', answer.isCorrect ? 'correct' : 'incorrect']\">\r\n              {{ answer.isCorrect ? '✓' : '✗' }}\r\n            </span>\r\n          </div>\r\n          <p class=\"question-text\">{{ answer.question }}</p>\r\n          <div class=\"answer-details\">\r\n            <p>Your answer: {{ answer.userAnswer }}</p>\r\n            <p>Correct answer: {{ answer.correctAnswer }}</p>\r\n            <p class=\"explanation\">{{ answer.explanation }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button class=\"restart-btn\" @click=\"restartQuiz\">Try Again</button>\r\n      <button class=\"back-btn\" @click=\"goBack\">Back to Upload</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  questions: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  minPoolSize: {\r\n    type: Number,\r\n    default: 3\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['go-back', 'fetch-more-questions']);\r\n\r\nconst difficulties = ['easy', 'medium', 'hard'];\r\nconst getClosestDifficulty = (from, available) => {\r\n  const idx = difficulties.indexOf(from);\r\n  for (let offset = 1; offset < difficulties.length; offset++) {\r\n    if (available.includes(difficulties[idx + offset])) return difficulties[idx + offset];\r\n    if (available.includes(difficulties[idx - offset])) return difficulties[idx - offset];\r\n  }\r\n  return available[0];\r\n};\r\n\r\nconst questionPools = ref({\r\n  easy: [...(props.questions.easy || [])],\r\n  medium: [...(props.questions.medium || [])],\r\n  hard: [...(props.questions.hard || [])]\r\n});\r\nconst currentDifficulty = ref('medium');\r\nconst currentQuestion = ref(null);\r\nconst showAnswer = ref(false);\r\nconst selectedAnswer = ref(null);\r\nconst showResults = ref(false);\r\nconst score = ref(0);\r\nconst userAnswers = ref([]);\r\nconst questionHistory = ref([]);\r\n\r\nfunction pickNextQuestion() {\r\n  let pool = questionPools.value[currentDifficulty.value];\r\n  if (!pool || pool.length === 0) {\r\n    const available = difficulties.filter(d => questionPools.value[d] && questionPools.value[d].length > 0);\r\n    if (available.length === 0) {\r\n      currentQuestion.value = null;\r\n      return;\r\n    }\r\n    currentDifficulty.value = getClosestDifficulty(currentDifficulty.value, available);\r\n    pool = questionPools.value[currentDifficulty.value];\r\n  }\r\n  currentQuestion.value = pool.shift();\r\n  selectedAnswer.value = null;\r\n  showAnswer.value = false;\r\n  if (pool.length < props.minPoolSize) {\r\n    emit('fetch-more-questions', currentDifficulty.value);\r\n  }\r\n}\r\n\r\npickNextQuestion();\r\n\r\nconst isLastQuestion = computed(() => {\r\n  return !Object.values(questionPools.value).some(pool => pool.length > 0) && !currentQuestion.value;\r\n});\r\n\r\nconst isCorrect = computed(() => selectedAnswer.value === (currentQuestion.value ? currentQuestion.value.answer : null));\r\n\r\nconst selectAnswer = (answer) => {\r\n  if (showAnswer.value || !currentQuestion.value) return;\r\n  selectedAnswer.value = answer;\r\n  showAnswer.value = true;\r\n  const correct = isCorrect.value;\r\n  if (correct) score.value++;\r\n  userAnswers.value.push({\r\n    question: currentQuestion.value.text,\r\n    userAnswer: answer,\r\n    correctAnswer: currentQuestion.value.answer,\r\n    isCorrect: correct,\r\n    difficulty: currentDifficulty.value\r\n  });\r\n  questionHistory.value.push({\r\n    question: currentQuestion.value,\r\n    difficulty: currentDifficulty.value,\r\n    isCorrect: correct\r\n  });\r\n};\r\n\r\nconst nextQuestion = () => {\r\n  if (isLastQuestion.value) {\r\n    showResults.value = true;\r\n    return;\r\n  }\r\n  const last = questionHistory.value[questionHistory.value.length - 1];\r\n  if (last) {\r\n    if (last.isCorrect) {\r\n      if (currentDifficulty.value === 'easy') currentDifficulty.value = 'medium';\r\n      else if (currentDifficulty.value === 'medium') currentDifficulty.value = 'hard';\r\n    } else {\r\n      if (currentDifficulty.value === 'hard') currentDifficulty.value = 'medium';\r\n      else if (currentDifficulty.value === 'medium') currentDifficulty.value = 'easy';\r\n    }\r\n  }\r\n  pickNextQuestion();\r\n};\r\n\r\nconst restartQuiz = () => {\r\n  questionPools.value = {\r\n    easy: [...(props.questions.easy || [])],\r\n    medium: [...(props.questions.medium || [])],\r\n    hard: [...(props.questions.hard || [])]\r\n  };\r\n  currentDifficulty.value = 'medium';\r\n  currentQuestion.value = null;\r\n  showAnswer.value = false;\r\n  selectedAnswer.value = null;\r\n  showResults.value = false;\r\n  score.value = 0;\r\n  userAnswers.value = [];\r\n  questionHistory.value = [];\r\n  pickNextQuestion();\r\n};\r\n\r\nconst goBack = () => {\r\n  emit('go-back');\r\n};\r\n\r\nconst scorePercentage = computed(() => {\r\n  return userAnswers.value.length === 0 ? 0 : Math.round((score.value / userAnswers.value.length) * 100);\r\n});\r\nconst scoreClass = computed(() => {\r\n  return scorePercentage.value >= 75 ? 'score-green' : 'score-red';\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flashcard-quiz {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.quiz-content {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress {\r\n  height: 100%;\r\n  background-color: #4CAF50;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.question-counter {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  color: #666;\r\n}\r\n\r\n.flashcard {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.question {\r\n  font-size: 1.2em;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.option-btn {\r\n  padding: 12px;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 6px;\r\n  background: white;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  text-align: left;\r\n  font-size: 1em;\r\n}\r\n\r\n.option-btn:hover:not(:disabled) {\r\n  border-color: #4CAF50;\r\n  background: #f8f8f8;\r\n}\r\n\r\n.option-btn.selected {\r\n  border-color: #4CAF50;\r\n  background: #f0f8f0;\r\n}\r\n\r\n.option-btn.correct {\r\n  border-color: #4CAF50;\r\n  background: #e8f5e9;\r\n}\r\n\r\n.option-btn.incorrect {\r\n  border-color: #f44336;\r\n  background: #ffebee;\r\n}\r\n\r\n.option-btn:disabled {\r\n  cursor: default;\r\n  opacity: 0.8;\r\n}\r\n\r\n.feedback {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: #f8f8f8;\r\n  border-radius: 6px;\r\n}\r\n\r\n.next-btn {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  margin-top: 20px;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.next-btn:hover {\r\n  background: #45a049;\r\n}\r\n\r\n.quiz-results {\r\n  text-align: center;\r\n  padding: 30px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.quiz-results h2 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.score {\r\n  font-size: 2.5em;\r\n  margin-bottom: 30px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\n.score-value {\r\n  font-size: 3.5em;\r\n  font-weight: 900;\r\n  margin-bottom: 0.2em;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-green {\r\n  color: #2e7d32;\r\n}\r\n\r\n.score-red {\r\n  color: #c62828;\r\n}\r\n\r\n.restart-btn, .back-btn {\r\n  padding: 12px 24px;\r\n  margin: 10px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.restart-btn {\r\n  background: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.restart-btn:hover {\r\n  background: #45a049;\r\n}\r\n\r\n.back-btn {\r\n  background: #f0f0f0;\r\n  color: #333;\r\n}\r\n\r\n.back-btn:hover {\r\n  background: #e0e0e0;\r\n}\r\n\r\n.detailed-results {\r\n  margin: 2rem 0;\r\n  text-align: left;\r\n}\r\n\r\n.result-item {\r\n  background: #f8f8f8;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.question-number {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.result-status {\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n}\r\n\r\n.result-status.correct {\r\n  color: #4CAF50;\r\n}\r\n\r\n.result-status.incorrect {\r\n  color: #f44336;\r\n}\r\n\r\n.question-text {\r\n  margin-bottom: 0.5rem;\r\n  color: #333;\r\n}\r\n\r\n.answer-details {\r\n  margin-top: 0.5rem;\r\n  padding-top: 0.5rem;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.answer-details p {\r\n  margin: 0.3rem 0;\r\n  color: #666;\r\n}\r\n\r\n.explanation {\r\n  margin-top: 0.5rem;\r\n  padding: 0.5rem;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  border-left: 3px solid #4CAF50;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}