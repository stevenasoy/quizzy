{"ast":null,"code":"import _objectSpread from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/StevenJakeASOY/Documents/cursor-projects/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport FileErrorDisplay from './components/FileErrorDisplay.vue';\nimport QuizResults from './components/QuizResults.vue';\nimport FlashcardQuiz from './components/FlashcardQuiz.vue';\nimport Sidebar from './components/Sidebar.vue';\nimport QuizHistoryDetails from './components/QuizHistoryDetails.vue';\nimport AccountButton from './components/AccountButton.vue';\nimport StudyStats from './components/StudyStats.vue';\nimport { calculatePredictedScore, calculateScore, processQuizResponse, isSimilarQuestion } from './algorithms';\nimport { updateSpacedRepetition } from './algorithms/spaced-repetition';\nimport { useStore } from 'vuex';\nimport { useAuth } from './composables/useAuth';\nexport default {\n  __name: 'App',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var store = useStore();\n    var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n    // File handling state\n    var selectedFiles = ref([]);\n    var fileInput = ref(null);\n    var unsupportedFiles = ref([]);\n    var extractionErrors = ref([]);\n\n    // Quiz state\n    var questionCount = ref('');\n    var isLoading = ref(false);\n    var error = ref('');\n    var predictedScore = ref(null);\n    var quizStarted = ref(false);\n    var quizFinished = ref(false);\n    var adaptiveQuestions = ref([]);\n    var userResponses = ref([]);\n    var extractedContent = ref('');\n    var selectedQuiz = ref(null);\n\n    // Add isRetaking flag to track retakes\n    var isRetaking = ref(false);\n    var retakeIndex = ref(-1);\n\n    // Stats view state\n    var showStats = ref(false);\n\n    // Add computed property for quiz history\n    var quizHistory = computed(function () {\n      return store.state.quizHistory;\n    });\n\n    // Initialize store and load data\n    onMounted(function () {\n      // Initialize store\n      store.dispatch('initializeStore');\n\n      // Load quiz history if user is logged in\n      if (user.value) {\n        loadQuizzes();\n      }\n    });\n\n    // Calculate number of due questions with safety check\n    var dueCount = computed(function () {\n      if (!store.state.quizzes) return 0;\n      return store.getters.getDueQuestions.length;\n    });\n\n    // Computed properties\n    var isFormValid = computed(function () {\n      return selectedFiles.value.length > 0 && questionCount.value > 0;\n    });\n    var hasFileErrors = computed(function () {\n      return extractionErrors.value.length > 0 || unsupportedFiles.value.length > 0;\n    });\n    var getPredictedScoreClass = computed(function () {\n      if (predictedScore.value >= 80) return 'high';\n      if (predictedScore.value >= 60) return 'medium';\n      return 'low';\n    });\n\n    // File handling methods\n    var triggerFileInput = function triggerFileInput() {\n      fileInput.value.click();\n    };\n    var handleFileSelect = function handleFileSelect(event) {\n      var files = Array.from(event.target.files);\n      addFiles(files);\n    };\n    var handleDrop = function handleDrop(event) {\n      var files = Array.from(event.dataTransfer.files);\n      addFiles(files);\n    };\n    var addFiles = function addFiles(files) {\n      var validTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'text/plain', 'application/pdf', 'image/png', 'image/jpeg', 'image/jpg', 'image/tiff', 'image/bmp'];\n      var validFiles = [];\n      var invalidFiles = [];\n      files.forEach(function (file) {\n        if (validTypes.includes(file.type)) {\n          validFiles.push(file);\n        } else {\n          invalidFiles.push(file);\n        }\n      });\n      selectedFiles.value = [].concat(_toConsumableArray(selectedFiles.value), validFiles);\n      unsupportedFiles.value = [].concat(_toConsumableArray(unsupportedFiles.value), invalidFiles);\n    };\n    var removeFile = function removeFile(index) {\n      selectedFiles.value.splice(index, 1);\n    };\n\n    // Quiz handling methods\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fileContents, validContents, requestedQuestionCount, questions;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (isFormValid.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              isLoading.value = true;\n              error.value = '';\n              adaptiveQuestions.value = [];\n              predictedScore.value = null;\n              quizStarted.value = false;\n              userResponses.value = [];\n              extractedContent.value = '';\n              extractionErrors.value = [];\n              _context.prev = 10;\n              console.log('Processing files:', selectedFiles.value.map(function (f) {\n                return {\n                  name: f.name,\n                  type: f.type\n                };\n              }));\n              _context.next = 14;\n              return Promise.all(selectedFiles.value.map(function (file) {\n                return readFileContent(file);\n              }));\n            case 14:\n              fileContents = _context.sent;\n              validContents = fileContents.filter(function (content) {\n                return content && content.trim().length > 0;\n              });\n              console.log('Number of files with valid content:', validContents.length);\n              if (!(validContents.length === 0)) {\n                _context.next = 19;\n                break;\n              }\n              throw new Error('No valid content could be extracted from the selected files.');\n            case 19:\n              extractedContent.value = validContents.join('\\n\\n');\n              console.log('Total content length:', extractedContent.value.length);\n              if (!(extractedContent.value.trim().length < 50)) {\n                _context.next = 23;\n                break;\n              }\n              throw new Error('The extracted content is too short to generate meaningful questions.');\n            case 23:\n              requestedQuestionCount = Number(questionCount.value);\n              console.log('Requesting questions:', requestedQuestionCount);\n              _context.next = 27;\n              return generateQuestions(extractedContent.value, requestedQuestionCount);\n            case 27:\n              questions = _context.sent;\n              if (!(!questions || questions.length === 0)) {\n                _context.next = 30;\n                break;\n              }\n              throw new Error('No valid questions could be generated.');\n            case 30:\n              console.log('Generated questions:', questions.length);\n              adaptiveQuestions.value = questions;\n              predictedScore.value = calculatePredictedScore(adaptiveQuestions.value);\n              _context.next = 41;\n              break;\n            case 35:\n              _context.prev = 35;\n              _context.t0 = _context[\"catch\"](10);\n              console.error('Error in handleSubmit:', _context.t0);\n              error.value = _context.t0.message || 'An unexpected error occurred while generating questions.';\n              adaptiveQuestions.value = [];\n              predictedScore.value = null;\n            case 41:\n              _context.prev = 41;\n              isLoading.value = false;\n              return _context.finish(41);\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[10, 35, 41, 44]]);\n      }));\n      return function handleSubmit() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var startQuiz = function startQuiz() {\n      quizStarted.value = true;\n      quizFinished.value = false;\n    };\n    var handleQuizComplete = function handleQuizComplete(responses) {\n      userResponses.value = responses;\n\n      // Update the adaptiveQuestions with user answers and spaced repetition data\n      adaptiveQuestions.value = adaptiveQuestions.value.map(function (question, index) {\n        var response = responses[index];\n        var performance = response !== null && response !== void 0 && response.correct ? 5 : 0; // 5 for correct, 0 for incorrect\n\n        // Update spaced repetition data\n        var updatedSpacedRepetition = updateSpacedRepetition(question, performance);\n        return _objectSpread(_objectSpread({}, question), {}, {\n          userAnswer: response === null || response === void 0 ? void 0 : response.userAnswer,\n          isCorrect: response === null || response === void 0 ? void 0 : response.correct,\n          spacedRepetition: updatedSpacedRepetition\n        });\n      });\n\n      // Set quiz states\n      quizStarted.value = false;\n      quizFinished.value = true;\n\n      // Save results\n      saveQuizResults();\n    };\n    var restartQuiz = function restartQuiz() {\n      quizStarted.value = true;\n      quizFinished.value = false;\n      userResponses.value = [];\n    };\n    var resetToMainScreen = function resetToMainScreen() {\n      selectedFiles.value = [];\n      unsupportedFiles.value = [];\n      extractionErrors.value = [];\n      questionCount.value = '';\n      error.value = '';\n      isLoading.value = false;\n      predictedScore.value = null;\n      quizStarted.value = false;\n      quizFinished.value = false;\n      adaptiveQuestions.value = [];\n      userResponses.value = [];\n      if (fileInput.value) {\n        fileInput.value.value = '';\n      }\n    };\n\n    // Helper functions\n    function readFileContent(_x) {\n      return _readFileContent.apply(this, arguments);\n    }\n    function _readFileContent() {\n      _readFileContent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(file) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", new Promise(function (resolve) {\n                try {\n                  console.log('File type:', file.type);\n                  console.log('File name:', file.name);\n                  var formData = new FormData();\n                  formData.append('file', file);\n                  var backendUrl = process.env.VUE_APP_BACKEND_URL || 'http://localhost:5001';\n                  fetch(\"\".concat(backendUrl, \"/extract-file\"), {\n                    method: 'POST',\n                    body: formData\n                  }).then(function (res) {\n                    return res.json();\n                  }).then(function (data) {\n                    if (data.text) {\n                      resolve(data.text);\n                    } else {\n                      extractionErrors.value.push({\n                        fileName: file.name,\n                        message: data.error || 'Failed to extract text from file'\n                      });\n                      resolve('');\n                    }\n                  })[\"catch\"](function (error) {\n                    console.error('Error processing file:', error);\n                    extractionErrors.value.push({\n                      fileName: file.name,\n                      message: \"Error processing file: \".concat(error.message)\n                    });\n                    resolve('');\n                  });\n                } catch (error) {\n                  console.error('Error preparing file:', error);\n                  extractionErrors.value.push({\n                    fileName: file.name,\n                    message: \"Error preparing file: \".concat(error.message)\n                  });\n                  resolve('');\n                }\n              }));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return _readFileContent.apply(this, arguments);\n    }\n    function generateQuestions(_x2, _x3) {\n      return _generateQuestions.apply(this, arguments);\n    } // Results formatting\n    function _generateQuestions() {\n      _generateQuestions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(content, count) {\n        var maxRetries, retryCount, allQuestions, _response$data, remainingCount, strategy, prompt, response, responseText, newQuestions, questionsWithIds, uniqueNewQuestions, _error$response, _error$response2;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              maxRetries = 3;\n              retryCount = 0;\n              allQuestions = [];\n            case 3:\n              if (!(retryCount < maxRetries && allQuestions.length < count)) {\n                _context6.next = 55;\n                break;\n              }\n              _context6.prev = 4;\n              remainingCount = count - allQuestions.length;\n              strategy = retryCount % 3;\n              prompt = \"Generate exactly \".concat(remainingCount, \" questions. DO NOT use markdown formatting or asterisks for emphasis.\\nFOLLOW THIS EXACT FORMAT WITH NO DEVIATIONS:\\n\\nFor Multiple Choice Questions:\\nQuestion: What is the question text?\\nA) First option\\nB) Second option\\nC) Third option\\nD) Fourth option\\nAnswer: A* (or B*, C*, D* - add asterisk to correct answer)\\nDifficulty: easy (or medium or hard)\\n\\nFor True/False Questions:\\nTrue/False: What is the question text?\\nAnswer: True* (or False* - add asterisk to correct answer)\\nDifficulty: easy (or medium or hard)\\n\\nREQUIREMENTS:\\n1. Use the exact format shown above\\n2. Do not add any extra formatting or text\\n3. Do not use markdown\\n4. Do not use bold or italics\\n5. Each question must end with a difficulty level\\n6. Questions must be based on this content:\\n\\n\").concat(content, \"\\n\\nSTRATEGY: \");\n              _context6.t0 = strategy;\n              _context6.next = _context6.t0 === 0 ? 11 : _context6.t0 === 1 ? 13 : _context6.t0 === 2 ? 15 : 17;\n              break;\n            case 11:\n              prompt += 'Create a mix of multiple-choice and true/false questions that directly test understanding of the content.';\n              return _context6.abrupt(\"break\", 17);\n            case 13:\n              prompt += 'Create questions that focus on what is NOT mentioned or opposite relationships in the content.';\n              return _context6.abrupt(\"break\", 17);\n            case 15:\n              prompt += 'Create questions that test application and inference of the concepts mentioned in the content.';\n              return _context6.abrupt(\"break\", 17);\n            case 17:\n              _context6.next = 19;\n              return axios.post(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\".concat(process.env.VUE_APP_GEMINI_API_KEY), {\n                contents: [{\n                  parts: [{\n                    text: prompt\n                  }]\n                }],\n                generationConfig: {\n                  temperature: 0.7 + retryCount * 0.1,\n                  topK: 40,\n                  topP: 0.95,\n                  maxOutputTokens: 2048\n                }\n              }, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 19:\n              response = _context6.sent;\n              if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data = _response$data.candidates) !== null && _response$data !== void 0 && (_response$data = _response$data[0]) !== null && _response$data !== void 0 && (_response$data = _response$data.content) !== null && _response$data !== void 0 && (_response$data = _response$data.parts) !== null && _response$data !== void 0 && (_response$data = _response$data[0]) !== null && _response$data !== void 0 && _response$data.text) {\n                _context6.next = 22;\n                break;\n              }\n              throw new Error('Invalid response format from Gemini API');\n            case 22:\n              responseText = response.data.candidates[0].content.parts[0].text.replace(/\\*\\*/g, '') // Remove markdown bold\n              .replace(/\\*/g, '*') // Normalize asterisks\n              .replace(/[\"\"]/g, '\"'); // Normalize quotes\n              console.log('Generated response:', responseText);\n              newQuestions = processQuizResponse(responseText, content).questions;\n              if (!(newQuestions.length === 0)) {\n                _context6.next = 30;\n                break;\n              }\n              console.error('No valid questions parsed from response');\n              _context6.next = 29;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 1000);\n              });\n            case 29:\n              return _context6.abrupt(\"continue\", 3);\n            case 30:\n              // Add unique IDs and initialize spaced repetition data for new questions\n              questionsWithIds = newQuestions.map(function (q) {\n                return _objectSpread(_objectSpread({}, q), {}, {\n                  id: crypto.randomUUID(),\n                  spacedRepetition: {\n                    repetitions: 0,\n                    ease: 2.5,\n                    interval: 1,\n                    nextReviewDate: null,\n                    lastReviewDate: null\n                  }\n                });\n              });\n              uniqueNewQuestions = questionsWithIds.filter(function (newQ) {\n                return !allQuestions.some(function (existingQ) {\n                  return isSimilarQuestion(newQ, existingQ);\n                });\n              });\n              allQuestions = [].concat(_toConsumableArray(allQuestions), _toConsumableArray(uniqueNewQuestions));\n              if (!(allQuestions.length >= count)) {\n                _context6.next = 35;\n                break;\n              }\n              return _context6.abrupt(\"return\", allQuestions.slice(0, count));\n            case 35:\n              retryCount++;\n              _context6.next = 53;\n              break;\n            case 38:\n              _context6.prev = 38;\n              _context6.t1 = _context6[\"catch\"](4);\n              console.error(\"Attempt \".concat(retryCount + 1, \" failed:\"), _context6.t1);\n              retryCount++;\n              if (!(((_error$response = _context6.t1.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429)) {\n                _context6.next = 47;\n                break;\n              }\n              _context6.next = 45;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 2000 * retryCount);\n              });\n            case 45:\n              _context6.next = 53;\n              break;\n            case 47:\n              if (!(retryCount === maxRetries)) {\n                _context6.next = 51;\n                break;\n              }\n              throw new Error(\"Failed to generate enough unique questions after \".concat(maxRetries, \" attempts. \").concat(((_error$response2 = _context6.t1.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.error) === null || _error$response2 === void 0 ? void 0 : _error$response2.message) || _context6.t1.message));\n            case 51:\n              _context6.next = 53;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 1000);\n              });\n            case 53:\n              _context6.next = 3;\n              break;\n            case 55:\n              if (!(allQuestions.length < count)) {\n                _context6.next = 57;\n                break;\n              }\n              throw new Error(\"Could only generate \".concat(allQuestions.length, \" unique questions out of \").concat(count, \" requested. Please try with different content or reduce the number of questions.\"));\n            case 57:\n              return _context6.abrupt(\"return\", allQuestions);\n            case 58:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[4, 38]]);\n      }));\n      return _generateQuestions.apply(this, arguments);\n    }\n    var formatQuestionsForResults = computed(function () {\n      return adaptiveQuestions.value.map(function (q, index) {\n        var _userResponses$value$, _userResponses$value$2;\n        return {\n          text: q.text,\n          type: q.type,\n          options: q.options,\n          userAnswer: (_userResponses$value$ = userResponses.value[index]) === null || _userResponses$value$ === void 0 ? void 0 : _userResponses$value$.userAnswer,\n          correctAnswer: q.correctAnswer,\n          explanation: q.explanation,\n          isCorrect: (_userResponses$value$2 = userResponses.value[index]) === null || _userResponses$value$2 === void 0 ? void 0 : _userResponses$value$2.correct\n        };\n      });\n    });\n    var formatUserAnswersForResults = computed(function () {\n      return userResponses.value.map(function (r) {\n        return r.userAnswer;\n      });\n    });\n    var correctAnswersCount = computed(function () {\n      return userResponses.value.filter(function (r) {\n        return r.correct;\n      }).length;\n    });\n\n    // Update the calculateScore function\n    var score = computed(function () {\n      if (!userResponses.value || userResponses.value.length === 0) return 0;\n      return Math.round(correctAnswersCount.value / userResponses.value.length * 100);\n    });\n\n    // Update the saveQuizResults function to use Vuex\n    var saveQuizResults = function saveQuizResults() {\n      var _selectedFiles$value$;\n      var quizResult = {\n        topic: ((_selectedFiles$value$ = selectedFiles.value[0]) === null || _selectedFiles$value$ === void 0 ? void 0 : _selectedFiles$value$.name) || 'Untitled Quiz',\n        score: score.value,\n        total_questions: adaptiveQuestions.value.length,\n        duration: 0,\n        // You can add duration tracking if needed\n        questions: adaptiveQuestions.value.map(function (q, index) {\n          var _userResponses$value$3, _userResponses$value$4;\n          return {\n            id: q.id,\n            text: q.text,\n            type: q.type,\n            options: q.options,\n            userAnswer: (_userResponses$value$3 = userResponses.value[index]) === null || _userResponses$value$3 === void 0 ? void 0 : _userResponses$value$3.userAnswer,\n            correctAnswer: q.correctAnswer,\n            isCorrect: (_userResponses$value$4 = userResponses.value[index]) === null || _userResponses$value$4 === void 0 ? void 0 : _userResponses$value$4.correct,\n            explanation: q.explanation,\n            difficulty: q.difficulty\n          };\n        })\n      };\n\n      // Save quiz result to store\n      store.dispatch('addQuizToHistory', quizResult);\n\n      // Update the questions in the store with their new spaced repetition data\n      store.commit('updateQuestions', adaptiveQuestions.value);\n      isRetaking.value = false;\n      retakeIndex.value = -1;\n    };\n\n    // Update the handleRetakeQuiz function to set retake flags\n    var handleRetakeQuiz = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(quizToRetake) {\n        var file, requestedQuestionCount, questions;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // Find the index of the quiz being retaken\n              retakeIndex.value = quizHistory.value.findIndex(function (quiz) {\n                return quiz.fileName === quizToRetake.fileName && quiz.questionCount === quizToRetake.questionCount && quiz.fileContent === quizToRetake.fileContent;\n              });\n              if (!(retakeIndex.value === -1)) {\n                _context2.next = 4;\n                break;\n              }\n              console.error('Could not find original quiz to retake');\n              return _context2.abrupt(\"return\");\n            case 4:\n              isRetaking.value = true;\n\n              // Reset quiz state\n              quizStarted.value = false;\n              quizFinished.value = false;\n              predictedScore.value = null;\n              error.value = '';\n              adaptiveQuestions.value = [];\n              userResponses.value = [];\n              selectedQuiz.value = null; // Reset selected quiz\n\n              // Set the question count from the previous quiz\n              questionCount.value = quizToRetake.questionCount.toString();\n\n              // Create a dummy file with the same name\n              file = new File([''], quizToRetake.fileName, {\n                type: 'text/plain'\n              }); // Set the selected file and content\n              selectedFiles.value = [file];\n              extractedContent.value = quizToRetake.fileContent;\n\n              // Generate new quiz using the stored content\n              _context2.prev = 16;\n              isLoading.value = true;\n              requestedQuestionCount = Number(questionCount.value);\n              _context2.next = 21;\n              return generateQuestions(extractedContent.value, requestedQuestionCount);\n            case 21:\n              questions = _context2.sent;\n              if (!(!questions || questions.length === 0)) {\n                _context2.next = 24;\n                break;\n              }\n              throw new Error('No valid questions could be generated.');\n            case 24:\n              adaptiveQuestions.value = questions;\n              predictedScore.value = calculatePredictedScore(adaptiveQuestions.value);\n\n              // After generating questions, start the quiz\n              quizStarted.value = true;\n              _context2.next = 34;\n              break;\n            case 29:\n              _context2.prev = 29;\n              _context2.t0 = _context2[\"catch\"](16);\n              error.value = \"Error generating questions: \".concat(_context2.t0.message);\n              // Reset retake flags on error\n              isRetaking.value = false;\n              retakeIndex.value = -1;\n            case 34:\n              _context2.prev = 34;\n              isLoading.value = false;\n              return _context2.finish(34);\n            case 37:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[16, 29, 34, 37]]);\n      }));\n      return function handleRetakeQuiz(_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // Update handleCreateQuiz to reset retake flags\n    var handleCreateQuiz = function handleCreateQuiz() {\n      showStats.value = false;\n      selectedQuiz.value = null;\n      quizStarted.value = false;\n      quizFinished.value = false;\n      predictedScore.value = null;\n      selectedFiles.value = [];\n      questionCount.value = '';\n      error.value = '';\n      extractedContent.value = '';\n      adaptiveQuestions.value = [];\n      userResponses.value = [];\n      isRetaking.value = false;\n      retakeIndex.value = -1;\n    };\n\n    // Add the clearHistory function\n    var clearHistory = function clearHistory() {\n      if (confirm('Are you sure you want to clear all quiz history? This cannot be undone.')) {\n        store.dispatch('clearQuizHistory');\n      }\n    };\n\n    // Add function to handle quiz selection\n    var handleQuizSelect = function handleQuizSelect(quiz) {\n      if (showStats.value) {\n        showStats.value = false;\n        // Add small delay to ensure smooth transition\n        setTimeout(function () {\n          selectedQuiz.value = quiz;\n        }, 100);\n      } else {\n        selectedQuiz.value = quiz;\n      }\n    };\n\n    // Add new method to handle create quiz from stats view\n    var handleCreateQuizFromStats = function handleCreateQuizFromStats() {\n      showStats.value = false;\n      handleCreateQuiz();\n    };\n    var showAuthModal = ref(false);\n\n    // Add loadQuizzes function\n    var loadQuizzes = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              if (!user.value) {\n                _context3.next = 4;\n                break;\n              }\n              _context3.next = 4;\n              return store.dispatch('loadQuizHistory');\n            case 4:\n              _context3.next = 9;\n              break;\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading quizzes:', _context3.t0);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n      return function loadQuizzes() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // Add auth state change handler\n    watch(user, /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(newUser) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!newUser) {\n                _context4.next = 5;\n                break;\n              }\n              _context4.next = 3;\n              return loadQuizzes();\n            case 3:\n              _context4.next = 6;\n              break;\n            case 5:\n              // User logged out, clear the quiz history from store\n              store.commit('clearQuizHistory');\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n    var handleQuestionUpdate = function handleQuestionUpdate(updatedQuestion) {\n      // Update the question in adaptiveQuestions\n      var index = adaptiveQuestions.value.findIndex(function (q) {\n        return q.id === updatedQuestion.id;\n      });\n      if (index !== -1) {\n        adaptiveQuestions.value[index] = _objectSpread(_objectSpread({}, adaptiveQuestions.value[index]), updatedQuestion);\n      }\n    };\n    var __returned__ = {\n      store: store,\n      user: user,\n      selectedFiles: selectedFiles,\n      fileInput: fileInput,\n      unsupportedFiles: unsupportedFiles,\n      extractionErrors: extractionErrors,\n      questionCount: questionCount,\n      isLoading: isLoading,\n      error: error,\n      predictedScore: predictedScore,\n      quizStarted: quizStarted,\n      quizFinished: quizFinished,\n      adaptiveQuestions: adaptiveQuestions,\n      userResponses: userResponses,\n      extractedContent: extractedContent,\n      selectedQuiz: selectedQuiz,\n      isRetaking: isRetaking,\n      retakeIndex: retakeIndex,\n      showStats: showStats,\n      quizHistory: quizHistory,\n      dueCount: dueCount,\n      isFormValid: isFormValid,\n      hasFileErrors: hasFileErrors,\n      getPredictedScoreClass: getPredictedScoreClass,\n      triggerFileInput: triggerFileInput,\n      handleFileSelect: handleFileSelect,\n      handleDrop: handleDrop,\n      addFiles: addFiles,\n      removeFile: removeFile,\n      handleSubmit: handleSubmit,\n      startQuiz: startQuiz,\n      handleQuizComplete: handleQuizComplete,\n      restartQuiz: restartQuiz,\n      resetToMainScreen: resetToMainScreen,\n      readFileContent: readFileContent,\n      generateQuestions: generateQuestions,\n      formatQuestionsForResults: formatQuestionsForResults,\n      formatUserAnswersForResults: formatUserAnswersForResults,\n      correctAnswersCount: correctAnswersCount,\n      score: score,\n      saveQuizResults: saveQuizResults,\n      handleRetakeQuiz: handleRetakeQuiz,\n      handleCreateQuiz: handleCreateQuiz,\n      clearHistory: clearHistory,\n      handleQuizSelect: handleQuizSelect,\n      handleCreateQuizFromStats: handleCreateQuizFromStats,\n      showAuthModal: showAuthModal,\n      loadQuizzes: loadQuizzes,\n      handleQuestionUpdate: handleQuestionUpdate,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      watch: watch,\n      get axios() {\n        return axios;\n      },\n      FileErrorDisplay: FileErrorDisplay,\n      QuizResults: QuizResults,\n      FlashcardQuiz: FlashcardQuiz,\n      Sidebar: Sidebar,\n      QuizHistoryDetails: QuizHistoryDetails,\n      AccountButton: AccountButton,\n      StudyStats: StudyStats,\n      get calculatePredictedScore() {\n        return calculatePredictedScore;\n      },\n      get calculateScore() {\n        return calculateScore;\n      },\n      get processQuizResponse() {\n        return processQuizResponse;\n      },\n      get isSimilarQuestion() {\n        return isSimilarQuestion;\n      },\n      get updateSpacedRepetition() {\n        return updateSpacedRepetition;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get useAuth() {\n        return useAuth;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","axios","FileErrorDisplay","QuizResults","FlashcardQuiz","Sidebar","QuizHistoryDetails","AccountButton","StudyStats","calculatePredictedScore","calculateScore","processQuizResponse","isSimilarQuestion","updateSpacedRepetition","useStore","useAuth","store","_useAuth","user","selectedFiles","fileInput","unsupportedFiles","extractionErrors","questionCount","isLoading","error","predictedScore","quizStarted","quizFinished","adaptiveQuestions","userResponses","extractedContent","selectedQuiz","isRetaking","retakeIndex","showStats","quizHistory","state","dispatch","value","loadQuizzes","dueCount","quizzes","getters","getDueQuestions","length","isFormValid","hasFileErrors","getPredictedScoreClass","triggerFileInput","click","handleFileSelect","event","files","Array","from","target","addFiles","handleDrop","dataTransfer","validTypes","validFiles","invalidFiles","forEach","file","includes","type","push","concat","_toConsumableArray","removeFile","index","splice","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fileContents","validContents","requestedQuestionCount","questions","wrap","_callee$","_context","prev","next","abrupt","console","log","map","f","name","Promise","all","readFileContent","sent","filter","content","trim","Error","join","Number","generateQuestions","t0","message","finish","stop","apply","arguments","startQuiz","handleQuizComplete","responses","question","response","performance","correct","updatedSpacedRepetition","_objectSpread","userAnswer","isCorrect","spacedRepetition","saveQuizResults","restartQuiz","resetToMainScreen","_x","_readFileContent","_callee5","_callee5$","_context5","resolve","formData","FormData","append","backendUrl","process","env","VUE_APP_BACKEND_URL","fetch","method","body","then","res","json","data","text","fileName","_x2","_x3","_generateQuestions","_callee6","count","maxRetries","retryCount","allQuestions","_response$data","remainingCount","strategy","prompt","responseText","newQuestions","questionsWithIds","uniqueNewQuestions","_error$response","_error$response2","_callee6$","_context6","post","VUE_APP_GEMINI_API_KEY","contents","parts","generationConfig","temperature","topK","topP","maxOutputTokens","headers","candidates","replace","setTimeout","q","id","crypto","randomUUID","repetitions","ease","interval","nextReviewDate","lastReviewDate","newQ","some","existingQ","slice","t1","status","formatQuestionsForResults","_userResponses$value$","_userResponses$value$2","options","correctAnswer","explanation","formatUserAnswersForResults","r","correctAnswersCount","score","Math","round","_selectedFiles$value$","quizResult","topic","total_questions","duration","_userResponses$value$3","_userResponses$value$4","difficulty","commit","handleRetakeQuiz","_ref3","_callee2","quizToRetake","_callee2$","_context2","findIndex","quiz","fileContent","toString","File","_x4","handleCreateQuiz","clearHistory","confirm","handleQuizSelect","handleCreateQuizFromStats","showAuthModal","_ref4","_callee3","_callee3$","_context3","_ref5","_callee4","newUser","_callee4$","_context4","_x5","handleQuestionUpdate","updatedQuestion"],"sources":["C:/Users/StevenJakeASOY/Documents/cursor-projects/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <AccountButton @showAuthModal=\"showAuthModal = true\" />\n    <Sidebar \n      :quiz-history=\"quizHistory\" \n      @create-quiz=\"handleCreateQuiz\"\n      @retake-quiz=\"handleRetakeQuiz\"\n      @clear-history=\"clearHistory\"\n      @select-quiz=\"handleQuizSelect\"\n      @view-stats=\"showStats = true\"\n    />\n    <div class=\"main-content\">\n      <div v-if=\"showStats\" class=\"stats-view\">\n        <div class=\"stats-header-actions\">\n          <button class=\"back-btn\" @click=\"showStats = false\">\n            ← Back to Quiz\n          </button>\n          <button class=\"create-quiz-btn\" @click=\"handleCreateQuizFromStats\">\n            + Create New Quiz\n          </button>\n        </div>\n        <StudyStats :quiz-history=\"quizHistory\" />\n      </div>\n      \n      <div v-else class=\"upload-container\">\n        <h1>QUIZZy</h1>\n        \n        <div v-if=\"selectedQuiz\" class=\"quiz-details-container\">\n          <QuizHistoryDetails\n            :quiz=\"selectedQuiz\"\n            @retake-quiz=\"handleRetakeQuiz\"\n            @close=\"selectedQuiz = null\"\n          />\n        </div>\n\n        <div v-else-if=\"!quizStarted && !quizFinished\" class=\"file-upload-section\">\n          <h2>Upload Files</h2>\n          <div class=\"upload-area\" \n            @dragover.prevent \n            @drop.prevent=\"handleDrop\"\n            @click=\"triggerFileInput\"\n            role=\"button\"\n            tabindex=\"0\"\n            @keydown.enter=\"triggerFileInput\"\n          >\n            <input \n              type=\"file\" \n              @change=\"handleFileSelect\" \n              accept=\".pdf,.docx,.pptx,.txt\"\n              ref=\"fileInput\"\n              class=\"file-input\"\n            >\n            <div class=\"upload-prompt\">\n              <p>Drag and drop files here or click to select</p>\n              <div class=\"supported-formats\">\n                <p>Supported formats:</p>\n                <ul>\n                  <li><span class=\"format-icon\">📄</span> Documents (PDF, DOCX)</li>\n                  <li><span class=\"format-icon\">📊</span> Presentations (PPTX)</li>\n                  <li><span class=\"format-icon\">📝</span> Text files (TXT)</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          <div v-if=\"hasFileErrors\" class=\"error-section\">\n            <FileErrorDisplay\n              :extraction-errors=\"extractionErrors\"\n              :unsupported-files=\"unsupportedFiles\"\n            />\n          </div>\n\n          <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n            <h3>Selected Files:</h3>\n            <ul>\n              <li v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-item\">\n                <span class=\"file-name\">{{ file.name }}</span>\n                <button @click=\"removeFile(index)\" class=\"remove-btn\" title=\"Remove file\">×</button>\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"questions-section\">\n            <h2>Number of Questions</h2>\n            <div class=\"question-input\">\n              <input\n                type=\"number\"\n                v-model=\"questionCount\"\n                min=\"1\"\n                max=\"20\"\n                placeholder=\"Enter number of questions\"\n              />\n            </div>\n          </div>\n\n          <button \n            class=\"submit-btn\" \n            :disabled=\"!isFormValid || isLoading\"\n            @click=\"handleSubmit\"\n          >\n            {{ isLoading ? 'Generating Questions...' : 'Submit' }}\n          </button>\n        </div>\n\n        <div v-if=\"predictedScore !== null && !quizStarted && !quizFinished\">\n          <div class=\"predicted-score-container\">\n            <h2>Ready to Start!</h2>\n            <div class=\"score-prediction\">\n              <div class=\"score-circle\" :class=\"getPredictedScoreClass\">\n                <span class=\"predicted-value\">{{ predictedScore }}%</span>\n                <span class=\"prediction-label\">Predicted Score</span>\n              </div>\n            </div>\n            <p class=\"prediction-explanation\">\n              Based on your study material, we predict you'll score around {{ predictedScore }}%.\n            </p>\n            <button class=\"start-quiz-btn\" @click=\"startQuiz\">Start Quiz</button>\n          </div>\n        </div>\n\n        <FlashcardQuiz\n          v-if=\"quizStarted && !quizFinished\"\n          :questions=\"adaptiveQuestions\"\n          :total-questions=\"Number(questionCount)\"\n          @quiz-completed=\"handleQuizComplete\"\n          @update-question=\"handleQuestionUpdate\"\n        />\n\n        <QuizResults\n          v-if=\"quizFinished\"\n          :questions=\"formatQuestionsForResults\"\n          :user-answers=\"formatUserAnswersForResults\"\n          :score=\"correctAnswersCount\"\n          :predicted-score=\"predictedScore\"\n          @restart=\"restartQuiz\"\n          @go-back=\"resetToMainScreen\"\n        />\n\n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Overlay -->\n    <div v-if=\"isLoading\" class=\"loading-overlay\">\n      <div class=\"loading-content\">\n        <div class=\"typewriter\">Generating quiz</div>\n        <div class=\"dots\">\n          <span>.</span>\n          <span>.</span>\n          <span>.</span>\n        </div>\n      </div>\n    </div>\n\n    <nav class=\"main-nav\">\n      <div v-if=\"dueCount > 0\" class=\"review-button\" @click=\"showReviewSession = true\">\n        {{ dueCount }} Due for Review\n      </div>\n    </nav>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport FileErrorDisplay from './components/FileErrorDisplay.vue';\nimport QuizResults from './components/QuizResults.vue';\nimport FlashcardQuiz from './components/FlashcardQuiz.vue';\nimport Sidebar from './components/Sidebar.vue';\nimport QuizHistoryDetails from './components/QuizHistoryDetails.vue';\nimport AccountButton from './components/AccountButton.vue';\nimport StudyStats from './components/StudyStats.vue';\nimport { \n  calculatePredictedScore,\n  calculateScore,\n  processQuizResponse,\n  isSimilarQuestion\n} from './algorithms';\nimport { updateSpacedRepetition } from './algorithms/spaced-repetition';\nimport { useStore } from 'vuex';\nimport { useAuth } from './composables/useAuth';\n\nconst store = useStore();\nconst { user } = useAuth();\n\n// File handling state\nconst selectedFiles = ref([]);\nconst fileInput = ref(null);\nconst unsupportedFiles = ref([]);\nconst extractionErrors = ref([]);\n\n// Quiz state\nconst questionCount = ref('');\nconst isLoading = ref(false);\nconst error = ref('');\nconst predictedScore = ref(null);\nconst quizStarted = ref(false);\nconst quizFinished = ref(false);\nconst adaptiveQuestions = ref([]);\nconst userResponses = ref([]);\nconst extractedContent = ref('');\nconst selectedQuiz = ref(null);\n\n// Add isRetaking flag to track retakes\nconst isRetaking = ref(false);\nconst retakeIndex = ref(-1);\n\n// Stats view state\nconst showStats = ref(false);\n\n// Add computed property for quiz history\nconst quizHistory = computed(() => store.state.quizHistory);\n\n// Initialize store and load data\nonMounted(() => {\n  // Initialize store\n  store.dispatch('initializeStore');\n  \n  // Load quiz history if user is logged in\n  if (user.value) {\n    loadQuizzes();\n  }\n});\n\n// Calculate number of due questions with safety check\nconst dueCount = computed(() => {\n  if (!store.state.quizzes) return 0;\n  return store.getters.getDueQuestions.length;\n});\n\n// Computed properties\nconst isFormValid = computed(() => {\n  return selectedFiles.value.length > 0 && questionCount.value > 0;\n});\n\nconst hasFileErrors = computed(() => {\n  return extractionErrors.value.length > 0 || unsupportedFiles.value.length > 0;\n});\n\nconst getPredictedScoreClass = computed(() => {\n  if (predictedScore.value >= 80) return 'high';\n  if (predictedScore.value >= 60) return 'medium';\n  return 'low';\n});\n\n// File handling methods\nconst triggerFileInput = () => {\n  fileInput.value.click();\n};\n\nconst handleFileSelect = (event) => {\n  const files = Array.from(event.target.files);\n  addFiles(files);\n};\n\nconst handleDrop = (event) => {\n  const files = Array.from(event.dataTransfer.files);\n  addFiles(files);\n};\n\nconst addFiles = (files) => {\n  const validTypes = [\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'text/plain',\n    'application/pdf',\n    'image/png',\n    'image/jpeg',\n    'image/jpg',\n    'image/tiff',\n    'image/bmp'\n  ];\n  \n  const validFiles = [];\n  const invalidFiles = [];\n  \n  files.forEach(file => {\n    if (validTypes.includes(file.type)) {\n      validFiles.push(file);\n    } else {\n      invalidFiles.push(file);\n    }\n  });\n  \n  selectedFiles.value = [...selectedFiles.value, ...validFiles];\n  unsupportedFiles.value = [...unsupportedFiles.value, ...invalidFiles];\n};\n\nconst removeFile = (index) => {\n  selectedFiles.value.splice(index, 1);\n};\n\n// Quiz handling methods\nconst handleSubmit = async () => {\n  if (!isFormValid.value) return;\n\n  isLoading.value = true;\n  error.value = '';\n  adaptiveQuestions.value = [];\n  predictedScore.value = null;\n  quizStarted.value = false;\n  userResponses.value = [];\n  extractedContent.value = '';\n  extractionErrors.value = [];\n\n  try {\n    console.log('Processing files:', selectedFiles.value.map(f => ({ name: f.name, type: f.type })));\n    \n    const fileContents = await Promise.all(\n      selectedFiles.value.map(file => readFileContent(file))\n    );\n\n    const validContents = fileContents.filter(content => content && content.trim().length > 0);\n    console.log('Number of files with valid content:', validContents.length);\n    \n    if (validContents.length === 0) {\n      throw new Error('No valid content could be extracted from the selected files.');\n    }\n\n    extractedContent.value = validContents.join('\\n\\n');\n    console.log('Total content length:', extractedContent.value.length);\n    \n    if (extractedContent.value.trim().length < 50) {\n      throw new Error('The extracted content is too short to generate meaningful questions.');\n    }\n\n    const requestedQuestionCount = Number(questionCount.value);\n    console.log('Requesting questions:', requestedQuestionCount);\n    \n    const questions = await generateQuestions(extractedContent.value, requestedQuestionCount);\n    \n    if (!questions || questions.length === 0) {\n      throw new Error('No valid questions could be generated.');\n    }\n\n    console.log('Generated questions:', questions.length);\n    adaptiveQuestions.value = questions;\n    predictedScore.value = calculatePredictedScore(adaptiveQuestions.value);\n\n  } catch (err) {\n    console.error('Error in handleSubmit:', err);\n    error.value = err.message || 'An unexpected error occurred while generating questions.';\n    adaptiveQuestions.value = [];\n    predictedScore.value = null;\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst startQuiz = () => {\n  quizStarted.value = true;\n  quizFinished.value = false;\n};\n\nconst handleQuizComplete = (responses) => {\n  userResponses.value = responses;\n  \n  // Update the adaptiveQuestions with user answers and spaced repetition data\n  adaptiveQuestions.value = adaptiveQuestions.value.map((question, index) => {\n    const response = responses[index];\n    const performance = response?.correct ? 5 : 0; // 5 for correct, 0 for incorrect\n    \n    // Update spaced repetition data\n    const updatedSpacedRepetition = updateSpacedRepetition(question, performance);\n    \n    return {\n      ...question,\n      userAnswer: response?.userAnswer,\n      isCorrect: response?.correct,\n      spacedRepetition: updatedSpacedRepetition\n    };\n  });\n  \n  // Set quiz states\n  quizStarted.value = false;\n  quizFinished.value = true;\n  \n  // Save results\n  saveQuizResults();\n};\n\nconst restartQuiz = () => {\n  quizStarted.value = true;\n  quizFinished.value = false;\n  userResponses.value = [];\n};\n\nconst resetToMainScreen = () => {\n  selectedFiles.value = [];\n  unsupportedFiles.value = [];\n  extractionErrors.value = [];\n  questionCount.value = '';\n  error.value = '';\n  isLoading.value = false;\n  predictedScore.value = null;\n  quizStarted.value = false;\n  quizFinished.value = false;\n  adaptiveQuestions.value = [];\n  userResponses.value = [];\n  if (fileInput.value) {\n    fileInput.value.value = '';\n  }\n};\n\n// Helper functions\nasync function readFileContent(file) {\n  return new Promise((resolve) => {\n    try {\n      console.log('File type:', file.type);\n      console.log('File name:', file.name);\n      \n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const backendUrl = process.env.VUE_APP_BACKEND_URL || 'http://localhost:5001';\n      fetch(`${backendUrl}/extract-file`, {\n        method: 'POST',\n        body: formData\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.text) {\n            resolve(data.text);\n          } else {\n            extractionErrors.value.push({\n              fileName: file.name,\n              message: data.error || 'Failed to extract text from file'\n            });\n          resolve('');\n          }\n        })\n      .catch(error => {\n        console.error('Error processing file:', error);\n          extractionErrors.value.push({\n            fileName: file.name,\n          message: `Error processing file: ${error.message}`\n        });\n        resolve('');\n      });\n    } catch (error) {\n      console.error('Error preparing file:', error);\n        extractionErrors.value.push({\n          fileName: file.name,\n        message: `Error preparing file: ${error.message}`\n      });\n      resolve('');\n    }\n  });\n}\n\nasync function generateQuestions(content, count) {\n  const maxRetries = 3;\n  let retryCount = 0;\n  let allQuestions = [];\n\n  while (retryCount < maxRetries && allQuestions.length < count) {\n    try {\n      const remainingCount = count - allQuestions.length;\n      const strategy = retryCount % 3;\n      let prompt = `Generate exactly ${remainingCount} questions. DO NOT use markdown formatting or asterisks for emphasis.\nFOLLOW THIS EXACT FORMAT WITH NO DEVIATIONS:\n\nFor Multiple Choice Questions:\nQuestion: What is the question text?\nA) First option\nB) Second option\nC) Third option\nD) Fourth option\nAnswer: A* (or B*, C*, D* - add asterisk to correct answer)\nDifficulty: easy (or medium or hard)\n\nFor True/False Questions:\nTrue/False: What is the question text?\nAnswer: True* (or False* - add asterisk to correct answer)\nDifficulty: easy (or medium or hard)\n\nREQUIREMENTS:\n1. Use the exact format shown above\n2. Do not add any extra formatting or text\n3. Do not use markdown\n4. Do not use bold or italics\n5. Each question must end with a difficulty level\n6. Questions must be based on this content:\n\n${content}\n\nSTRATEGY: `;\n\n      switch (strategy) {\n        case 0:\n          prompt += 'Create a mix of multiple-choice and true/false questions that directly test understanding of the content.';\n          break;\n        case 1:\n          prompt += 'Create questions that focus on what is NOT mentioned or opposite relationships in the content.';\n          break;\n        case 2:\n          prompt += 'Create questions that test application and inference of the concepts mentioned in the content.';\n          break;\n      }\n\n      const response = await axios.post(\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${process.env.VUE_APP_GEMINI_API_KEY}`,\n        {\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }],\n          generationConfig: {\n            temperature: 0.7 + (retryCount * 0.1),\n            topK: 40,\n            topP: 0.95,\n            maxOutputTokens: 2048,\n          }\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (!response.data?.candidates?.[0]?.content?.parts?.[0]?.text) {\n        throw new Error('Invalid response format from Gemini API');\n      }\n\n      const responseText = response.data.candidates[0].content.parts[0].text\n        .replace(/\\*\\*/g, '') // Remove markdown bold\n        .replace(/\\*/g, '*')  // Normalize asterisks\n        .replace(/[\"\"]/g, '\"'); // Normalize quotes\n\n      console.log('Generated response:', responseText);\n\n      const newQuestions = processQuizResponse(responseText, content).questions;\n      \n      if (newQuestions.length === 0) {\n        console.error('No valid questions parsed from response');\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        continue;\n      }\n\n      // Add unique IDs and initialize spaced repetition data for new questions\n      const questionsWithIds = newQuestions.map(q => ({\n        ...q,\n        id: crypto.randomUUID(),\n        spacedRepetition: {\n          repetitions: 0,\n          ease: 2.5,\n          interval: 1,\n          nextReviewDate: null,\n          lastReviewDate: null\n        }\n      }));\n\n      const uniqueNewQuestions = questionsWithIds.filter(newQ => \n        !allQuestions.some(existingQ => isSimilarQuestion(newQ, existingQ))\n      );\n\n      allQuestions = [...allQuestions, ...uniqueNewQuestions];\n      \n      if (allQuestions.length >= count) {\n        return allQuestions.slice(0, count);\n      }\n\n      retryCount++;\n\n    } catch (error) {\n      console.error(`Attempt ${retryCount + 1} failed:`, error);\n      retryCount++;\n      \n      if (error.response?.status === 429) {\n        await new Promise(resolve => setTimeout(resolve, 2000 * retryCount));\n      } else if (retryCount === maxRetries) {\n        throw new Error(`Failed to generate enough unique questions after ${maxRetries} attempts. ${error.response?.data?.error?.message || error.message}`);\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    }\n  }\n\n  if (allQuestions.length < count) {\n    throw new Error(`Could only generate ${allQuestions.length} unique questions out of ${count} requested. Please try with different content or reduce the number of questions.`);\n  }\n\n  return allQuestions;\n}\n\n// Results formatting\nconst formatQuestionsForResults = computed(() => {\n  return adaptiveQuestions.value.map((q, index) => ({\n    text: q.text,\n    type: q.type,\n    options: q.options,\n    userAnswer: userResponses.value[index]?.userAnswer,\n    correctAnswer: q.correctAnswer,\n    explanation: q.explanation,\n    isCorrect: userResponses.value[index]?.correct\n  }));\n});\n\nconst formatUserAnswersForResults = computed(() => {\n  return userResponses.value.map(r => r.userAnswer);\n});\n\nconst correctAnswersCount = computed(() => {\n  return userResponses.value.filter(r => r.correct).length;\n});\n\n// Update the calculateScore function\nconst score = computed(() => {\n  if (!userResponses.value || userResponses.value.length === 0) return 0;\n  return Math.round((correctAnswersCount.value / userResponses.value.length) * 100);\n});\n\n// Update the saveQuizResults function to use Vuex\nconst saveQuizResults = () => {\n  const quizResult = {\n    topic: selectedFiles.value[0]?.name || 'Untitled Quiz',\n    score: score.value,\n    total_questions: adaptiveQuestions.value.length,\n    duration: 0, // You can add duration tracking if needed\n    questions: adaptiveQuestions.value.map((q, index) => ({\n      id: q.id,\n      text: q.text,\n      type: q.type,\n      options: q.options,\n      userAnswer: userResponses.value[index]?.userAnswer,\n      correctAnswer: q.correctAnswer,\n      isCorrect: userResponses.value[index]?.correct,\n      explanation: q.explanation,\n      difficulty: q.difficulty\n    }))\n  };\n  \n  // Save quiz result to store\n  store.dispatch('addQuizToHistory', quizResult);\n  \n  // Update the questions in the store with their new spaced repetition data\n  store.commit('updateQuestions', adaptiveQuestions.value);\n  \n  isRetaking.value = false;\n  retakeIndex.value = -1;\n};\n\n// Update the handleRetakeQuiz function to set retake flags\nconst handleRetakeQuiz = async (quizToRetake) => {\n  // Find the index of the quiz being retaken\n  retakeIndex.value = quizHistory.value.findIndex(quiz => \n    quiz.fileName === quizToRetake.fileName && \n    quiz.questionCount === quizToRetake.questionCount &&\n    quiz.fileContent === quizToRetake.fileContent\n  );\n  \n  if (retakeIndex.value === -1) {\n    console.error('Could not find original quiz to retake');\n    return;\n  }\n  \n  isRetaking.value = true;\n  \n  // Reset quiz state\n  quizStarted.value = false;\n  quizFinished.value = false;\n  predictedScore.value = null;\n  error.value = '';\n  adaptiveQuestions.value = [];\n  userResponses.value = [];\n  selectedQuiz.value = null;  // Reset selected quiz\n  \n  // Set the question count from the previous quiz\n  questionCount.value = quizToRetake.questionCount.toString();\n  \n  // Create a dummy file with the same name\n  const file = new File([''], quizToRetake.fileName, {\n    type: 'text/plain'\n  });\n  \n  // Set the selected file and content\n  selectedFiles.value = [file];\n  extractedContent.value = quizToRetake.fileContent;\n  \n  // Generate new quiz using the stored content\n  try {\n    isLoading.value = true;\n    const requestedQuestionCount = Number(questionCount.value);\n    \n    const questions = await generateQuestions(extractedContent.value, requestedQuestionCount);\n    if (!questions || questions.length === 0) {\n      throw new Error('No valid questions could be generated.');\n    }\n    \n    adaptiveQuestions.value = questions;\n    predictedScore.value = calculatePredictedScore(adaptiveQuestions.value);\n    \n    // After generating questions, start the quiz\n    quizStarted.value = true;\n  } catch (err) {\n    error.value = `Error generating questions: ${err.message}`;\n    // Reset retake flags on error\n    isRetaking.value = false;\n    retakeIndex.value = -1;\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Update handleCreateQuiz to reset retake flags\nconst handleCreateQuiz = () => {\n  showStats.value = false;\n  selectedQuiz.value = null;\n  quizStarted.value = false;\n  quizFinished.value = false;\n  predictedScore.value = null;\n  selectedFiles.value = [];\n  questionCount.value = '';\n  error.value = '';\n  extractedContent.value = '';\n  adaptiveQuestions.value = [];\n  userResponses.value = [];\n  isRetaking.value = false;\n  retakeIndex.value = -1;\n};\n\n// Add the clearHistory function\nconst clearHistory = () => {\n  if (confirm('Are you sure you want to clear all quiz history? This cannot be undone.')) {\n    store.dispatch('clearQuizHistory');\n  }\n};\n\n// Add function to handle quiz selection\nconst handleQuizSelect = (quiz) => {\n  if (showStats.value) {\n    showStats.value = false;\n    // Add small delay to ensure smooth transition\n    setTimeout(() => {\n      selectedQuiz.value = quiz;\n    }, 100);\n  } else {\n    selectedQuiz.value = quiz;\n  }\n};\n\n// Add new method to handle create quiz from stats view\nconst handleCreateQuizFromStats = () => {\n  showStats.value = false;\n  handleCreateQuiz();\n};\n\nconst showAuthModal = ref(false);\n\n// Add loadQuizzes function\nconst loadQuizzes = async () => {\n  try {\n    if (user.value) {\n      // Only load quiz history for authenticated users\n      await store.dispatch('loadQuizHistory');\n    }\n  } catch (err) {\n    console.error('Error loading quizzes:', err);\n  }\n};\n\n// Add auth state change handler\nwatch(user, async (newUser) => {\n  if (newUser) {\n    // User just logged in, load their quiz history\n    await loadQuizzes();\n  } else {\n    // User logged out, clear the quiz history from store\n    store.commit('clearQuizHistory');\n  }\n});\n\nconst handleQuestionUpdate = (updatedQuestion) => {\n  // Update the question in adaptiveQuestions\n  const index = adaptiveQuestions.value.findIndex(q => q.id === updatedQuestion.id);\n  if (index !== -1) {\n    adaptiveQuestions.value[index] = {\n      ...adaptiveQuestions.value[index],\n      ...updatedQuestion\n    };\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  min-height: 100vh;\n  display: flex;\n  background-color: #f5f5f5;\n  font-family: \"Helvetica\", \"Arial\", sans-serif;\n}\n\n.main-content {\n  flex: 1;\n  margin-left: 280px; /* Same as sidebar width */\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #f5f5f5;\n  overflow-y: auto;\n}\n\n.upload-container {\n  width: 90%;\n  max-width: 800px;\n  margin: 0 auto;\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 2rem;\n}\n\nh2 {\n  color: #444;\n  margin-bottom: 1rem;\n}\n\n.file-upload-section {\n  margin-bottom: 2rem;\n}\n\n.upload-area {\n  border: 2px dashed #ccc;\n  border-radius: 8px;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-bottom: 1rem;\n  outline: none;\n}\n\n.upload-area:hover {\n  border-color: #666;\n  background-color: #f8f8f8;\n}\n\n.upload-area:focus {\n  border-color: #4CAF50;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.file-input {\n  display: none;\n}\n\n.upload-prompt {\n  color: #666;\n}\n\n.upload-prompt p {\n  margin: 0.5rem 0;\n}\n\n.selected-files {\n  margin-top: 1rem;\n}\n\n.selected-files ul {\n  list-style: none;\n  padding: 0;\n}\n\n.selected-files li {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n}\n\n.remove-btn {\n  background: none;\n  border: none;\n  color: #ff4444;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0 0.5rem;\n}\n\n.questions-section {\n  margin-top: 2rem;\n}\n\n.question-input input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.submit-btn {\n  width: 100%;\n  padding: 1rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-top: 2rem;\n  transition: background-color 0.3s;\n}\n\n.submit-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.submit-btn:not(:disabled):hover {\n  background-color: #45a049;\n}\n\n.questions-list {\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.question-item {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.error-message {\n  color: #ff4444;\n  margin-top: 1rem;\n  text-align: center;\n}\n\n.quiz-container {\n  margin-top: 2rem;\n  padding: 2rem;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.question {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n}\n\n.options {\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n  margin: 1.5rem 0;\n}\n\n.options.true-false {\n  flex-direction: row;\n  justify-content: center;\n  gap: 1.5rem;\n}\n\n.option-btn {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: white;\n  color: #333;\n  cursor: pointer;\n  font-size: 1rem;\n  text-align: left;\n  transition: all 0.2s ease;\n}\n\n.options.true-false .option-btn {\n  width: auto;\n  min-width: 120px;\n  justify-content: center;\n  font-size: 1.1rem;\n  font-weight: 500;\n}\n\n.option-letter {\n  background-color: #f5f5f5;\n  color: #666;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  margin-right: 1rem;\n  font-weight: 600;\n}\n\n.option-text {\n  flex: 1;\n}\n\n.option-btn:hover:not(:disabled) {\n  border-color: #2196F3;\n  background-color: #f8f9fa;\n}\n\n.option-btn.selected {\n  border-color: #2196F3;\n  background-color: #e3f2fd;\n}\n\n.option-btn.correct {\n  border-color: #4CAF50;\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.option-btn.incorrect {\n  border-color: #f44336;\n  background-color: #FFEBEE;\n  color: #c62828;\n}\n\n.feedback {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n\n.correct-text {\n  color: #4CAF50;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.incorrect-text {\n  color: #f44336;\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin: 0.5rem 0;\n}\n\n.next-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 0.8rem 2rem;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 1rem;\n  transition: all 0.2s ease;\n}\n\n.next-btn:hover {\n  background-color: #1976D2;\n  transform: translateY(-1px);\n}\n\n.quiz-progress {\n  margin-bottom: 2rem;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background-color: #e0e0e0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #4CAF50;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  display: block;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.next-btn {\n  width: auto;\n  min-width: 150px;\n  margin-top: 1rem;\n}\n\n.quiz-results {\n  padding: 2rem;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.score-summary {\n  text-align: center;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n}\n\n.questions-review {\n  margin-top: 2rem;\n}\n\n.question-review {\n  margin-bottom: 2rem;\n  padding: 1rem;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: #fff;\n}\n\n.question-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.question-number {\n  font-weight: bold;\n  color: #666;\n}\n\n.answer-status {\n  padding: 0.25rem 0.75rem;\n  border-radius: 4px;\n  font-weight: bold;\n}\n\n.answer-status.correct {\n  background-color: #E8F5E9;\n  color: #2E7D32;\n}\n\n.answer-status.incorrect {\n  background-color: #FFEBEE;\n  color: #C62828;\n}\n\n.question-text {\n  font-size: 1.1rem;\n  margin-bottom: 1rem;\n  color: #333;\n}\n\n.answer-details {\n  background-color: #f8f9fa;\n  padding: 1rem;\n  border-radius: 4px;\n}\n\n.your-answer, .correct-answer {\n  margin-bottom: 0.5rem;\n}\n\n.question-explanation {\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #e0e0e0;\n}\n\n.explanation-text {\n  margin-top: 1rem;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-left: 3px solid #2196F3;\n  border-radius: 4px;\n  color: #333;\n  font-size: 0.95rem;\n  line-height: 1.5;\n}\n\n.explanation-text p {\n  margin: 0.5rem 0;\n}\n\n.explanation-text strong {\n  color: #2196F3;\n}\n\n.supported-formats {\n  margin-top: 1rem;\n  text-align: left;\n  display: inline-block;\n}\n\n.supported-formats ul {\n  list-style: none;\n  padding: 0;\n  margin: 0.5rem 0;\n}\n\n.supported-formats li {\n  margin: 0.3rem 0;\n  color: #555;\n}\n\n.format-icon {\n  margin-right: 0.5rem;\n}\n\n.predicted-score-container {\n  text-align: center;\n  padding: 2rem;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.score-prediction {\n  margin: 2rem 0;\n}\n\n.score-circle {\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  transition: all 0.3s ease;\n}\n\n.score-circle.high {\n  background-color: #e8f5e9;\n  border: 4px solid #4CAF50;\n}\n\n.score-circle.medium {\n  background-color: #fff3e0;\n  border: 4px solid #ff9800;\n}\n\n.score-circle.low {\n  background-color: #ffebee;\n  border: 4px solid #f44336;\n}\n\n.predicted-value {\n  font-size: 3rem;\n  font-weight: bold;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n}\n\n.prediction-label {\n  font-size: 1rem;\n  opacity: 0.8;\n}\n\n.prediction-explanation {\n  color: #666;\n  margin: 1.5rem 0;\n  font-size: 1.1rem;\n  line-height: 1.5;\n}\n\n.start-quiz-btn {\n  background-color: #2196F3;\n  color: white;\n  padding: 1rem 2.5rem;\n  border: none;\n  border-radius: 25px;\n  font-size: 1.2rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(33, 150, 243, 0.3);\n}\n\n.start-quiz-btn:hover {\n  background-color: #1976D2;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(33, 150, 243, 0.4);\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.85);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(2px);\n}\n\n.loading-content {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 2rem;\n  color: #333;\n  font-weight: 500;\n}\n\n.typewriter {\n  overflow: hidden;\n  white-space: nowrap;\n  animation: typing 3s steps(14) infinite;\n  border-right: 3px solid #4CAF50;\n}\n\n.dots {\n  display: flex;\n}\n\n.dots span {\n  opacity: 0;\n  animation: dot 1.5s infinite;\n  animation-fill-mode: both;\n}\n\n.dots span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.dots span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typing {\n  0%, 90%, 100% {\n    width: 0;\n  }\n  30%, 60% {\n    width: 14ch;\n  }\n}\n\n@keyframes dot {\n  0%, 100% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n}\n\n.quiz-details-container {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  position: relative;\n}\n\n.review-reminder {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.review-btn {\n  background: #2196F3;\n  color: white;\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1.1rem;\n  transition: background-color 0.2s;\n}\n\n.review-btn:hover {\n  background: #1976D2;\n}\n\n.stats-view {\n  width: 90%;\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.back-btn {\n  margin-bottom: 1rem;\n  padding: 0.5rem 1rem;\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  transition: color 0.2s;\n}\n\n.back-btn:hover {\n  color: #2196F3;\n}\n\n.stats-header-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\n.create-quiz-btn {\n  padding: 0.5rem 1.5rem;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.create-quiz-btn:hover {\n  background-color: #45a049;\n  transform: translateY(-1px);\n}\n\n.review-button {\n  background: #2196F3;\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: background 0.2s;\n}\n\n.review-button:hover {\n  background: #1976D2;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  width: 100%;\n  max-width: 900px;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.main-nav {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 1rem;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.review-button {\n  background: #2196F3;\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: background 0.2s;\n}\n\n.review-button:hover {\n  background: #1976D2;\n}\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SACEC,uBAAuB,EACvBC,cAAc,EACdC,mBAAmB,EACnBC,iBAAgB,QACX,cAAc;AACrB,SAASC,sBAAsB,QAAQ,gCAAgC;AACvE,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,OAAO,QAAQ,uBAAuB;;;;;;IAE/C,IAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,IAAAG,QAAA,GAAiBF,OAAO,CAAC,CAAC;MAAlBG,IAAI,GAAAD,QAAA,CAAJC,IAAI;;IAEZ;IACA,IAAMC,aAAa,GAAGtB,GAAG,CAAC,EAAE,CAAC;IAC7B,IAAMuB,SAAS,GAAGvB,GAAG,CAAC,IAAI,CAAC;IAC3B,IAAMwB,gBAAgB,GAAGxB,GAAG,CAAC,EAAE,CAAC;IAChC,IAAMyB,gBAAgB,GAAGzB,GAAG,CAAC,EAAE,CAAC;;IAEhC;IACA,IAAM0B,aAAa,GAAG1B,GAAG,CAAC,EAAE,CAAC;IAC7B,IAAM2B,SAAS,GAAG3B,GAAG,CAAC,KAAK,CAAC;IAC5B,IAAM4B,KAAK,GAAG5B,GAAG,CAAC,EAAE,CAAC;IACrB,IAAM6B,cAAc,GAAG7B,GAAG,CAAC,IAAI,CAAC;IAChC,IAAM8B,WAAW,GAAG9B,GAAG,CAAC,KAAK,CAAC;IAC9B,IAAM+B,YAAY,GAAG/B,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAMgC,iBAAiB,GAAGhC,GAAG,CAAC,EAAE,CAAC;IACjC,IAAMiC,aAAa,GAAGjC,GAAG,CAAC,EAAE,CAAC;IAC7B,IAAMkC,gBAAgB,GAAGlC,GAAG,CAAC,EAAE,CAAC;IAChC,IAAMmC,YAAY,GAAGnC,GAAG,CAAC,IAAI,CAAC;;IAE9B;IACA,IAAMoC,UAAU,GAAGpC,GAAG,CAAC,KAAK,CAAC;IAC7B,IAAMqC,WAAW,GAAGrC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE3B;IACA,IAAMsC,SAAS,GAAGtC,GAAG,CAAC,KAAK,CAAC;;IAE5B;IACA,IAAMuC,WAAW,GAAGtC,QAAQ,CAAC;MAAA,OAAMkB,KAAK,CAACqB,KAAK,CAACD,WAAW;IAAA,EAAC;;IAE3D;IACArC,SAAS,CAAC,YAAM;MACd;MACAiB,KAAK,CAACsB,QAAQ,CAAC,iBAAiB,CAAC;;MAEjC;MACA,IAAIpB,IAAI,CAACqB,KAAK,EAAE;QACdC,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC;;IAEF;IACA,IAAMC,QAAQ,GAAG3C,QAAQ,CAAC,YAAM;MAC9B,IAAI,CAACkB,KAAK,CAACqB,KAAK,CAACK,OAAO,EAAE,OAAO,CAAC;MAClC,OAAO1B,KAAK,CAAC2B,OAAO,CAACC,eAAe,CAACC,MAAM;IAC7C,CAAC,CAAC;;IAEF;IACA,IAAMC,WAAW,GAAGhD,QAAQ,CAAC,YAAM;MACjC,OAAOqB,aAAa,CAACoB,KAAK,CAACM,MAAM,GAAG,CAAC,IAAItB,aAAa,CAACgB,KAAK,GAAG,CAAC;IAClE,CAAC,CAAC;IAEF,IAAMQ,aAAa,GAAGjD,QAAQ,CAAC,YAAM;MACnC,OAAOwB,gBAAgB,CAACiB,KAAK,CAACM,MAAM,GAAG,CAAC,IAAIxB,gBAAgB,CAACkB,KAAK,CAACM,MAAM,GAAG,CAAC;IAC/E,CAAC,CAAC;IAEF,IAAMG,sBAAsB,GAAGlD,QAAQ,CAAC,YAAM;MAC5C,IAAI4B,cAAc,CAACa,KAAK,IAAI,EAAE,EAAE,OAAO,MAAM;MAC7C,IAAIb,cAAc,CAACa,KAAK,IAAI,EAAE,EAAE,OAAO,QAAQ;MAC/C,OAAO,KAAK;IACd,CAAC,CAAC;;IAEF;IACA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;MAC7B7B,SAAS,CAACmB,KAAK,CAACW,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAK;MAClC,IAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACH,KAAK,CAAC;MAC5CI,QAAQ,CAACJ,KAAK,CAAC;IACjB,CAAC;IAED,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIN,KAAK,EAAK;MAC5B,IAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACO,YAAY,CAACN,KAAK,CAAC;MAClDI,QAAQ,CAACJ,KAAK,CAAC;IACjB,CAAC;IAED,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAIJ,KAAK,EAAK;MAC1B,IAAMO,UAAU,GAAG,CACjB,oBAAoB,EACpB,yEAAyE,EACzE,+BAA+B,EAC/B,2EAA2E,EAC3E,YAAY,EACZ,iBAAiB,EACjB,WAAW,EACX,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,WAAU,CACX;MAED,IAAMC,UAAU,GAAG,EAAE;MACrB,IAAMC,YAAY,GAAG,EAAE;MAEvBT,KAAK,CAACU,OAAO,CAAC,UAAAC,IAAI,EAAI;QACpB,IAAIJ,UAAU,CAACK,QAAQ,CAACD,IAAI,CAACE,IAAI,CAAC,EAAE;UAClCL,UAAU,CAACM,IAAI,CAACH,IAAI,CAAC;QACvB,CAAC,MAAM;UACLF,YAAY,CAACK,IAAI,CAACH,IAAI,CAAC;QACzB;MACF,CAAC,CAAC;MAEF7C,aAAa,CAACoB,KAAK,MAAA6B,MAAA,CAAAC,kBAAA,CAAOlD,aAAa,CAACoB,KAAK,GAAKsB,UAAU,CAAC;MAC7DxC,gBAAgB,CAACkB,KAAK,MAAA6B,MAAA,CAAAC,kBAAA,CAAOhD,gBAAgB,CAACkB,KAAK,GAAKuB,YAAY,CAAC;IACvE,CAAC;IAED,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;MAC5BpD,aAAa,CAACoB,KAAK,CAACiC,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;;IAED;IACA,IAAME,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,sBAAA,EAAAC,SAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,IACdzC,WAAW,CAACP,KAAK;gBAAA8C,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAEtBhE,SAAS,CAACe,KAAK,GAAG,IAAI;cACtBd,KAAK,CAACc,KAAK,GAAG,EAAE;cAChBV,iBAAiB,CAACU,KAAK,GAAG,EAAE;cAC5Bb,cAAc,CAACa,KAAK,GAAG,IAAI;cAC3BZ,WAAW,CAACY,KAAK,GAAG,KAAK;cACzBT,aAAa,CAACS,KAAK,GAAG,EAAE;cACxBR,gBAAgB,CAACQ,KAAK,GAAG,EAAE;cAC3BjB,gBAAgB,CAACiB,KAAK,GAAG,EAAE;cAAA8C,QAAA,CAAAC,IAAA;cAGzBG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEvE,aAAa,CAACoB,KAAK,CAACoD,GAAG,CAAC,UAAAC,CAAC;gBAAA,OAAK;kBAAEC,IAAI,EAAED,CAAC,CAACC,IAAI;kBAAE3B,IAAI,EAAE0B,CAAC,CAAC1B;gBAAK,CAAC;cAAA,CAAC,CAAC,CAAC;cAAAmB,QAAA,CAAAE,IAAA;cAAA,OAErEO,OAAO,CAACC,GAAG,CACpC5E,aAAa,CAACoB,KAAK,CAACoD,GAAG,CAAC,UAAA3B,IAAI;gBAAA,OAAIgC,eAAe,CAAChC,IAAI,CAAC;cAAA,EACvD,CAAC;YAAA;cAFKe,YAAY,GAAAM,QAAA,CAAAY,IAAA;cAIZjB,aAAa,GAAGD,YAAY,CAACmB,MAAM,CAAC,UAAAC,OAAO;gBAAA,OAAIA,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,CAACvD,MAAM,GAAG,CAAC;cAAA,EAAC;cAC1F4C,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEV,aAAa,CAACnC,MAAM,CAAC;cAAA,MAEpEmC,aAAa,CAACnC,MAAM,KAAK,CAAC;gBAAAwC,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MACtB,IAAIc,KAAK,CAAC,8DAA8D,CAAC;YAAA;cAGjFtE,gBAAgB,CAACQ,KAAK,GAAGyC,aAAa,CAACsB,IAAI,CAAC,MAAM,CAAC;cACnDb,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE3D,gBAAgB,CAACQ,KAAK,CAACM,MAAM,CAAC;cAAA,MAE/Dd,gBAAgB,CAACQ,KAAK,CAAC6D,IAAI,CAAC,CAAC,CAACvD,MAAM,GAAG,EAAE;gBAAAwC,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MACrC,IAAIc,KAAK,CAAC,sEAAsE,CAAC;YAAA;cAGnFpB,sBAAsB,GAAGsB,MAAM,CAAChF,aAAa,CAACgB,KAAK,CAAC;cAC1DkD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAET,sBAAsB,CAAC;cAAAI,QAAA,CAAAE,IAAA;cAAA,OAEpCiB,iBAAiB,CAACzE,gBAAgB,CAACQ,KAAK,EAAE0C,sBAAsB,CAAC;YAAA;cAAnFC,SAAS,GAAAG,QAAA,CAAAY,IAAA;cAAA,MAEX,CAACf,SAAS,IAAIA,SAAS,CAACrC,MAAM,KAAK,CAAC;gBAAAwC,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MAChC,IAAIc,KAAK,CAAC,wCAAwC,CAAC;YAAA;cAG3DZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAER,SAAS,CAACrC,MAAM,CAAC;cACrDhB,iBAAiB,CAACU,KAAK,GAAG2C,SAAS;cACnCxD,cAAc,CAACa,KAAK,GAAG9B,uBAAuB,CAACoB,iBAAiB,CAACU,KAAK,CAAC;cAAA8C,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAoB,EAAA,GAAApB,QAAA;cAGvEI,OAAO,CAAChE,KAAK,CAAC,wBAAwB,EAAA4D,QAAA,CAAAoB,EAAK,CAAC;cAC5ChF,KAAK,CAACc,KAAK,GAAG8C,QAAA,CAAAoB,EAAA,CAAIC,OAAO,IAAI,0DAA0D;cACvF7E,iBAAiB,CAACU,KAAK,GAAG,EAAE;cAC5Bb,cAAc,CAACa,KAAK,GAAG,IAAI;YAAA;cAAA8C,QAAA,CAAAC,IAAA;cAE3B9D,SAAS,CAACe,KAAK,GAAG,KAAK;cAAA,OAAA8C,QAAA,CAAAsB,MAAA;YAAA;YAAA;cAAA,OAAAtB,QAAA,CAAAuB,IAAA;UAAA;QAAA,GAAA9B,OAAA;MAAA,CAE1B;MAAA,gBAtDKL,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAmC,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsDjB;IAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;MACtBpF,WAAW,CAACY,KAAK,GAAG,IAAI;MACxBX,YAAY,CAACW,KAAK,GAAG,KAAK;IAC5B,CAAC;IAED,IAAMyE,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,SAAS,EAAK;MACxCnF,aAAa,CAACS,KAAK,GAAG0E,SAAS;;MAE/B;MACApF,iBAAiB,CAACU,KAAK,GAAGV,iBAAiB,CAACU,KAAK,CAACoD,GAAG,CAAC,UAACuB,QAAQ,EAAE3C,KAAK,EAAK;QACzE,IAAM4C,QAAQ,GAAGF,SAAS,CAAC1C,KAAK,CAAC;QACjC,IAAM6C,WAAW,GAAGD,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;QAE/C;QACA,IAAMC,uBAAuB,GAAGzG,sBAAsB,CAACqG,QAAQ,EAAEE,WAAW,CAAC;QAE7E,OAAAG,aAAA,CAAAA,aAAA,KACKL,QAAQ;UACXM,UAAU,EAAEL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,UAAU;UAChCC,SAAS,EAAEN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,OAAO;UAC5BK,gBAAgB,EAAEJ;QAAsB;MAE5C,CAAC,CAAC;;MAEF;MACA3F,WAAW,CAACY,KAAK,GAAG,KAAK;MACzBX,YAAY,CAACW,KAAK,GAAG,IAAI;;MAEzB;MACAoF,eAAe,CAAC,CAAC;IACnB,CAAC;IAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;MACxBjG,WAAW,CAACY,KAAK,GAAG,IAAI;MACxBX,YAAY,CAACW,KAAK,GAAG,KAAK;MAC1BT,aAAa,CAACS,KAAK,GAAG,EAAE;IAC1B,CAAC;IAED,IAAMsF,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;MAC9B1G,aAAa,CAACoB,KAAK,GAAG,EAAE;MACxBlB,gBAAgB,CAACkB,KAAK,GAAG,EAAE;MAC3BjB,gBAAgB,CAACiB,KAAK,GAAG,EAAE;MAC3BhB,aAAa,CAACgB,KAAK,GAAG,EAAE;MACxBd,KAAK,CAACc,KAAK,GAAG,EAAE;MAChBf,SAAS,CAACe,KAAK,GAAG,KAAK;MACvBb,cAAc,CAACa,KAAK,GAAG,IAAI;MAC3BZ,WAAW,CAACY,KAAK,GAAG,KAAK;MACzBX,YAAY,CAACW,KAAK,GAAG,KAAK;MAC1BV,iBAAiB,CAACU,KAAK,GAAG,EAAE;MAC5BT,aAAa,CAACS,KAAK,GAAG,EAAE;MACxB,IAAInB,SAAS,CAACmB,KAAK,EAAE;QACnBnB,SAAS,CAACmB,KAAK,CAACA,KAAK,GAAG,EAAE;MAC5B;IACF,CAAC;;IAED;IAAA,SACeyD,eAAeA,CAAA8B,EAAA;MAAA,OAAAC,gBAAA,CAAAlB,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAiB,iBAAA;MAAAA,gBAAA,GAAApD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA9B,SAAAmD,SAA+BhE,IAAI;QAAA,OAAAY,mBAAA,GAAAO,IAAA,UAAA8C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5C,IAAA,GAAA4C,SAAA,CAAA3C,IAAA;YAAA;cAAA,OAAA2C,SAAA,CAAA1C,MAAA,WAC1B,IAAIM,OAAO,CAAC,UAACqC,OAAO,EAAK;gBAC9B,IAAI;kBACF1C,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE1B,IAAI,CAACE,IAAI,CAAC;kBACpCuB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE1B,IAAI,CAAC6B,IAAI,CAAC;kBAEpC,IAAMuC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;kBAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtE,IAAI,CAAC;kBAE7B,IAAMuE,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAI,uBAAuB;kBAC7EC,KAAK,IAAAvE,MAAA,CAAImE,UAAU,oBAAiB;oBAClCK,MAAM,EAAE,MAAM;oBACdC,IAAI,EAAET;kBACR,CAAC,EACEU,IAAI,CAAC,UAAAC,GAAG;oBAAA,OAAIA,GAAG,CAACC,IAAI,CAAC,CAAC;kBAAA,GACtBF,IAAI,CAAC,UAAAG,IAAI,EAAI;oBACZ,IAAIA,IAAI,CAACC,IAAI,EAAE;sBACbf,OAAO,CAACc,IAAI,CAACC,IAAI,CAAC;oBACpB,CAAC,MAAM;sBACL5H,gBAAgB,CAACiB,KAAK,CAAC4B,IAAI,CAAC;wBAC1BgF,QAAQ,EAAEnF,IAAI,CAAC6B,IAAI;wBACnBa,OAAO,EAAEuC,IAAI,CAACxH,KAAK,IAAI;sBACzB,CAAC,CAAC;sBACJ0G,OAAO,CAAC,EAAE,CAAC;oBACX;kBACF,CAAC,UACG,CAAC,UAAA1G,KAAK,EAAI;oBACdgE,OAAO,CAAChE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;oBAC5CH,gBAAgB,CAACiB,KAAK,CAAC4B,IAAI,CAAC;sBAC1BgF,QAAQ,EAAEnF,IAAI,CAAC6B,IAAI;sBACrBa,OAAO,4BAAAtC,MAAA,CAA4B3C,KAAK,CAACiF,OAAO;oBAClD,CAAC,CAAC;oBACFyB,OAAO,CAAC,EAAE,CAAC;kBACb,CAAC,CAAC;gBACJ,CAAC,CAAC,OAAO1G,KAAK,EAAE;kBACdgE,OAAO,CAAChE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;kBAC3CH,gBAAgB,CAACiB,KAAK,CAAC4B,IAAI,CAAC;oBAC1BgF,QAAQ,EAAEnF,IAAI,CAAC6B,IAAI;oBACrBa,OAAO,2BAAAtC,MAAA,CAA2B3C,KAAK,CAACiF,OAAO;kBACjD,CAAC,CAAC;kBACFyB,OAAO,CAAC,EAAE,CAAC;gBACb;cACF,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAD,SAAA,CAAAtB,IAAA;UAAA;QAAA,GAAAoB,QAAA;MAAA,CACJ;MAAA,OAAAD,gBAAA,CAAAlB,KAAA,OAAAC,SAAA;IAAA;IAAA,SAEeN,iBAAiBA,CAAA4C,GAAA,EAAAC,GAAA;MAAA,OAAAC,kBAAA,CAAAzC,KAAA,OAAAC,SAAA;IAAA,EAyIhC;IAAA,SAAAwC,mBAAA;MAAAA,kBAAA,GAAA3E,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAzIA,SAAA0E,SAAiCpD,OAAO,EAAEqD,KAAK;QAAA,IAAAC,UAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,QAAA,EAAAC,MAAA,EAAA5C,QAAA,EAAA6C,YAAA,EAAAC,YAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAAAC,eAAA,EAAAC,gBAAA;QAAA,OAAAzF,mBAAA,GAAAO,IAAA,UAAAmF,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjF,IAAA,GAAAiF,SAAA,CAAAhF,IAAA;YAAA;cACvCkE,UAAU,GAAG,CAAC;cAChBC,UAAU,GAAG,CAAC;cACdC,YAAY,GAAG,EAAE;YAAA;cAAA,MAEdD,UAAU,GAAGD,UAAU,IAAIE,YAAY,CAAC9G,MAAM,GAAG2G,KAAK;gBAAAe,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAAgF,SAAA,CAAAjF,IAAA;cAEnDuE,cAAc,GAAGL,KAAK,GAAGG,YAAY,CAAC9G,MAAM;cAC5CiH,QAAQ,GAAGJ,UAAU,GAAG,CAAC;cAC3BK,MAAM,uBAAA3F,MAAA,CAAuByF,cAAc,8wBAAAzF,MAAA,CAyBnD+B,OAAO;cAAAoE,SAAA,CAAA9D,EAAA,GAIKqD,QAAQ;cAAAS,SAAA,CAAAhF,IAAA,GAAAgF,SAAA,CAAA9D,EAAA,KACT,CAAC,QAAA8D,SAAA,CAAA9D,EAAA,KAGD,CAAC,QAAA8D,SAAA,CAAA9D,EAAA,KAGD,CAAC;cAAA;YAAA;cALJsD,MAAM,IAAI,2GAA2G;cAAA,OAAAQ,SAAA,CAAA/E,MAAA;YAAA;cAGrHuE,MAAM,IAAI,gGAAgG;cAAA,OAAAQ,SAAA,CAAA/E,MAAA;YAAA;cAG1GuE,MAAM,IAAI,gGAAgG;cAAA,OAAAQ,SAAA,CAAA/E,MAAA;YAAA;cAAA+E,SAAA,CAAAhF,IAAA;cAAA,OAIvFtF,KAAK,CAACuK,IAAI,iGAAApG,MAAA,CACiEoE,OAAO,CAACC,GAAG,CAACgC,sBAAsB,GAClI;gBACEC,QAAQ,EAAE,CAAC;kBACTC,KAAK,EAAE,CAAC;oBACNzB,IAAI,EAAEa;kBACR,CAAC;gBACH,CAAC,CAAC;gBACFa,gBAAgB,EAAE;kBAChBC,WAAW,EAAE,GAAG,GAAInB,UAAU,GAAG,GAAI;kBACrCoB,IAAI,EAAE,EAAE;kBACRC,IAAI,EAAE,IAAI;kBACVC,eAAe,EAAE;gBACnB;cACF,CAAC,EACD;gBACEC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB;cACF,CACF,CAAC;YAAA;cApBK9D,QAAQ,GAAAoD,SAAA,CAAAtE,IAAA;cAAA,KAAA2D,cAAA,GAsBTzC,QAAQ,CAAC8B,IAAI,cAAAW,cAAA,gBAAAA,cAAA,GAAbA,cAAA,CAAesB,UAAU,cAAAtB,cAAA,gBAAAA,cAAA,GAAzBA,cAAA,CAA4B,CAAC,CAAC,cAAAA,cAAA,gBAAAA,cAAA,GAA9BA,cAAA,CAAgCzD,OAAO,cAAAyD,cAAA,gBAAAA,cAAA,GAAvCA,cAAA,CAAyCe,KAAK,cAAAf,cAAA,gBAAAA,cAAA,GAA9CA,cAAA,CAAiD,CAAC,CAAC,cAAAA,cAAA,eAAnDA,cAAA,CAAqDV,IAAI;gBAAAqB,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAA,MACtD,IAAIc,KAAK,CAAC,yCAAyC,CAAC;YAAA;cAGtD2D,YAAY,GAAG7C,QAAQ,CAAC8B,IAAI,CAACiC,UAAU,CAAC,CAAC,CAAC,CAAC/E,OAAO,CAACwE,KAAK,CAAC,CAAC,CAAC,CAACzB,IAAG,CAClEiC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;cAAA,CACrBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAE;cAAA,CACrBA,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;cAE1B1F,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEsE,YAAY,CAAC;cAE1CC,YAAY,GAAGtJ,mBAAmB,CAACqJ,YAAY,EAAE7D,OAAO,CAAC,CAACjB,SAAS;cAAA,MAErE+E,YAAY,CAACpH,MAAM,KAAK,CAAC;gBAAA0H,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAC3BE,OAAO,CAAChE,KAAK,CAAC,yCAAyC,CAAC;cAAA8I,SAAA,CAAAhF,IAAA;cAAA,OAClD,IAAIO,OAAO,CAAC,UAAAqC,OAAO;gBAAA,OAAIiD,UAAU,CAACjD,OAAO,EAAE,IAAI,CAAC;cAAA,EAAC;YAAA;cAAA,OAAAoC,SAAA,CAAA/E,MAAA;YAAA;cAIzD;cACM0E,gBAAgB,GAAGD,YAAY,CAACtE,GAAG,CAAC,UAAA0F,CAAC;gBAAA,OAAA9D,aAAA,CAAAA,aAAA,KACtC8D,CAAC;kBACJC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;kBACvB9D,gBAAgB,EAAE;oBAChB+D,WAAW,EAAE,CAAC;oBACdC,IAAI,EAAE,GAAG;oBACTC,QAAQ,EAAE,CAAC;oBACXC,cAAc,EAAE,IAAI;oBACpBC,cAAc,EAAE;kBAClB;gBAAA;cAAA,CACA,CAAC;cAEG1B,kBAAkB,GAAGD,gBAAgB,CAAChE,MAAM,CAAC,UAAA4F,IAAI;gBAAA,OACrD,CAACnC,YAAY,CAACoC,IAAI,CAAC,UAAAC,SAAS;kBAAA,OAAIpL,iBAAiB,CAACkL,IAAI,EAAEE,SAAS,CAAC;gBAAA;cAAA,CACpE,CAAC;cAEDrC,YAAY,MAAAvF,MAAA,CAAAC,kBAAA,CAAOsF,YAAY,GAAAtF,kBAAA,CAAK8F,kBAAkB,EAAC;cAAA,MAEnDR,YAAY,CAAC9G,MAAM,IAAI2G,KAAK;gBAAAe,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAA,OAAAgF,SAAA,CAAA/E,MAAA,WACvBmE,YAAY,CAACsC,KAAK,CAAC,CAAC,EAAEzC,KAAK,CAAC;YAAA;cAGrCE,UAAU,EAAE;cAAAa,SAAA,CAAAhF,IAAA;cAAA;YAAA;cAAAgF,SAAA,CAAAjF,IAAA;cAAAiF,SAAA,CAAA2B,EAAA,GAAA3B,SAAA;cAGZ9E,OAAO,CAAChE,KAAK,YAAA2C,MAAA,CAAYsF,UAAU,GAAG,CAAC,eAAAa,SAAA,CAAA2B,EAAiB,CAAC;cACzDxC,UAAU,EAAE;cAAA,MAER,EAAAU,eAAA,GAAAG,SAAA,CAAA2B,EAAA,CAAM/E,QAAQ,cAAAiD,eAAA,uBAAdA,eAAA,CAAgB+B,MAAM,MAAK,GAAG;gBAAA5B,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAAgF,SAAA,CAAAhF,IAAA;cAAA,OAC1B,IAAIO,OAAO,CAAC,UAAAqC,OAAO;gBAAA,OAAIiD,UAAU,CAACjD,OAAO,EAAE,IAAI,GAAGuB,UAAU,CAAC;cAAA,EAAC;YAAA;cAAAa,SAAA,CAAAhF,IAAA;cAAA;YAAA;cAAA,MAC3DmE,UAAU,KAAKD,UAAU;gBAAAc,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAA,MAC5B,IAAIc,KAAK,qDAAAjC,MAAA,CAAqDqF,UAAU,iBAAArF,MAAA,CAAc,EAAAiG,gBAAA,GAAAE,SAAA,CAAA2B,EAAA,CAAM/E,QAAQ,cAAAkD,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBpB,IAAI,cAAAoB,gBAAA,gBAAAA,gBAAA,GAApBA,gBAAA,CAAsB5I,KAAK,cAAA4I,gBAAA,uBAA3BA,gBAAA,CAA6B3D,OAAO,KAAI6D,SAAA,CAAA2B,EAAA,CAAMxF,OAAO,CAAE,CAAC;YAAA;cAAA6D,SAAA,CAAAhF,IAAA;cAAA,OAE9I,IAAIO,OAAO,CAAC,UAAAqC,OAAO;gBAAA,OAAIiD,UAAU,CAACjD,OAAO,EAAE,IAAI,CAAC;cAAA,EAAC;YAAA;cAAAoC,SAAA,CAAAhF,IAAA;cAAA;YAAA;cAAA,MAKzDoE,YAAY,CAAC9G,MAAM,GAAG2G,KAAK;gBAAAe,SAAA,CAAAhF,IAAA;gBAAA;cAAA;cAAA,MACvB,IAAIc,KAAK,wBAAAjC,MAAA,CAAwBuF,YAAY,CAAC9G,MAAM,+BAAAuB,MAAA,CAA4BoF,KAAK,qFAAkF,CAAC;YAAA;cAAA,OAAAe,SAAA,CAAA/E,MAAA,WAGzKmE,YAAY;YAAA;YAAA;cAAA,OAAAY,SAAA,CAAA3D,IAAA;UAAA;QAAA,GAAA2C,QAAA;MAAA,CACrB;MAAA,OAAAD,kBAAA,CAAAzC,KAAA,OAAAC,SAAA;IAAA;IAGA,IAAMsF,yBAAyB,GAAGtM,QAAQ,CAAC,YAAM;MAC/C,OAAO+B,iBAAiB,CAACU,KAAK,CAACoD,GAAG,CAAC,UAAC0F,CAAC,EAAE9G,KAAK;QAAA,IAAA8H,qBAAA,EAAAC,sBAAA;QAAA,OAAM;UAChDpD,IAAI,EAAEmC,CAAC,CAACnC,IAAI;UACZhF,IAAI,EAAEmH,CAAC,CAACnH,IAAI;UACZqI,OAAO,EAAElB,CAAC,CAACkB,OAAO;UAClB/E,UAAU,GAAA6E,qBAAA,GAAEvK,aAAa,CAACS,KAAK,CAACgC,KAAK,CAAC,cAAA8H,qBAAA,uBAA1BA,qBAAA,CAA4B7E,UAAU;UAClDgF,aAAa,EAAEnB,CAAC,CAACmB,aAAa;UAC9BC,WAAW,EAAEpB,CAAC,CAACoB,WAAW;UAC1BhF,SAAS,GAAA6E,sBAAA,GAAExK,aAAa,CAACS,KAAK,CAACgC,KAAK,CAAC,cAAA+H,sBAAA,uBAA1BA,sBAAA,CAA4BjF;QACzC,CAAC;MAAA,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAMqF,2BAA2B,GAAG5M,QAAQ,CAAC,YAAM;MACjD,OAAOgC,aAAa,CAACS,KAAK,CAACoD,GAAG,CAAC,UAAAgH,CAAC;QAAA,OAAIA,CAAC,CAACnF,UAAU;MAAA,EAAC;IACnD,CAAC,CAAC;IAEF,IAAMoF,mBAAmB,GAAG9M,QAAQ,CAAC,YAAM;MACzC,OAAOgC,aAAa,CAACS,KAAK,CAAC2D,MAAM,CAAC,UAAAyG,CAAC;QAAA,OAAIA,CAAC,CAACtF,OAAO;MAAA,EAAC,CAACxE,MAAM;IAC1D,CAAC,CAAC;;IAEF;IACA,IAAMgK,KAAK,GAAG/M,QAAQ,CAAC,YAAM;MAC3B,IAAI,CAACgC,aAAa,CAACS,KAAK,IAAIT,aAAa,CAACS,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;MACtE,OAAOiK,IAAI,CAACC,KAAK,CAAEH,mBAAmB,CAACrK,KAAK,GAAGT,aAAa,CAACS,KAAK,CAACM,MAAM,GAAI,GAAG,CAAC;IACnF,CAAC,CAAC;;IAEF;IACA,IAAM8E,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;MAAA,IAAAqF,qBAAA;MAC5B,IAAMC,UAAU,GAAG;QACjBC,KAAK,EAAE,EAAAF,qBAAA,GAAA7L,aAAa,CAACoB,KAAK,CAAC,CAAC,CAAC,cAAAyK,qBAAA,uBAAtBA,qBAAA,CAAwBnH,IAAI,KAAI,eAAe;QACtDgH,KAAK,EAAEA,KAAK,CAACtK,KAAK;QAClB4K,eAAe,EAAEtL,iBAAiB,CAACU,KAAK,CAACM,MAAM;QAC/CuK,QAAQ,EAAE,CAAC;QAAE;QACblI,SAAS,EAAErD,iBAAiB,CAACU,KAAK,CAACoD,GAAG,CAAC,UAAC0F,CAAC,EAAE9G,KAAK;UAAA,IAAA8I,sBAAA,EAAAC,sBAAA;UAAA,OAAM;YACpDhC,EAAE,EAAED,CAAC,CAACC,EAAE;YACRpC,IAAI,EAAEmC,CAAC,CAACnC,IAAI;YACZhF,IAAI,EAAEmH,CAAC,CAACnH,IAAI;YACZqI,OAAO,EAAElB,CAAC,CAACkB,OAAO;YAClB/E,UAAU,GAAA6F,sBAAA,GAAEvL,aAAa,CAACS,KAAK,CAACgC,KAAK,CAAC,cAAA8I,sBAAA,uBAA1BA,sBAAA,CAA4B7F,UAAU;YAClDgF,aAAa,EAAEnB,CAAC,CAACmB,aAAa;YAC9B/E,SAAS,GAAA6F,sBAAA,GAAExL,aAAa,CAACS,KAAK,CAACgC,KAAK,CAAC,cAAA+I,sBAAA,uBAA1BA,sBAAA,CAA4BjG,OAAO;YAC9CoF,WAAW,EAAEpB,CAAC,CAACoB,WAAW;YAC1Bc,UAAU,EAAElC,CAAC,CAACkC;UAChB,CAAC;QAAA,CAAC;MACJ,CAAC;;MAED;MACAvM,KAAK,CAACsB,QAAQ,CAAC,kBAAkB,EAAE2K,UAAU,CAAC;;MAE9C;MACAjM,KAAK,CAACwM,MAAM,CAAC,iBAAiB,EAAE3L,iBAAiB,CAACU,KAAK,CAAC;MAExDN,UAAU,CAACM,KAAK,GAAG,KAAK;MACxBL,WAAW,CAACK,KAAK,GAAG,CAAC,CAAC;IACxB,CAAC;;IAED;IACA,IAAMkL,gBAAgB;MAAA,IAAAC,KAAA,GAAA/I,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA8I,SAAOC,YAAY;QAAA,IAAA5J,IAAA,EAAAiB,sBAAA,EAAAC,SAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAA0I,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxI,IAAA,GAAAwI,SAAA,CAAAvI,IAAA;YAAA;cAC1C;cACArD,WAAW,CAACK,KAAK,GAAGH,WAAW,CAACG,KAAK,CAACwL,SAAS,CAAC,UAAAC,IAAI;gBAAA,OAClDA,IAAI,CAAC7E,QAAQ,KAAKyE,YAAY,CAACzE,QAAQ,IACvC6E,IAAI,CAACzM,aAAa,KAAKqM,YAAY,CAACrM,aAAa,IACjDyM,IAAI,CAACC,WAAW,KAAKL,YAAY,CAACK,WAAU;cAAA,CAC9C,CAAC;cAAA,MAEG/L,WAAW,CAACK,KAAK,KAAK,CAAC,CAAC;gBAAAuL,SAAA,CAAAvI,IAAA;gBAAA;cAAA;cAC1BE,OAAO,CAAChE,KAAK,CAAC,wCAAwC,CAAC;cAAA,OAAAqM,SAAA,CAAAtI,MAAA;YAAA;cAIzDvD,UAAU,CAACM,KAAK,GAAG,IAAI;;cAEvB;cACAZ,WAAW,CAACY,KAAK,GAAG,KAAK;cACzBX,YAAY,CAACW,KAAK,GAAG,KAAK;cAC1Bb,cAAc,CAACa,KAAK,GAAG,IAAI;cAC3Bd,KAAK,CAACc,KAAK,GAAG,EAAE;cAChBV,iBAAiB,CAACU,KAAK,GAAG,EAAE;cAC5BT,aAAa,CAACS,KAAK,GAAG,EAAE;cACxBP,YAAY,CAACO,KAAK,GAAG,IAAI,CAAC,CAAE;;cAE5B;cACAhB,aAAa,CAACgB,KAAK,GAAGqL,YAAY,CAACrM,aAAa,CAAC2M,QAAQ,CAAC,CAAC;;cAE3D;cACMlK,IAAI,GAAG,IAAImK,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEP,YAAY,CAACzE,QAAQ,EAAE;gBACjDjF,IAAI,EAAE;cACR,CAAC,CAAC,EAEF;cACA/C,aAAa,CAACoB,KAAK,GAAG,CAACyB,IAAI,CAAC;cAC5BjC,gBAAgB,CAACQ,KAAK,GAAGqL,YAAY,CAACK,WAAW;;cAEjD;cAAAH,SAAA,CAAAxI,IAAA;cAEE9D,SAAS,CAACe,KAAK,GAAG,IAAI;cAChB0C,sBAAsB,GAAGsB,MAAM,CAAChF,aAAa,CAACgB,KAAK,CAAC;cAAAuL,SAAA,CAAAvI,IAAA;cAAA,OAElCiB,iBAAiB,CAACzE,gBAAgB,CAACQ,KAAK,EAAE0C,sBAAsB,CAAC;YAAA;cAAnFC,SAAS,GAAA4I,SAAA,CAAA7H,IAAA;cAAA,MACX,CAACf,SAAS,IAAIA,SAAS,CAACrC,MAAM,KAAK,CAAC;gBAAAiL,SAAA,CAAAvI,IAAA;gBAAA;cAAA;cAAA,MAChC,IAAIc,KAAK,CAAC,wCAAwC,CAAC;YAAA;cAG3DxE,iBAAiB,CAACU,KAAK,GAAG2C,SAAS;cACnCxD,cAAc,CAACa,KAAK,GAAG9B,uBAAuB,CAACoB,iBAAiB,CAACU,KAAK,CAAC;;cAEvE;cACAZ,WAAW,CAACY,KAAK,GAAG,IAAI;cAAAuL,SAAA,CAAAvI,IAAA;cAAA;YAAA;cAAAuI,SAAA,CAAAxI,IAAA;cAAAwI,SAAA,CAAArH,EAAA,GAAAqH,SAAA;cAExBrM,KAAK,CAACc,KAAK,kCAAA6B,MAAA,CAAkC0J,SAAA,CAAArH,EAAA,CAAIC,OAAO,CAAE;cAC1D;cACAzE,UAAU,CAACM,KAAK,GAAG,KAAK;cACxBL,WAAW,CAACK,KAAK,GAAG,CAAC,CAAC;YAAA;cAAAuL,SAAA,CAAAxI,IAAA;cAEtB9D,SAAS,CAACe,KAAK,GAAG,KAAK;cAAA,OAAAuL,SAAA,CAAAnH,MAAA;YAAA;YAAA;cAAA,OAAAmH,SAAA,CAAAlH,IAAA;UAAA;QAAA,GAAA+G,QAAA;MAAA,CAE1B;MAAA,gBA3DKF,gBAAgBA,CAAAW,GAAA;QAAA,OAAAV,KAAA,CAAA7G,KAAA,OAAAC,SAAA;MAAA;IAAA,GA2DrB;;IAED;IACA,IAAMuH,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;MAC7BlM,SAAS,CAACI,KAAK,GAAG,KAAK;MACvBP,YAAY,CAACO,KAAK,GAAG,IAAI;MACzBZ,WAAW,CAACY,KAAK,GAAG,KAAK;MACzBX,YAAY,CAACW,KAAK,GAAG,KAAK;MAC1Bb,cAAc,CAACa,KAAK,GAAG,IAAI;MAC3BpB,aAAa,CAACoB,KAAK,GAAG,EAAE;MACxBhB,aAAa,CAACgB,KAAK,GAAG,EAAE;MACxBd,KAAK,CAACc,KAAK,GAAG,EAAE;MAChBR,gBAAgB,CAACQ,KAAK,GAAG,EAAE;MAC3BV,iBAAiB,CAACU,KAAK,GAAG,EAAE;MAC5BT,aAAa,CAACS,KAAK,GAAG,EAAE;MACxBN,UAAU,CAACM,KAAK,GAAG,KAAK;MACxBL,WAAW,CAACK,KAAK,GAAG,CAAC,CAAC;IACxB,CAAC;;IAED;IACA,IAAM+L,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;MACzB,IAAIC,OAAO,CAAC,yEAAyE,CAAC,EAAE;QACtFvN,KAAK,CAACsB,QAAQ,CAAC,kBAAkB,CAAC;MACpC;IACF,CAAC;;IAED;IACA,IAAMkM,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIR,IAAI,EAAK;MACjC,IAAI7L,SAAS,CAACI,KAAK,EAAE;QACnBJ,SAAS,CAACI,KAAK,GAAG,KAAK;QACvB;QACA6I,UAAU,CAAC,YAAM;UACfpJ,YAAY,CAACO,KAAK,GAAGyL,IAAI;QAC3B,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACLhM,YAAY,CAACO,KAAK,GAAGyL,IAAI;MAC3B;IACF,CAAC;;IAED;IACA,IAAMS,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;MACtCtM,SAAS,CAACI,KAAK,GAAG,KAAK;MACvB8L,gBAAgB,CAAC,CAAC;IACpB,CAAC;IAED,IAAMK,aAAa,GAAG7O,GAAG,CAAC,KAAK,CAAC;;IAEhC;IACA,IAAM2C,WAAW;MAAA,IAAAmM,KAAA,GAAAhK,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA+J,SAAA;QAAA,OAAAhK,mBAAA,GAAAO,IAAA,UAAA0J,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxJ,IAAA,GAAAwJ,SAAA,CAAAvJ,IAAA;YAAA;cAAAuJ,SAAA,CAAAxJ,IAAA;cAAA,KAEZpE,IAAI,CAACqB,KAAK;gBAAAuM,SAAA,CAAAvJ,IAAA;gBAAA;cAAA;cAAAuJ,SAAA,CAAAvJ,IAAA;cAAA,OAENvE,KAAK,CAACsB,QAAQ,CAAC,iBAAiB,CAAC;YAAA;cAAAwM,SAAA,CAAAvJ,IAAA;cAAA;YAAA;cAAAuJ,SAAA,CAAAxJ,IAAA;cAAAwJ,SAAA,CAAArI,EAAA,GAAAqI,SAAA;cAGzCrJ,OAAO,CAAChE,KAAK,CAAC,wBAAwB,EAAAqN,SAAA,CAAArI,EAAK,CAAC;YAAA;YAAA;cAAA,OAAAqI,SAAA,CAAAlI,IAAA;UAAA;QAAA,GAAAgI,QAAA;MAAA,CAE/C;MAAA,gBATKpM,WAAWA,CAAA;QAAA,OAAAmM,KAAA,CAAA9H,KAAA,OAAAC,SAAA;MAAA;IAAA,GAShB;;IAED;IACA9G,KAAK,CAACkB,IAAI;MAAA,IAAA6N,KAAA,GAAApK,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAmK,SAAOC,OAAO;QAAA,OAAArK,mBAAA,GAAAO,IAAA,UAAA+J,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7J,IAAA,GAAA6J,SAAA,CAAA5J,IAAA;YAAA;cAAA,KACpB0J,OAAO;gBAAAE,SAAA,CAAA5J,IAAA;gBAAA;cAAA;cAAA4J,SAAA,CAAA5J,IAAA;cAAA,OAEH/C,WAAW,CAAC,CAAC;YAAA;cAAA2M,SAAA,CAAA5J,IAAA;cAAA;YAAA;cAEnB;cACAvE,KAAK,CAACwM,MAAM,CAAC,kBAAkB,CAAC;YAAA;YAAA;cAAA,OAAA2B,SAAA,CAAAvI,IAAA;UAAA;QAAA,GAAAoI,QAAA;MAAA,CAEnC;MAAA,iBAAAI,GAAA;QAAA,OAAAL,KAAA,CAAAlI,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;IAEF,IAAMuI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,eAAe,EAAK;MAChD;MACA,IAAM/K,KAAK,GAAG1C,iBAAiB,CAACU,KAAK,CAACwL,SAAS,CAAC,UAAA1C,CAAC;QAAA,OAAIA,CAAC,CAACC,EAAE,KAAKgE,eAAe,CAAChE,EAAE;MAAA,EAAC;MACjF,IAAI/G,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB1C,iBAAiB,CAACU,KAAK,CAACgC,KAAK,CAAC,GAAAgD,aAAA,CAAAA,aAAA,KACzB1F,iBAAiB,CAACU,KAAK,CAACgC,KAAK,CAAC,GAC9B+K,eAAc,CAClB;MACH;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}